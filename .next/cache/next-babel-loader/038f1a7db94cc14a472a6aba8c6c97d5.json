{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar Image_1 = require(\"../Image/Image\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar Icon_styles_1 = require(\"./Icon.styles\");\n/**\n * Fast icon component which only supports images (not font glyphs) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\n\n\nexports.ImageIcon = function (props) {\n  var className = props.className,\n      imageProps = props.imageProps;\n  var nativeProps = Utilities_1.getNativeProps(props, Utilities_1.htmlElementProperties);\n  var containerProps = props['aria-label'] ? {} : {\n    role: 'presentation',\n    'aria-hidden': imageProps.alt || imageProps['aria-labelledby'] ? false : true\n  };\n  return React.createElement(\"div\", tslib_1.__assign({}, containerProps, nativeProps, {\n    className: Utilities_1.css(Icon_styles_1.MS_ICON, Icon_styles_1.classNames.root, Icon_styles_1.classNames.image, className)\n  }), React.createElement(Image_1.Image, tslib_1.__assign({}, imageProps)));\n};","map":{"version":3,"sources":["components/Icon/ImageIcon.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAGA,IAAA,OAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAEA;;;;;;;AAKa,OAAA,CAAA,SAAA,GAAsD,UAAA,KAAA,EAAK;AAC9D,MAAA,SAAA,GAAA,KAAA,CAAA,SAAA;AAAA,MAAW,UAAA,GAAA,KAAA,CAAA,UAAX;AAER,MAAM,WAAW,GAAG,WAAA,CAAA,cAAA,CAAqD,KAArD,EAA4D,WAAA,CAAA,qBAA5D,CAApB;AAEA,MAAM,cAAc,GAAG,KAAK,CAAC,YAAD,CAAL,GACnB,EADmB,GAEnB;AACE,IAAA,IAAI,EAAE,cADR;AAEE,mBAAe,UAAU,CAAC,GAAX,IAAkB,UAAU,CAAC,iBAAD,CAA5B,GAAkD,KAAlD,GAA0D;AAF3E,GAFJ;AAOA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EAAS,cAAT,EAA6B,WAA7B,EAAwC;AAAE,IAAA,SAAS,EAAE,WAAA,CAAA,GAAA,CAAI,aAAA,CAAA,OAAJ,EAAa,aAAA,CAAA,UAAA,CAAW,IAAxB,EAA8B,aAAA,CAAA,UAAA,CAAW,KAAzC,EAAgD,SAAhD;AAAb,GAAxC,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,OAAA,CAAA,KAAD,EAAM,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,UAAL,CAAN,CADF,CADF;AAKD,CAjBY","sourcesContent":["import * as React from 'react';\n\nimport { IImageIconProps } from './Icon.types';\nimport { Image } from '../Image/Image';\nimport { css, getNativeProps, htmlElementProperties } from '../../Utilities';\nimport { classNames, MS_ICON } from './Icon.styles';\n\n/**\n * Fast icon component which only supports images (not font glyphs) and can't be targeted by customizations.\n * To style the icon, use `className` or reference `ms-Icon` in CSS.\n * {@docCategory Icon}\n */\nexport const ImageIcon: React.FunctionComponent<IImageIconProps> = props => {\n  const { className, imageProps } = props;\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, htmlElementProperties);\n\n  const containerProps = props['aria-label']\n    ? {}\n    : {\n        role: 'presentation',\n        'aria-hidden': imageProps.alt || imageProps['aria-labelledby'] ? false : true\n      };\n\n  return (\n    <div {...containerProps} {...nativeProps} className={css(MS_ICON, classNames.root, classNames.image, className)}>\n      <Image {...imageProps} />\n    </div>\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}