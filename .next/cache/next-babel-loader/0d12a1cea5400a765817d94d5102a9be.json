{"ast":null,"code":"import { hsv2rgb } from './hsv2rgb';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n/**\n * Gets a color with the same saturation and value as `color` and the other components updated\n * to match the given hue.\n *\n * Does not modify the original `color` and does not supply a default alpha value.\n */\n\nexport function updateH(color, h) {\n  var _a = hsv2rgb(h, color.s, color.v),\n      r = _a.r,\n      g = _a.g,\n      b = _a.b;\n\n  var hex = rgb2hex(r, g, b);\n  return {\n    a: color.a,\n    b: b,\n    g: g,\n    h: h,\n    hex: hex,\n    r: r,\n    s: color.s,\n    str: _rgbaOrHexString(r, g, b, color.a, hex),\n    v: color.v\n  };\n}","map":{"version":3,"sources":["utilities/color/updateH.ts"],"names":[],"mappings":"AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAEA;;;;;;;AAMA,OAAM,SAAU,OAAV,CAAkB,KAAlB,EAAiC,CAAjC,EAA0C;AACxC,MAAA,EAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAAA,MAAE,CAAA,GAAA,EAAA,CAAA,CAAF;AAAA,MAAK,CAAA,GAAA,EAAA,CAAA,CAAL;AAAA,MAAQ,CAAA,GAAA,EAAA,CAAA,CAAR;;AACN,MAAM,GAAG,GAAG,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnB;AAEA,SAAO;AACL,IAAA,CAAC,EAAE,KAAK,CAAC,CADJ;AAEL,IAAA,CAAC,EAAE,CAFE;AAGL,IAAA,CAAC,EAAE,CAHE;AAIL,IAAA,CAAC,EAAE,CAJE;AAKL,IAAA,GAAG,EAAE,GALA;AAML,IAAA,CAAC,EAAE,CANE;AAOL,IAAA,CAAC,EAAE,KAAK,CAAC,CAPJ;AAQL,IAAA,GAAG,EAAE,gBAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,KAAK,CAAC,CAAhB,EAAmB,GAAnB,CARhB;AASL,IAAA,CAAC,EAAE,KAAK,CAAC;AATJ,GAAP;AAWD","sourcesContent":["import { IColor } from './interfaces';\nimport { hsv2rgb } from './hsv2rgb';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n\n/**\n * Gets a color with the same saturation and value as `color` and the other components updated\n * to match the given hue.\n *\n * Does not modify the original `color` and does not supply a default alpha value.\n */\nexport function updateH(color: IColor, h: number): IColor {\n  const { r, g, b } = hsv2rgb(h, color.s, color.v);\n  const hex = rgb2hex(r, g, b);\n\n  return {\n    a: color.a,\n    b: b,\n    g: g,\n    h: h,\n    hex: hex,\n    r: r,\n    s: color.s,\n    str: _rgbaOrHexString(r, g, b, color.a, hex),\n    v: color.v\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}