{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n/**\n * Gets a color with the given alpha value and the same other components as `color`.\n * Does not modify the original color.\n */\n\nexport function updateA(color, a) {\n  return tslib_1.__assign({}, color, {\n    a: a,\n    str: _rgbaOrHexString(color.r, color.g, color.b, a, color.hex)\n  });\n}","map":{"version":3,"sources":["utilities/color/updateA.ts"],"names":[],"mappings":";AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAEA;;;;;AAIA,OAAM,SAAU,OAAV,CAAkB,KAAlB,EAAiC,CAAjC,EAA0C;AAC9C,SAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EACK,KADL,EACU;AACR,IAAA,CAAC,EAAE,CADK;AAER,IAAA,GAAG,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAP,EAAU,KAAK,CAAC,CAAhB,EAAmB,KAAK,CAAC,CAAzB,EAA4B,CAA5B,EAA+B,KAAK,CAAC,GAArC;AAFb,GADV,CAAA;AAKD","sourcesContent":["import { IColor } from './interfaces';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n\n/**\n * Gets a color with the given alpha value and the same other components as `color`.\n * Does not modify the original color.\n */\nexport function updateA(color: IColor, a: number): IColor {\n  return {\n    ...color,\n    a: a,\n    str: _rgbaOrHexString(color.r, color.g, color.b, a, color.hex)\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}