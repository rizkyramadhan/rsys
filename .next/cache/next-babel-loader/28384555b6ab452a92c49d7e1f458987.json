{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar GroupSpacer_1 = require(\"./GroupSpacer\");\n\nvar getClassNames = Utilities_1.classNamesFunction();\n\nexports.GroupFooterBase = function (props) {\n  var group = props.group,\n      groupLevel = props.groupLevel,\n      footerText = props.footerText,\n      indentWidth = props.indentWidth,\n      styles = props.styles,\n      theme = props.theme;\n  var classNames = getClassNames(styles, {\n    theme: theme\n  });\n\n  if (group && footerText) {\n    return React.createElement(\"div\", {\n      className: classNames.root\n    }, React.createElement(GroupSpacer_1.GroupSpacer, {\n      indentWidth: indentWidth,\n      count: groupLevel\n    }), footerText);\n  }\n\n  return null;\n};","map":{"version":3,"sources":["components/GroupedList/GroupFooter.base.tsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAM,aAAa,GAAG,WAAA,CAAA,kBAAA,EAAtB;;AAEa,OAAA,CAAA,eAAA,GAA8D,UAAA,KAAA,EAAK;AACtE,MAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AAAA,MAAO,UAAA,GAAA,KAAA,CAAA,UAAP;AAAA,MAAmB,UAAA,GAAA,KAAA,CAAA,UAAnB;AAAA,MAA+B,WAAA,GAAA,KAAA,CAAA,WAA/B;AAAA,MAA4C,MAAA,GAAA,KAAA,CAAA,MAA5C;AAAA,MAAoD,KAAA,GAAA,KAAA,CAAA,KAApD;AACR,MAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;AAAE,IAAA,KAAK,EAAE;AAAT,GAAT,CAAhC;;AAEA,MAAI,KAAK,IAAI,UAAb,EAAyB;AACvB,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC;AAA3B,KAAA,EACE,KAAA,CAAA,aAAA,CAAC,aAAA,CAAA,WAAD,EAAY;AAAC,MAAA,WAAW,EAAE,WAAd;AAA2B,MAAA,KAAK,EAAE;AAAlC,KAAZ,CADF,EAEG,UAFH,CADF;AAMD;;AAED,SAAO,IAAP;AACD,CAdY","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { GroupSpacer } from './GroupSpacer';\nimport { IGroupFooterStyleProps, IGroupFooterStyles, IGroupFooterProps } from './GroupFooter.types';\nconst getClassNames = classNamesFunction<IGroupFooterStyleProps, IGroupFooterStyles>();\n\nexport const GroupFooterBase: React.FunctionComponent<IGroupFooterProps> = props => {\n  const { group, groupLevel, footerText, indentWidth, styles, theme } = props;\n  const classNames = getClassNames(styles, { theme: theme! });\n\n  if (group && footerText) {\n    return (\n      <div className={classNames.root}>\n        <GroupSpacer indentWidth={indentWidth} count={groupLevel!} />\n        {footerText}\n      </div>\n    );\n  }\n\n  return null;\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}