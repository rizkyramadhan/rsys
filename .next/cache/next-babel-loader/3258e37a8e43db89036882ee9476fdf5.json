{"ast":null,"code":"import { HighContrastSelector } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nexport function standardStyles(theme) {\n  var _a, _b, _c, _d;\n\n  var s = theme.semanticColors,\n      p = theme.palette;\n  var buttonBackground = s.buttonBackground;\n  var buttonBackgroundPressed = s.buttonBackgroundPressed;\n  var buttonBackgroundHovered = s.buttonBackgroundHovered;\n  var buttonText = s.buttonText;\n  var buttonTextHovered = s.buttonTextHovered;\n  var buttonTextChecked = s.buttonTextChecked;\n  var buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText\n    },\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Highlight',\n        color: 'Highlight'\n      }, _a)\n    },\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered\n    },\n    rootDisabled: {\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _b)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        border: 'none'\n      }, _c)\n    },\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: (_d = {}, _d[HighContrastSelector] = {\n            color: 'Highlight'\n          }, _d)\n        }\n      }\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonDivider: {\n      backgroundColor: p.neutralTertiaryAlt\n    },\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.buttonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled\n    }\n  };\n}\nexport function primaryStyles(theme) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n\n  var p = theme.palette,\n      s = theme.semanticColors;\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      border: 'none',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        MsHighContrastAdjust: 'none'\n      }, _a[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        selectors: {\n          ':after': {\n            outline: \"none\",\n            borderColor: p.white\n          }\n        }\n      }, _a)\n    },\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      color: s.primaryButtonTextHovered,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'Highlight'\n      }, _b)\n    },\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        MsHighContrastAdjust: 'none'\n      }, _c)\n    },\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootDisabled: {\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _d)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none'\n      }, _e)\n    },\n    splitButtonDivider: {\n      backgroundColor: p.neutralTertiaryAlt\n    },\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: (_f = {}, _f[HighContrastSelector] = {\n            color: 'Highlight'\n          }, _f)\n        }\n      }\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n      selectors: (_g = {}, _g[HighContrastSelector] = {\n        color: 'Window'\n      }, _g)\n    },\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n      selectors: (_h = {}, _h[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _h)\n    }\n  };\n}","map":{"version":3,"sources":["components/Button/ButtonThemes.ts"],"names":[],"mappings":"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","sourcesContent":["import { IButtonStyles } from './Button.types';\nimport { ITheme, HighContrastSelector } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight'\n        }\n      }\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered\n    },\n\n    rootDisabled: {\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window'\n        }\n      }\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none'\n        }\n      }\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight'\n            }\n          }\n        }\n      }\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled\n        }\n      }\n    },\n\n    splitButtonDivider: {\n      backgroundColor: p.neutralTertiaryAlt\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled\n    }\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      border: 'none',\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          MsHighContrastAdjust: 'none'\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              outline: `none`,\n              borderColor: p.white\n            }\n          }\n        }\n      }\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight'\n        }\n      }\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          MsHighContrastAdjust: 'none'\n        }\n      }\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n\n    rootDisabled: {\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window'\n        }\n      }\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none'\n        }\n      }\n    },\n\n    splitButtonDivider: {\n      backgroundColor: p.neutralTertiaryAlt\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight'\n            }\n          }\n        }\n      }\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled\n        }\n      }\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window'\n        }\n      }\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText'\n        }\n      }\n    }\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}