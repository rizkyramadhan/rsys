{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { buttonProperties, getNativeProps, memoizeFunction } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { getIsChecked, isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\n\nvar ContextualMenuButton =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ContextualMenuButton, _super);\n\n  function ContextualMenuButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._btn = React.createRef();\n    _this._getMemoizedMenuButtonKeytipProps = memoizeFunction(function (keytipProps) {\n      return tslib_1.__assign({}, keytipProps, {\n        hasMenu: true\n      });\n    });\n\n    _this._getSubmenuTarget = function () {\n      return _this._btn.current ? _this._btn.current : undefined;\n    };\n\n    return _this;\n  }\n\n  ContextualMenuButton.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        item = _a.item,\n        classNames = _a.classNames,\n        index = _a.index,\n        focusableElementIndex = _a.focusableElementIndex,\n        totalItemCount = _a.totalItemCount,\n        hasCheckmarks = _a.hasCheckmarks,\n        hasIcons = _a.hasIcons,\n        _b = _a.contextualMenuItemAs,\n        ChildrenRenderer = _b === void 0 ? ContextualMenuItem : _b,\n        expandedMenuItemKey = _a.expandedMenuItemKey,\n        onItemMouseDown = _a.onItemMouseDown,\n        onItemClick = _a.onItemClick,\n        openSubMenu = _a.openSubMenu,\n        dismissSubMenu = _a.dismissSubMenu,\n        dismissMenu = _a.dismissMenu;\n\n    var subMenuId = this._getSubMenuId(item);\n\n    var isChecked = getIsChecked(item);\n    var canCheck = isChecked !== null;\n    var defaultRole = canCheck ? 'menuitemcheckbox' : 'menuitem';\n    var itemHasSubmenu = hasSubmenu(item);\n    var itemProps = item.itemProps,\n        ariaLabel = item.ariaLabel;\n    var buttonNativeProperties = getNativeProps(item, buttonProperties); // Do not add the disabled attribute to the button so that it is focusable\n\n    delete buttonNativeProperties.disabled;\n    var itemButtonProperties = {\n      className: classNames.root,\n      onClick: this._onItemClick,\n      onKeyDown: itemHasSubmenu ? this._onItemKeyDown : undefined,\n      onMouseEnter: this._onItemMouseEnter,\n      onMouseLeave: this._onItemMouseLeave,\n      onMouseDown: function (ev) {\n        return onItemMouseDown ? onItemMouseDown(item, ev) : undefined;\n      },\n      onMouseMove: this._onItemMouseMove,\n      href: item.href,\n      title: item.title,\n      'aria-label': ariaLabel,\n      'aria-haspopup': itemHasSubmenu || undefined,\n      'aria-owns': item.key === expandedMenuItemKey ? subMenuId : undefined,\n      'aria-expanded': itemHasSubmenu ? item.key === expandedMenuItemKey : undefined,\n      'aria-checked': canCheck ? !!isChecked : undefined,\n      'aria-posinset': focusableElementIndex + 1,\n      'aria-setsize': totalItemCount,\n      'aria-disabled': isItemDisabled(item),\n      role: item.role || defaultRole,\n      style: item.style\n    };\n    var keytipProps = item.keytipProps;\n\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    return React.createElement(KeytipData, {\n      keytipProps: keytipProps,\n      ariaDescribedBy: buttonNativeProperties['aria-describedby'],\n      disabled: isItemDisabled(item)\n    }, function (keytipAttributes) {\n      return React.createElement(\"button\", tslib_1.__assign({\n        ref: _this._btn\n      }, buttonNativeProperties, itemButtonProperties, keytipAttributes), React.createElement(ChildrenRenderer, tslib_1.__assign({\n        componentRef: item.componentRef,\n        item: item,\n        classNames: classNames,\n        index: index,\n        onCheckmarkClick: hasCheckmarks && onItemClick ? onItemClick : undefined,\n        hasIcons: hasIcons,\n        openSubMenu: openSubMenu,\n        dismissSubMenu: dismissSubMenu,\n        dismissMenu: dismissMenu,\n        getSubmenuTarget: _this._getSubmenuTarget\n      }, itemProps)));\n    });\n  };\n\n  return ContextualMenuButton;\n}(ContextualMenuItemWrapper);\n\nexport { ContextualMenuButton };","map":{"version":3,"sources":["components/ContextualMenu/ContextualMenuItemWrapper/ContextualMenuButton.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,gBAAT,EAA2B,cAA3B,EAA2C,eAA3C,QAAkE,oBAAlE;AACA,SAAS,yBAAT,QAA0C,6BAA1C;AACA,SAAS,UAAT,QAA2B,qBAA3B;AACA,SAAS,YAAT,EAAuB,cAAvB,EAAuC,UAAvC,QAAyD,yCAAzD;AACA,SAAS,kBAAT,QAAmC,uBAAnC;;AAIA,IAAA,oBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0C,EAAA,OAAA,CAAA,SAAA,CAAA,oBAAA,EAAA,MAAA;;AAA1C,WAAA,oBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACU,IAAA,KAAA,CAAA,IAAA,GAAO,KAAK,CAAC,SAAN,EAAP;AAEA,IAAA,KAAA,CAAA,iCAAA,GAAoC,eAAe,CAAC,UAAC,WAAD,EAA0B;AACpF,aAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EACK,WADL,EACgB;AACd,QAAA,OAAO,EAAE;AADK,OADhB,CAAA;AAID,KAL0D,CAAnD;;AAuFE,IAAA,KAAA,CAAA,iBAAA,GAAoB,YAAA;AAC5B,aAAO,KAAI,CAAC,IAAL,CAAU,OAAV,GAAoB,KAAI,CAAC,IAAL,CAAU,OAA9B,GAAwC,SAA/C;AACD,KAFS;;;AAGX;;AAnFQ,EAAA,oBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QACJ,IAAA,GAAA,EAAA,CAAA,IADI;AAAA,QAEJ,UAAA,GAAA,EAAA,CAAA,UAFI;AAAA,QAGJ,KAAA,GAAA,EAAA,CAAA,KAHI;AAAA,QAIJ,qBAAA,GAAA,EAAA,CAAA,qBAJI;AAAA,QAKJ,cAAA,GAAA,EAAA,CAAA,cALI;AAAA,QAMJ,aAAA,GAAA,EAAA,CAAA,aANI;AAAA,QAOJ,QAAA,GAAA,EAAA,CAAA,QAPI;AAAA,QAQJ,EAAA,GAAA,EAAA,CAAA,oBARI;AAAA,QAQJ,gBAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,kBAAA,GAAA,EARI;AAAA,QASJ,mBAAA,GAAA,EAAA,CAAA,mBATI;AAAA,QAUJ,eAAA,GAAA,EAAA,CAAA,eAVI;AAAA,QAWJ,WAAA,GAAA,EAAA,CAAA,WAXI;AAAA,QAYJ,WAAA,GAAA,EAAA,CAAA,WAZI;AAAA,QAaJ,cAAA,GAAA,EAAA,CAAA,cAbI;AAAA,QAcJ,WAAA,GAAA,EAAA,CAAA,WAdI;;AAiBN,QAAM,SAAS,GAAG,KAAK,aAAL,CAAmB,IAAnB,CAAlB;;AAEA,QAAM,SAAS,GAA+B,YAAY,CAAC,IAAD,CAA1D;AACA,QAAM,QAAQ,GAAY,SAAS,KAAK,IAAxC;AACA,QAAM,WAAW,GAAG,QAAQ,GAAG,kBAAH,GAAwB,UAApD;AACA,QAAM,cAAc,GAAG,UAAU,CAAC,IAAD,CAAjC;AACQ,QAAA,SAAA,GAAA,IAAA,CAAA,SAAA;AAAA,QAAW,SAAA,GAAA,IAAA,CAAA,SAAX;AAER,QAAM,sBAAsB,GAAG,cAAc,CAAgD,IAAhD,EAAsD,gBAAtD,CAA7C,CA1BF,CA2BE;;AACA,WAAO,sBAAsB,CAAC,QAA9B;AAEA,QAAM,oBAAoB,GAAG;AAC3B,MAAA,SAAS,EAAE,UAAU,CAAC,IADK;AAE3B,MAAA,OAAO,EAAE,KAAK,YAFa;AAG3B,MAAA,SAAS,EAAE,cAAc,GAAG,KAAK,cAAR,GAAyB,SAHvB;AAI3B,MAAA,YAAY,EAAE,KAAK,iBAJQ;AAK3B,MAAA,YAAY,EAAE,KAAK,iBALQ;AAM3B,MAAA,WAAW,EAAE,UAAC,EAAD,EAAwC;AAAK,eAAC,eAAe,GAAG,eAAe,CAAC,IAAD,EAAO,EAAP,CAAlB,GAAhB,SAAA;AAAyD,OANxF;AAO3B,MAAA,WAAW,EAAE,KAAK,gBAPS;AAQ3B,MAAA,IAAI,EAAE,IAAI,CAAC,IARgB;AAS3B,MAAA,KAAK,EAAE,IAAI,CAAC,KATe;AAU3B,oBAAc,SAVa;AAW3B,uBAAiB,cAAc,IAAI,SAXR;AAY3B,mBAAa,IAAI,CAAC,GAAL,KAAa,mBAAb,GAAmC,SAAnC,GAA+C,SAZjC;AAa3B,uBAAiB,cAAc,GAAG,IAAI,CAAC,GAAL,KAAa,mBAAhB,GAAsC,SAb1C;AAc3B,sBAAgB,QAAQ,GAAG,CAAC,CAAC,SAAL,GAAiB,SAdd;AAe3B,uBAAiB,qBAAqB,GAAG,CAfd;AAgB3B,sBAAgB,cAhBW;AAiB3B,uBAAiB,cAAc,CAAC,IAAD,CAjBJ;AAkB3B,MAAA,IAAI,EAAE,IAAI,CAAC,IAAL,IAAa,WAlBQ;AAmB3B,MAAA,KAAK,EAAE,IAAI,CAAC;AAnBe,KAA7B;AAsBM,QAAA,WAAA,GAAA,IAAA,CAAA,WAAA;;AACN,QAAI,WAAW,IAAI,cAAnB,EAAmC;AACjC,MAAA,WAAW,GAAG,KAAK,iCAAL,CAAuC,WAAvC,CAAd;AACD;;AAED,WACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,MAAA,WAAW,EAAE,WAAd;AAA2B,MAAA,eAAe,EAAE,sBAAsB,CAAC,kBAAD,CAAlE;AAAwF,MAAA,QAAQ,EAAE,cAAc,CAAC,IAAD;AAAhH,KAAX,EACG,UAAC,gBAAD,EAAmC;AAAkB,aACpD,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,OAAA,CAAA,QAAA,CAAA;AAAQ,QAAA,GAAG,EAAE,KAAI,CAAC;AAAlB,OAAA,EAA4B,sBAA5B,EAAwD,oBAAxD,EAAkF,gBAAlF,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB,OAAA,CAAA,QAAA,CAAA;AACf,QAAA,YAAY,EAAE,IAAI,CAAC,YADJ;AAEf,QAAA,IAAI,EAAE,IAFS;AAGf,QAAA,UAAU,EAAE,UAHG;AAIf,QAAA,KAAK,EAAE,KAJQ;AAKf,QAAA,gBAAgB,EAAE,aAAa,IAAI,WAAjB,GAA+B,WAA/B,GAA6C,SALhD;AAMf,QAAA,QAAQ,EAAE,QANK;AAOf,QAAA,WAAW,EAAE,WAPE;AAQf,QAAA,cAAc,EAAE,cARD;AASf,QAAA,WAAW,EAAE,WATE;AAUf,QAAA,gBAAgB,EAAE,KAAI,CAAC;AAVR,OAAA,EAFiC,SAEjC,CAAjB,CADF,CADoD;AAgBrD,KAjBH,CADF;AAqBD,GA9EM;;AAmFT,SAAA,oBAAA;AAAC,CA7FD,CAA0C,yBAA1C,CAAA","sourcesContent":["import * as React from 'react';\nimport { buttonProperties, getNativeProps, memoizeFunction } from '../../../Utilities';\nimport { ContextualMenuItemWrapper } from './ContextualMenuItemWrapper';\nimport { KeytipData } from '../../../KeytipData';\nimport { getIsChecked, isItemDisabled, hasSubmenu } from '../../../utilities/contextualMenu/index';\nimport { ContextualMenuItem } from '../ContextualMenuItem';\nimport { IKeytipDataProps } from '../../KeytipData/KeytipData.types';\nimport { IKeytipProps } from '../../Keytip/Keytip.types';\n\nexport class ContextualMenuButton extends ContextualMenuItemWrapper {\n  private _btn = React.createRef<HTMLButtonElement>();\n\n  private _getMemoizedMenuButtonKeytipProps = memoizeFunction((keytipProps: IKeytipProps) => {\n    return {\n      ...keytipProps,\n      hasMenu: true\n    };\n  });\n\n  public render() {\n    const {\n      item,\n      classNames,\n      index,\n      focusableElementIndex,\n      totalItemCount,\n      hasCheckmarks,\n      hasIcons,\n      contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem,\n      expandedMenuItemKey,\n      onItemMouseDown,\n      onItemClick,\n      openSubMenu,\n      dismissSubMenu,\n      dismissMenu\n    } = this.props;\n\n    const subMenuId = this._getSubMenuId(item);\n\n    const isChecked: boolean | null | undefined = getIsChecked(item);\n    const canCheck: boolean = isChecked !== null;\n    const defaultRole = canCheck ? 'menuitemcheckbox' : 'menuitem';\n    const itemHasSubmenu = hasSubmenu(item);\n    const { itemProps, ariaLabel } = item;\n\n    const buttonNativeProperties = getNativeProps<React.ButtonHTMLAttributes<HTMLButtonElement>>(item, buttonProperties);\n    // Do not add the disabled attribute to the button so that it is focusable\n    delete buttonNativeProperties.disabled;\n\n    const itemButtonProperties = {\n      className: classNames.root,\n      onClick: this._onItemClick,\n      onKeyDown: itemHasSubmenu ? this._onItemKeyDown : undefined,\n      onMouseEnter: this._onItemMouseEnter,\n      onMouseLeave: this._onItemMouseLeave,\n      onMouseDown: (ev: React.MouseEvent<HTMLButtonElement>) => (onItemMouseDown ? onItemMouseDown(item, ev) : undefined),\n      onMouseMove: this._onItemMouseMove,\n      href: item.href,\n      title: item.title,\n      'aria-label': ariaLabel,\n      'aria-haspopup': itemHasSubmenu || undefined,\n      'aria-owns': item.key === expandedMenuItemKey ? subMenuId : undefined,\n      'aria-expanded': itemHasSubmenu ? item.key === expandedMenuItemKey : undefined,\n      'aria-checked': canCheck ? !!isChecked : undefined,\n      'aria-posinset': focusableElementIndex + 1,\n      'aria-setsize': totalItemCount,\n      'aria-disabled': isItemDisabled(item),\n      role: item.role || defaultRole,\n      style: item.style\n    };\n\n    let { keytipProps } = item;\n    if (keytipProps && itemHasSubmenu) {\n      keytipProps = this._getMemoizedMenuButtonKeytipProps(keytipProps);\n    }\n\n    return (\n      <KeytipData keytipProps={keytipProps} ariaDescribedBy={buttonNativeProperties['aria-describedby']} disabled={isItemDisabled(item)}>\n        {(keytipAttributes: IKeytipDataProps): JSX.Element => (\n          <button ref={this._btn} {...buttonNativeProperties} {...itemButtonProperties} {...keytipAttributes}>\n            <ChildrenRenderer\n              componentRef={item.componentRef}\n              item={item}\n              classNames={classNames}\n              index={index}\n              onCheckmarkClick={hasCheckmarks && onItemClick ? onItemClick : undefined}\n              hasIcons={hasIcons}\n              openSubMenu={openSubMenu}\n              dismissSubMenu={dismissSubMenu}\n              dismissMenu={dismissMenu}\n              getSubmenuTarget={this._getSubmenuTarget}\n              {...itemProps}\n            />\n          </button>\n        )}\n      </KeytipData>\n    );\n  }\n\n  protected _getSubmenuTarget = (): HTMLElement | undefined => {\n    return this._btn.current ? this._btn.current : undefined;\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}