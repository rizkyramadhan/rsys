{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar getClassNames = Utilities_1.classNamesFunction();\n\nvar OverlayBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(OverlayBase, _super);\n\n  function OverlayBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  OverlayBase.prototype.componentDidMount = function () {\n    Utilities_1.disableBodyScroll();\n  };\n\n  OverlayBase.prototype.componentWillUnmount = function () {\n    Utilities_1.enableBodyScroll();\n  };\n\n  OverlayBase.prototype.render = function () {\n    var _a = this.props,\n        isDark = _a.isDarkThemed,\n        className = _a.className,\n        theme = _a.theme,\n        styles = _a.styles;\n    var divProps = Utilities_1.getNativeProps(this.props, Utilities_1.divProperties);\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      isDark: isDark\n    });\n    return React.createElement(\"div\", tslib_1.__assign({}, divProps, {\n      className: classNames.root\n    }));\n  };\n\n  return OverlayBase;\n}(Utilities_1.BaseComponent);\n\nexports.OverlayBase = OverlayBase;","map":{"version":3,"sources":["components/Overlay/Overlay.base.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAGA,IAAM,aAAa,GAAG,WAAA,CAAA,kBAAA,EAAtB;;AAEA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,EAAA,MAAA;;AAAjC,WAAA,WAAA,GAAA;;AAsBC;;AArBQ,EAAA,WAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;AACE,IAAA,WAAA,CAAA,iBAAA;AACD,GAFM;;AAIA,EAAA,WAAA,CAAA,SAAA,CAAA,oBAAA,GAAP,YAAA;AACE,IAAA,WAAA,CAAA,gBAAA;AACD,GAFM;;AAIA,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,MAAA,GAAA,EAAA,CAAA,YAAF;AAAA,QAAwB,SAAA,GAAA,EAAA,CAAA,SAAxB;AAAA,QAAmC,KAAA,GAAA,EAAA,CAAA,KAAnC;AAAA,QAA0C,MAAA,GAAA,EAAA,CAAA,MAA1C;AAEN,QAAM,QAAQ,GAAG,WAAA,CAAA,cAAA,CAAqD,KAAK,KAA1D,EAAiE,WAAA,CAAA,aAAjE,CAAjB;AAEA,QAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAU;AACxC,MAAA,KAAK,EAAE,KADiC;AAExC,MAAA,SAAS,EAAA,SAF+B;AAGxC,MAAA,MAAM,EAAA;AAHkC,KAAV,CAAhC;AAMA,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,OAAA,CAAA,QAAA,CAAA,EAAA,EAAS,QAAT,EAAiB;AAAE,MAAA,SAAS,EAAE,UAAU,CAAC;AAAxB,KAAjB,CAAA,CAAP;AACD,GAZM;;AAaT,SAAA,WAAA;AAAC,CAtBD,CAAiC,WAAA,CAAA,aAAjC,CAAA;;AAAa,OAAA,CAAA,WAAA,GAAA,WAAA","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, classNamesFunction, getNativeProps, divProperties, enableBodyScroll, disableBodyScroll } from '../../Utilities';\nimport { IOverlayProps, IOverlayStyleProps, IOverlayStyles } from './Overlay.types';\n\nconst getClassNames = classNamesFunction<IOverlayStyleProps, IOverlayStyles>();\n\nexport class OverlayBase extends BaseComponent<IOverlayProps, {}> {\n  public componentDidMount(): void {\n    disableBodyScroll();\n  }\n\n  public componentWillUnmount(): void {\n    enableBodyScroll();\n  }\n\n  public render(): JSX.Element {\n    const { isDarkThemed: isDark, className, theme, styles } = this.props;\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isDark\n    });\n\n    return <div {...divProps} className={classNames.root} />;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}