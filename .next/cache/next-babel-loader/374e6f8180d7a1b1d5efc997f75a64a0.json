{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n/* tslint:disable */\n\n\nvar React = require(\"react\");\n/* tslint:enable */\n\n\nvar Utilities_1 = require(\"../../../../Utilities\");\n\nvar stylesImport = require(\"./EditingItem.scss\"); // tslint:disable-next-line:no-any\n\n\nvar styles = stylesImport;\n\nvar EditingItem =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(EditingItem, _super);\n\n  function EditingItem(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._editingFloatingPicker = React.createRef();\n\n    _this._renderEditingSuggestions = function () {\n      var FloatingPicker = _this.props.onRenderFloatingPicker;\n      var floatingPickerProps = _this.props.floatingPickerProps;\n\n      if (!FloatingPicker || !floatingPickerProps) {\n        return React.createElement(React.Fragment, null);\n      }\n\n      return React.createElement(FloatingPicker, tslib_1.__assign({\n        componentRef: _this._editingFloatingPicker,\n        onChange: _this._onSuggestionSelected,\n        inputElement: _this._editingInput,\n        selectedItems: []\n      }, floatingPickerProps));\n    };\n\n    _this._resolveInputRef = function (ref) {\n      _this._editingInput = ref;\n\n      _this.forceUpdate(function () {\n        _this._editingInput.focus();\n      });\n    };\n\n    _this._onInputClick = function () {\n      _this._editingFloatingPicker.current && _this._editingFloatingPicker.current.showPicker(true\n      /*updatevalue*/\n      );\n    };\n\n    _this._onInputBlur = function (ev) {\n      if (_this._editingFloatingPicker.current && ev.relatedTarget !== null) {\n        var target = ev.relatedTarget;\n\n        if (target.className.indexOf('ms-Suggestions-itemButton') === -1 && target.className.indexOf('ms-Suggestions-sectionButton') === -1) {\n          _this._editingFloatingPicker.current.forceResolveSuggestion();\n        }\n      }\n    };\n\n    _this._onInputChange = function (ev) {\n      var value = ev.target.value;\n\n      if (value === '') {\n        if (_this.props.onRemoveItem) {\n          _this.props.onRemoveItem();\n        }\n      } else {\n        _this._editingFloatingPicker.current && _this._editingFloatingPicker.current.onQueryStringChanged(value);\n      }\n    };\n\n    _this._onSuggestionSelected = function (item) {\n      _this.props.onEditingComplete(_this.props.item, item);\n    };\n\n    _this.state = {\n      contextualMenuVisible: false\n    };\n    return _this;\n  }\n\n  EditingItem.prototype.componentDidMount = function () {\n    var getEditingItemText = this.props.getEditingItemText;\n    var itemText = getEditingItemText(this.props.item);\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(itemText);\n    this._editingInput.value = itemText;\n\n    this._editingInput.focus();\n  };\n\n  EditingItem.prototype.render = function () {\n    var itemId = Utilities_1.getId();\n    var nativeProps = Utilities_1.getNativeProps(this.props, Utilities_1.inputProperties);\n    return React.createElement(\"div\", {\n      \"aria-labelledby\": 'editingItemPersona-' + itemId,\n      className: Utilities_1.css('ms-EditingItem', styles.editingContainer)\n    }, React.createElement(\"input\", tslib_1.__assign({}, nativeProps, {\n      ref: this._resolveInputRef,\n      autoCapitalize: 'off',\n      autoComplete: 'off',\n      onChange: this._onInputChange,\n      onKeyDown: this._onInputKeyDown,\n      onBlur: this._onInputBlur,\n      onClick: this._onInputClick,\n      \"data-lpignore\": true,\n      className: styles.editingInput,\n      id: itemId\n    })), this._renderEditingSuggestions());\n  };\n\n  EditingItem.prototype._onInputKeyDown = function (ev) {\n    if (ev.which === Utilities_1.KeyCodes.backspace || ev.which === Utilities_1.KeyCodes.del) {\n      ev.stopPropagation();\n    }\n  };\n\n  return EditingItem;\n}(Utilities_1.BaseComponent);\n\nexports.EditingItem = EditingItem;","map":{"version":3,"sources":["components/SelectedItemsList/SelectedPeopleList/Items/EditingItem.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable */\nimport * as React from 'react';\n/* tslint:enable */\nimport { BaseComponent, KeyCodes, getId, getNativeProps, inputProperties, css } from '../../../../Utilities';\nimport { FloatingPeoplePicker, IBaseFloatingPickerProps } from '../../../../FloatingPicker';\nimport { ISelectedPeopleItemProps } from '../SelectedPeopleList';\nimport { IExtendedPersonaProps } from '../SelectedPeopleList';\nimport { IPeoplePickerItemState } from './ExtendedSelectedItem';\nimport { IPersonaProps } from '../../../../Persona';\n\nimport * as stylesImport from './EditingItem.scss';\n\n// tslint:disable-next-line:no-any\nconst styles: any = stylesImport;\n\nexport interface IEditingSelectedPeopleItemProps extends ISelectedPeopleItemProps {\n  // tslint:disable-next-line:no-any\n  onEditingComplete: (oldItem: any, newItem: any) => void;\n  onRenderFloatingPicker?: React.ComponentType<IBaseFloatingPickerProps<IPersonaProps>>;\n  floatingPickerProps?: IBaseFloatingPickerProps<IPersonaProps>;\n  getEditingItemText?: (item: IExtendedPersonaProps) => string;\n}\n\nexport class EditingItem extends BaseComponent<IEditingSelectedPeopleItemProps, IPeoplePickerItemState> {\n  private _editingInput: HTMLInputElement;\n  private _editingFloatingPicker = React.createRef<FloatingPeoplePicker>();\n\n  constructor(props: IEditingSelectedPeopleItemProps) {\n    super(props);\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public componentDidMount(): void {\n    const getEditingItemText = this.props.getEditingItemText as (item: IExtendedPersonaProps) => string;\n    const itemText = getEditingItemText(this.props.item);\n\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(itemText);\n    this._editingInput.value = itemText;\n    this._editingInput.focus();\n  }\n\n  public render(): JSX.Element {\n    const itemId = getId();\n    const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(this.props, inputProperties);\n    return (\n      <div aria-labelledby={'editingItemPersona-' + itemId} className={css('ms-EditingItem', styles.editingContainer)}>\n        <input\n          {...nativeProps}\n          ref={this._resolveInputRef}\n          autoCapitalize={'off'}\n          autoComplete={'off'}\n          onChange={this._onInputChange}\n          onKeyDown={this._onInputKeyDown}\n          onBlur={this._onInputBlur}\n          onClick={this._onInputClick}\n          data-lpignore={true}\n          className={styles.editingInput}\n          id={itemId}\n        />\n        {this._renderEditingSuggestions()}\n      </div>\n    );\n  }\n\n  private _renderEditingSuggestions = (): JSX.Element => {\n    const FloatingPicker = this.props.onRenderFloatingPicker;\n    const floatingPickerProps = this.props.floatingPickerProps;\n    if (!FloatingPicker || !floatingPickerProps) {\n      return <></>;\n    }\n    return (\n      <FloatingPicker\n        componentRef={this._editingFloatingPicker}\n        onChange={this._onSuggestionSelected}\n        inputElement={this._editingInput}\n        selectedItems={[]}\n        {...floatingPickerProps}\n      />\n    );\n  };\n\n  private _resolveInputRef = (ref: HTMLInputElement): void => {\n    this._editingInput = ref;\n\n    this.forceUpdate(() => {\n      this._editingInput.focus();\n    });\n  };\n\n  private _onInputClick = (): void => {\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.showPicker(true /*updatevalue*/);\n  };\n\n  private _onInputBlur = (ev: React.FocusEvent<HTMLElement>): void => {\n    if (this._editingFloatingPicker.current && ev.relatedTarget !== null) {\n      const target = ev.relatedTarget as HTMLElement;\n      if (target.className.indexOf('ms-Suggestions-itemButton') === -1 && target.className.indexOf('ms-Suggestions-sectionButton') === -1) {\n        this._editingFloatingPicker.current.forceResolveSuggestion();\n      }\n    }\n  };\n\n  private _onInputChange = (ev: React.FormEvent<HTMLElement>): void => {\n    const value: string = (ev.target as HTMLInputElement).value;\n\n    if (value === '') {\n      if (this.props.onRemoveItem) {\n        this.props.onRemoveItem();\n      }\n    } else {\n      this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(value);\n    }\n  };\n\n  private _onInputKeyDown(ev: React.KeyboardEvent<HTMLInputElement>): void {\n    if (ev.which === KeyCodes.backspace || ev.which === KeyCodes.del) {\n      ev.stopPropagation();\n    }\n  }\n\n  private _onSuggestionSelected = (item: IExtendedPersonaProps): void => {\n    this.props.onEditingComplete(this.props.item, item);\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}