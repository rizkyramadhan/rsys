{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.TextStyles = function (props, theme) {\n  var as = props.as,\n      className = props.className,\n      block = props.block,\n      nowrap = props.nowrap,\n      variant = props.variant;\n  var fonts = theme.fonts;\n  var variantObject = fonts[variant || 'medium'];\n  return {\n    root: [theme.fonts.medium, {\n      display: block ? as === 'td' ? 'table-cell' : 'block' : 'inline',\n      fontFamily: variantObject && variantObject.fontFamily || 'inherit',\n      fontSize: variantObject && variantObject.fontSize || 'inherit',\n      fontWeight: variantObject && variantObject.fontWeight || 'inherit',\n      color: variantObject && variantObject.color || 'inherit',\n      mozOsxFontSmoothing: variantObject && variantObject.MozOsxFontSmoothing,\n      webkitFontSmoothing: variantObject && variantObject.WebkitFontSmoothing\n    }, nowrap && {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }, className]\n  };\n};","map":{"version":3,"sources":["components/Text/Text.styles.ts"],"names":[],"mappings":";;;;;;;;AAIa,OAAA,CAAA,UAAA,GAAuC,UAAC,KAAD,EAAoB,KAApB,EAAiC;AAC3E,MAAA,EAAA,GAAA,KAAA,CAAA,EAAA;AAAA,MAAI,SAAA,GAAA,KAAA,CAAA,SAAJ;AAAA,MAAe,KAAA,GAAA,KAAA,CAAA,KAAf;AAAA,MAAsB,MAAA,GAAA,KAAA,CAAA,MAAtB;AAAA,MAA8B,OAAA,GAAA,KAAA,CAAA,OAA9B;AACA,MAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AACR,MAAM,aAAa,GAAG,KAAK,CAAC,OAAO,IAAI,QAAZ,CAA3B;AAEA,SAAO;AACL,IAAA,IAAI,EAAE,CACJ,KAAK,CAAC,KAAN,CAAY,MADR,EAEJ;AACE,MAAA,OAAO,EAAE,KAAK,GAAI,EAAE,KAAK,IAAP,GAAc,YAAd,GAA6B,OAAjC,GAA4C,QAD5D;AAEE,MAAA,UAAU,EAAG,aAAa,IAAI,aAAa,CAAC,UAAhC,IAA+C,SAF7D;AAGE,MAAA,QAAQ,EAAG,aAAa,IAAI,aAAa,CAAC,QAAhC,IAA6C,SAHzD;AAIE,MAAA,UAAU,EAAG,aAAa,IAAI,aAAa,CAAC,UAAhC,IAA+C,SAJ7D;AAKE,MAAA,KAAK,EAAG,aAAa,IAAI,aAAa,CAAC,KAAhC,IAA0C,SALnD;AAME,MAAA,mBAAmB,EAAE,aAAa,IAAI,aAAa,CAAC,mBANtD;AAOE,MAAA,mBAAmB,EAAE,aAAa,IAAI,aAAa,CAAC;AAPtD,KAFI,EAWJ,MAAM,IAAI;AACR,MAAA,UAAU,EAAE,QADJ;AAER,MAAA,QAAQ,EAAE,QAFF;AAGR,MAAA,YAAY,EAAE;AAHN,KAXN,EAgBJ,SAhBI;AADD,GAAP;AAoBD,CAzBY","sourcesContent":["import { ITextComponent, ITextStyles, ITextStylesReturnType, ITextProps } from './Text.types';\n\nimport { ITheme } from '../../Styling';\n\nexport const TextStyles: ITextComponent['styles'] = (props: ITextProps, theme: ITheme): ITextStylesReturnType => {\n  const { as, className, block, nowrap, variant } = props;\n  const { fonts } = theme;\n  const variantObject = fonts[variant || 'medium'];\n\n  return {\n    root: [\n      theme.fonts.medium,\n      {\n        display: block ? (as === 'td' ? 'table-cell' : 'block') : 'inline',\n        fontFamily: (variantObject && variantObject.fontFamily) || 'inherit',\n        fontSize: (variantObject && variantObject.fontSize) || 'inherit',\n        fontWeight: (variantObject && variantObject.fontWeight) || 'inherit',\n        color: (variantObject && variantObject.color) || 'inherit',\n        mozOsxFontSmoothing: variantObject && variantObject.MozOsxFontSmoothing,\n        webkitFontSmoothing: variantObject && variantObject.WebkitFontSmoothing\n      },\n      nowrap && {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      className\n    ]\n  } as ITextStyles;\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}