{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport default function (editor) {\n  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var c = opt;\n  var bm = editor.BlockManager;\n  var blocks = c.blocks || [];\n  var stylePrefix = c.stylePrefix;\n  var flexGrid = c.flexGrid;\n  var basicStyle = c.addBasicStyle;\n  var clsRow = \"\".concat(stylePrefix, \"row\");\n  var clsCell = \"\".concat(stylePrefix, \"cell\");\n  var styleRow = flexGrid ? \"\\n      .\".concat(clsRow, \" {\\n        display: flex;\\n        justify-content: flex-start;\\n        align-items: stretch;\\n        flex-wrap: nowrap;\\n        padding: 10px;\\n      }\\n      @media (max-width: 768px) {\\n        .\").concat(clsRow, \" {\\n          flex-wrap: wrap;\\n        }\\n      }\") : \"\\n      .\".concat(clsRow, \" {\\n        display: table;\\n        padding: 10px;\\n        width: 100%;\\n      }\\n      @media (max-width: 768px) {\\n        .\").concat(stylePrefix, \"cell, .\").concat(stylePrefix, \"cell30, .\").concat(stylePrefix, \"cell70 {\\n          width: 100%;\\n          display: block;\\n        }\\n      }\");\n  var styleClm = flexGrid ? \"\\n      .\".concat(clsCell, \" {\\n        min-height: 75px;\\n        flex-grow: 1;\\n        flex-basis: 100%;\\n      }\") : \"\\n      .\".concat(clsCell, \" {\\n        width: 8%;\\n        display: table-cell;\\n        height: 75px;\\n      }\");\n  var styleClm30 = \"\\n    .\".concat(stylePrefix, \"cell30 {\\n      width: 30%;\\n    }\");\n  var styleClm70 = \"\\n    .\".concat(stylePrefix, \"cell70 {\\n      width: 70%;\\n    }\");\n  var step = 0.2;\n  var minDim = 1;\n  var currentUnit = 1;\n  var resizerBtm = {\n    tl: 0,\n    tc: 0,\n    tr: 0,\n    cl: 0,\n    cr: 0,\n    bl: 0,\n    br: 0,\n    minDim: minDim\n  };\n\n  var resizerRight = _objectSpread({}, resizerBtm, {\n    cr: 1,\n    bc: 0,\n    currentUnit: currentUnit,\n    minDim: minDim,\n    step: step,\n    keyWidth: 'flex-basis'\n  }); // Flex elements do not react on width style change therefore I use\n  // 'flex-basis' as keyWidth for the resizer on columns\n\n\n  if (flexGrid) {\n    resizerRight.keyWidth = 'flex-basis';\n  }\n\n  var rowAttr = {\n    \"class\": clsRow,\n    'data-gjs-droppable': \".\".concat(clsCell),\n    'data-gjs-resizable': resizerBtm,\n    'data-gjs-name': 'Row'\n  };\n  var colAttr = {\n    \"class\": clsCell,\n    'data-gjs-draggable': \".\".concat(clsRow),\n    'data-gjs-resizable': resizerRight,\n    'data-gjs-name': 'Cell'\n  };\n\n  if (flexGrid) {\n    colAttr['data-gjs-unstylable'] = ['width'];\n    colAttr['data-gjs-stylable-require'] = ['flex-basis'];\n  } // Make row and column classes private\n\n\n  var privateCls = [\".\".concat(clsRow), \".\".concat(clsCell)];\n  editor.on('selector:add', function (selector) {\n    return privateCls.indexOf(selector.getFullName()) >= 0 && selector.set('private', 1);\n  });\n\n  var attrsToString = function attrsToString(attrs) {\n    var result = [];\n\n    for (var key in attrs) {\n      var value = attrs[key];\n      var toParse = value instanceof Array || value instanceof Object;\n      value = toParse ? _JSON$stringify(value) : value;\n      result.push(\"\".concat(key, \"=\").concat(toParse ? \"'\".concat(value, \"'\") : \"\\\"\".concat(value, \"\\\"\")));\n    }\n\n    return result.length ? \" \".concat(result.join(' ')) : '';\n  };\n\n  var toAdd = function toAdd(name) {\n    return blocks.indexOf(name) >= 0;\n  };\n\n  var attrsRow = attrsToString(rowAttr);\n  var attrsCell = attrsToString(colAttr);\n  toAdd('column1') && bm.add('column1', {\n    label: c.labelColumn1,\n    category: c.category,\n    attributes: {\n      \"class\": 'gjs-fonts gjs-f-b1'\n    },\n    content: \"<div \".concat(attrsRow, \">\\n          <div \").concat(attrsCell, \">JONI JONI YES PAPA</div>\\n        </div>\\n        \").concat(basicStyle ? \"<style>\\n            \".concat(styleRow, \"\\n            \").concat(styleClm, \"\\n          </style>\") : '')\n  });\n  toAdd('column2') && bm.add('column2', {\n    label: c.labelColumn2,\n    attributes: {\n      \"class\": 'gjs-fonts gjs-f-b2'\n    },\n    category: c.category,\n    content: \"<div \".concat(attrsRow, \">\\n          <div \").concat(attrsCell, \"></div>\\n          <div \").concat(attrsCell, \"></div>\\n        </div>\\n        \").concat(basicStyle ? \"<style>\\n            \".concat(styleRow, \"\\n            \").concat(styleClm, \"\\n          </style>\") : '')\n  });\n  toAdd('column3') && bm.add('column3', {\n    label: c.labelColumn3,\n    category: c.category,\n    attributes: {\n      \"class\": 'gjs-fonts gjs-f-b3'\n    },\n    content: \"<div \".concat(attrsRow, \">\\n          <div \").concat(attrsCell, \"></div>\\n          <div \").concat(attrsCell, \"></div>\\n          <div \").concat(attrsCell, \"></div>\\n        </div>\\n        \").concat(basicStyle ? \"<style>\\n            \".concat(styleRow, \"\\n            \").concat(styleClm, \"\\n          </style>\") : '')\n  });\n  toAdd('column3-7') && bm.add('column3-7', {\n    label: c.labelColumn37,\n    category: c.category,\n    attributes: {\n      \"class\": 'gjs-fonts gjs-f-b37'\n    },\n    content: \"<div \".concat(attrsRow, \">\\n          <div \").concat(attrsCell, \" style=\\\"\").concat(flexGrid ? 'flex-basis' : 'width', \": 30%;\\\"></div>\\n          <div \").concat(attrsCell, \" style=\\\"\").concat(flexGrid ? 'flex-basis' : 'width', \": 70%;\\\"></div>\\n        </div>\\n        \").concat(basicStyle ? \"<style>\\n            \".concat(styleRow, \"\\n            \").concat(styleClm, \"\\n            \").concat(styleClm30, \"\\n            \").concat(styleClm70, \"\\n          </style>\") : '')\n  });\n  toAdd('text') && bm.add('text', {\n    label: c.labelText,\n    category: c.category,\n    attributes: {\n      \"class\": 'gjs-fonts gjs-f-text'\n    },\n    content: {\n      type: 'text',\n      content: 'Insert your text here',\n      style: {\n        padding: '10px'\n      },\n      activeOnRender: 1\n    }\n  });\n  toAdd('link') && bm.add('link', {\n    label: c.labelLink,\n    category: c.category,\n    attributes: {\n      \"class\": 'fa fa-link'\n    },\n    content: {\n      type: 'link',\n      content: 'Link',\n      style: {\n        color: '#d983a6'\n      }\n    }\n  });\n  toAdd('image') && bm.add('image', {\n    label: c.labelImage,\n    category: c.category,\n    attributes: {\n      \"class\": 'gjs-fonts gjs-f-image'\n    },\n    content: {\n      style: {\n        color: 'black'\n      },\n      type: 'image',\n      activeOnRender: 1\n    }\n  });\n  toAdd('video') && bm.add('video', {\n    label: c.labelVideo,\n    category: c.category,\n    attributes: {\n      \"class\": 'fa fa-youtube-play'\n    },\n    content: {\n      type: 'video',\n      src: 'img/video2.webm',\n      style: {\n        height: '350px',\n        width: '615px'\n      }\n    }\n  });\n  toAdd('map') && bm.add('map', {\n    label: c.labelMap,\n    category: c.category,\n    attributes: {\n      \"class\": 'fa fa-map-o'\n    },\n    content: {\n      type: 'map',\n      style: {\n        height: '350px'\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/Users/riz/Documents/rsys/components/Grape/Blocks/Basic/blocks.ts"],"names":["editor","opt","c","bm","BlockManager","blocks","stylePrefix","flexGrid","basicStyle","addBasicStyle","clsRow","clsCell","styleRow","styleClm","styleClm30","styleClm70","step","minDim","currentUnit","resizerBtm","tl","tc","tr","cl","cr","bl","br","resizerRight","bc","keyWidth","rowAttr","colAttr","privateCls","on","selector","indexOf","getFullName","set","attrsToString","attrs","result","key","value","toParse","Array","Object","push","length","join","toAdd","name","attrsRow","attrsCell","add","label","labelColumn1","category","attributes","content","labelColumn2","labelColumn3","labelColumn37","labelText","type","style","padding","activeOnRender","labelLink","color","labelImage","labelVideo","src","height","width","labelMap"],"mappings":"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","sourcesContent":["export default function(editor, opt: any = {}) {\n  const c = opt;\n  let bm = editor.BlockManager;\n  let blocks = c.blocks || [];\n  let stylePrefix = c.stylePrefix;\n  const flexGrid = c.flexGrid;\n  const basicStyle = c.addBasicStyle;\n  const clsRow = `${stylePrefix}row`;\n  const clsCell = `${stylePrefix}cell`;\n  const styleRow = flexGrid\n    ? `\n      .${clsRow} {\n        display: flex;\n        justify-content: flex-start;\n        align-items: stretch;\n        flex-wrap: nowrap;\n        padding: 10px;\n      }\n      @media (max-width: 768px) {\n        .${clsRow} {\n          flex-wrap: wrap;\n        }\n      }`\n    : `\n      .${clsRow} {\n        display: table;\n        padding: 10px;\n        width: 100%;\n      }\n      @media (max-width: 768px) {\n        .${stylePrefix}cell, .${stylePrefix}cell30, .${stylePrefix}cell70 {\n          width: 100%;\n          display: block;\n        }\n      }`;\n  const styleClm = flexGrid\n    ? `\n      .${clsCell} {\n        min-height: 75px;\n        flex-grow: 1;\n        flex-basis: 100%;\n      }`\n    : `\n      .${clsCell} {\n        width: 8%;\n        display: table-cell;\n        height: 75px;\n      }`;\n  const styleClm30 = `\n    .${stylePrefix}cell30 {\n      width: 30%;\n    }`;\n  const styleClm70 = `\n    .${stylePrefix}cell70 {\n      width: 70%;\n    }`;\n\n  const step = 0.2;\n  const minDim = 1;\n  const currentUnit = 1;\n  const resizerBtm = {\n    tl: 0,\n    tc: 0,\n    tr: 0,\n    cl: 0,\n    cr: 0,\n    bl: 0,\n    br: 0,\n    minDim\n  };\n  const resizerRight = {\n    ...resizerBtm,\n    cr: 1,\n    bc: 0,\n    currentUnit,\n    minDim,\n    step,\n    keyWidth: 'flex-basis'\n  };\n\n  // Flex elements do not react on width style change therefore I use\n  // 'flex-basis' as keyWidth for the resizer on columns\n  if (flexGrid) {\n    resizerRight.keyWidth = 'flex-basis';\n  }\n\n  const rowAttr = {\n    class: clsRow,\n    'data-gjs-droppable': `.${clsCell}`,\n    'data-gjs-resizable': resizerBtm,\n    'data-gjs-name': 'Row'\n  };\n\n  const colAttr = {\n    class: clsCell,\n    'data-gjs-draggable': `.${clsRow}`,\n    'data-gjs-resizable': resizerRight,\n    'data-gjs-name': 'Cell'\n  };\n\n  if (flexGrid) {\n    colAttr['data-gjs-unstylable'] = ['width'];\n    colAttr['data-gjs-stylable-require'] = ['flex-basis'];\n  }\n\n  // Make row and column classes private\n  const privateCls = [`.${clsRow}`, `.${clsCell}`];\n  editor.on(\n    'selector:add',\n    selector =>\n      privateCls.indexOf(selector.getFullName()) >= 0 &&\n      selector.set('private', 1)\n  );\n\n  const attrsToString = attrs => {\n    const result = [];\n\n    for (let key in attrs) {\n      let value = attrs[key];\n      const toParse = value instanceof Array || value instanceof Object;\n      value = toParse ? JSON.stringify(value) : value;\n      result.push(`${key}=${toParse ? `'${value}'` : `\"${value}\"`}`);\n    }\n\n    return result.length ? ` ${result.join(' ')}` : '';\n  };\n\n  const toAdd = name => blocks.indexOf(name) >= 0;\n  const attrsRow = attrsToString(rowAttr);\n  const attrsCell = attrsToString(colAttr);\n\n  toAdd('column1') &&\n    bm.add('column1', {\n      label: c.labelColumn1,\n      category: c.category,\n      attributes: { class: 'gjs-fonts gjs-f-b1' },\n      content: `<div ${attrsRow}>\n          <div ${attrsCell}>JONI JONI YES PAPA</div>\n        </div>\n        ${\n          basicStyle\n            ? `<style>\n            ${styleRow}\n            ${styleClm}\n          </style>`\n            : ''\n        }`\n    });\n\n  toAdd('column2') &&\n    bm.add('column2', {\n      label: c.labelColumn2,\n      attributes: { class: 'gjs-fonts gjs-f-b2' },\n      category: c.category,\n      content: `<div ${attrsRow}>\n          <div ${attrsCell}></div>\n          <div ${attrsCell}></div>\n        </div>\n        ${\n          basicStyle\n            ? `<style>\n            ${styleRow}\n            ${styleClm}\n          </style>`\n            : ''\n        }`\n    });\n\n  toAdd('column3') &&\n    bm.add('column3', {\n      label: c.labelColumn3,\n      category: c.category,\n      attributes: { class: 'gjs-fonts gjs-f-b3' },\n      content: `<div ${attrsRow}>\n          <div ${attrsCell}></div>\n          <div ${attrsCell}></div>\n          <div ${attrsCell}></div>\n        </div>\n        ${\n          basicStyle\n            ? `<style>\n            ${styleRow}\n            ${styleClm}\n          </style>`\n            : ''\n        }`\n    });\n\n  toAdd('column3-7') &&\n    bm.add('column3-7', {\n      label: c.labelColumn37,\n      category: c.category,\n      attributes: { class: 'gjs-fonts gjs-f-b37' },\n      content: `<div ${attrsRow}>\n          <div ${attrsCell} style=\"${\n        flexGrid ? 'flex-basis' : 'width'\n      }: 30%;\"></div>\n          <div ${attrsCell} style=\"${\n        flexGrid ? 'flex-basis' : 'width'\n      }: 70%;\"></div>\n        </div>\n        ${\n          basicStyle\n            ? `<style>\n            ${styleRow}\n            ${styleClm}\n            ${styleClm30}\n            ${styleClm70}\n          </style>`\n            : ''\n        }`\n    });\n\n  toAdd('text') &&\n    bm.add('text', {\n      label: c.labelText,\n      category: c.category,\n      attributes: { class: 'gjs-fonts gjs-f-text' },\n      content: {\n        type: 'text',\n        content: 'Insert your text here',\n        style: { padding: '10px' },\n        activeOnRender: 1\n      }\n    });\n\n  toAdd('link') &&\n    bm.add('link', {\n      label: c.labelLink,\n      category: c.category,\n      attributes: { class: 'fa fa-link' },\n      content: {\n        type: 'link',\n        content: 'Link',\n        style: { color: '#d983a6' }\n      }\n    });\n\n  toAdd('image') &&\n    bm.add('image', {\n      label: c.labelImage,\n      category: c.category,\n      attributes: { class: 'gjs-fonts gjs-f-image' },\n      content: {\n        style: { color: 'black' },\n        type: 'image',\n        activeOnRender: 1\n      }\n    });\n\n  toAdd('video') &&\n    bm.add('video', {\n      label: c.labelVideo,\n      category: c.category,\n      attributes: { class: 'fa fa-youtube-play' },\n      content: {\n        type: 'video',\n        src: 'img/video2.webm',\n        style: {\n          height: '350px',\n          width: '615px'\n        }\n      }\n    });\n\n  toAdd('map') &&\n    bm.add('map', {\n      label: c.labelMap,\n      category: c.category,\n      attributes: { class: 'fa fa-map-o' },\n      content: {\n        type: 'map',\n        style: { height: '350px' }\n      }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}