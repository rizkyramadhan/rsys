{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar BaseButton_1 = require(\"../BaseButton\");\n\nvar Utilities_1 = require(\"../../../Utilities\");\n\nvar CompoundButton_styles_1 = require(\"./CompoundButton.styles\");\n/**\n * {@docCategory Button}\n */\n\n\nvar CompoundButton =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(CompoundButton, _super);\n\n  function CompoundButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Tell BaseComponent to bypass resolution of componentRef.\n     */\n\n\n    _this._skipComponentRefResolution = true;\n    return _this;\n  }\n\n  CompoundButton.prototype.render = function () {\n    var _a = this.props,\n        _b = _a.primary,\n        primary = _b === void 0 ? false : _b,\n        styles = _a.styles,\n        theme = _a.theme;\n    return React.createElement(BaseButton_1.BaseButton, tslib_1.__assign({}, this.props, {\n      variantClassName: primary ? 'ms-Button--compoundPrimary' : 'ms-Button--compound',\n      styles: CompoundButton_styles_1.getStyles(theme, styles, primary)\n    }));\n  };\n\n  CompoundButton = tslib_1.__decorate([Utilities_1.customizable('CompoundButton', ['theme', 'styles'], true)], CompoundButton);\n  return CompoundButton;\n}(Utilities_1.BaseComponent);\n\nexports.CompoundButton = CompoundButton;","map":{"version":3,"sources":["components/Button/CompoundButton/CompoundButton.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,uBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;AAEA;;;;;AAIA,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,OAAA,CAAA,SAAA,CAAA,cAAA,EAAA,MAAA;;AADpC,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAEE;;;;;AAGU,IAAA,KAAA,CAAA,2BAAA,GAA8B,IAA9B;;AAYX;;AAVQ,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,EAAA,GAAA,EAAA,CAAA,OAAF;AAAA,QAAE,OAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,EAAF;AAAA,QAAmB,MAAA,GAAA,EAAA,CAAA,MAAnB;AAAA,QAA2B,KAAA,GAAA,EAAA,CAAA,KAA3B;AACN,WACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAA,UAAD,EAAW,OAAA,CAAA,QAAA,CAAA,EAAA,EACL,KAAK,KADA,EACK;AACd,MAAA,gBAAgB,EAAE,OAAO,GAAG,4BAAH,GAAkC,qBAD7C;AAEd,MAAA,MAAM,EAAE,uBAAA,CAAA,SAAA,CAAU,KAAV,EAAkB,MAAlB,EAA0B,OAA1B;AAFM,KADL,CAAX,CADF;AAOD,GATM;;AANI,EAAA,cAAc,GAAA,OAAA,CAAA,UAAA,CAAA,CAD1B,WAAA,CAAA,YAAA,CAAa,gBAAb,EAA+B,CAAC,OAAD,EAAU,QAAV,CAA/B,EAAoD,IAApD,CAC0B,CAAA,EAAd,cAAc,CAAd;AAgBb,SAAA,cAAA;AAAC,CAhBD,CAAoC,WAAA,CAAA,aAApC,CAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { BaseComponent, customizable } from '../../../Utilities';\nimport { IButtonProps } from '../Button.types';\nimport { getStyles } from './CompoundButton.styles';\n\n/**\n * {@docCategory Button}\n */\n@customizable('CompoundButton', ['theme', 'styles'], true)\nexport class CompoundButton extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Tell BaseComponent to bypass resolution of componentRef.\n   */\n  protected _skipComponentRefResolution = true;\n\n  public render(): JSX.Element {\n    const { primary = false, styles, theme } = this.props;\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName={primary ? 'ms-Button--compoundPrimary' : 'ms-Button--compound'}\n        styles={getStyles(theme!, styles, primary)}\n      />\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}