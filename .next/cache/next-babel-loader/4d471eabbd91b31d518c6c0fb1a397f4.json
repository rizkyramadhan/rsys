{"ast":null,"code":"import { FontWeights, concatStyleSets, getFocusStyle, HighContrastSelector, getPlaceholderStyles } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nvar ComboBoxHeight = 32;\nvar ComboBoxLineHeight = 30;\nvar ComboBoxCaretDownWidth = 32;\nvar ComboBoxOptionHeight = 36;\nvar getDisabledStyles = memoizeFunction(function (theme) {\n  var _a;\n\n  var semanticColors = theme.semanticColors;\n  return {\n    backgroundColor: semanticColors.disabledBackground,\n    borderColor: semanticColors.disabledBackground,\n    color: semanticColors.disabledText,\n    cursor: 'default',\n    selectors: (_a = {}, _a[HighContrastSelector] = {\n      borderColor: 'GrayText',\n      color: 'GrayText'\n    }, _a)\n  };\n});\nvar getListOptionHighContrastStyles = memoizeFunction(function (theme) {\n  var _a;\n\n  return {\n    selectors: (_a = {}, _a[HighContrastSelector] = {\n      backgroundColor: 'Highlight',\n      borderColor: 'Highlight',\n      color: 'HighlightText',\n      MsHighContrastAdjust: 'none'\n    }, _a)\n  };\n});\nexport var getOptionStyles = memoizeFunction(function (theme, customStylesForAllOptions, customOptionStylesForCurrentOption, isPending, isHidden) {\n  var _a;\n\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var option = {\n    textHoveredColor: semanticColors.menuItemTextHovered,\n    textSelectedColor: palette.neutralDark,\n    textDisabledColor: semanticColors.disabledText,\n    backgroundHoveredColor: semanticColors.menuItemBackgroundHovered,\n    backgroundPressedColor: semanticColors.menuItemBackgroundPressed\n  };\n  var optionStyles = {\n    root: [theme.fonts.medium, {\n      backgroundColor: isPending ? option.backgroundHoveredColor : 'transparent',\n      boxSizing: 'border-box',\n      cursor: 'pointer',\n      display: isHidden ? 'none' : 'block',\n      width: '100%',\n      height: 'auto',\n      minHeight: ComboBoxOptionHeight,\n      lineHeight: '20px',\n      padding: '0 8px',\n      position: 'relative',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: 'transparent',\n      borderRadius: 0,\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      textAlign: 'left',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Background'\n      }, _a['&.ms-Checkbox'] = {\n        display: 'flex',\n        alignItems: 'center'\n      }, _a['&.ms-Button--command:hover:active'] = {\n        backgroundColor: option.backgroundPressedColor\n      }, _a)\n    }],\n    rootHovered: {\n      backgroundColor: option.backgroundHoveredColor,\n      color: option.textHoveredColor\n    },\n    rootFocused: {\n      backgroundColor: option.backgroundHoveredColor\n    },\n    rootChecked: [{\n      backgroundColor: 'transparent',\n      color: option.textSelectedColor,\n      selectors: {\n        ':hover': {\n          backgroundColor: option.backgroundHoveredColor\n        }\n      }\n    }, getFocusStyle(theme, {\n      inset: -1,\n      isFocusedOnly: false\n    }), getListOptionHighContrastStyles(theme)],\n    rootDisabled: {\n      color: option.textDisabledColor,\n      cursor: 'default'\n    },\n    optionText: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      minWidth: '0px',\n      maxWidth: '100%',\n      wordWrap: 'break-word',\n      overflowWrap: 'break-word',\n      display: 'inline-block'\n    },\n    optionTextWrapper: {\n      maxWidth: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n  return concatStyleSets(optionStyles, customStylesForAllOptions, customOptionStylesForCurrentOption);\n});\nexport var getCaretDownButtonStyles = memoizeFunction(function (theme, customStyles) {\n  var _a;\n\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var caret = {\n    buttonTextColor: semanticColors.bodySubtext,\n    buttonTextHoveredCheckedColor: semanticColors.buttonTextChecked,\n    buttonBackgroundHoveredColor: semanticColors.listItemBackgroundHovered,\n    buttonBackgroundCheckedColor: semanticColors.listItemBackgroundChecked,\n    buttonBackgroundCheckedHoveredColor: semanticColors.listItemBackgroundCheckedHovered\n  };\n  var styles = {\n    root: {\n      color: caret.buttonTextColor,\n      fontSize: fonts.small.fontSize,\n      position: 'absolute',\n      // The negative positioning accounts for the 1px root border now that box-sizing is border-box\n      top: '-1px',\n      right: '-1px',\n      height: ComboBoxHeight,\n      lineHeight: ComboBoxLineHeight,\n      width: ComboBoxCaretDownWidth,\n      textAlign: 'center',\n      cursor: 'default',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        backgroundColor: 'ButtonFace',\n        borderColor: 'ButtonText',\n        color: 'ButtonText',\n        MsHighContrastAdjust: 'none'\n      }, _a)\n    },\n    icon: {\n      fontSize: fonts.small.fontSize\n    },\n    rootHovered: {\n      backgroundColor: caret.buttonBackgroundHoveredColor,\n      color: caret.buttonTextHoveredCheckedColor,\n      cursor: 'pointer'\n    },\n    rootPressed: {\n      backgroundColor: caret.buttonBackgroundCheckedColor,\n      color: caret.buttonTextHoveredCheckedColor\n    },\n    rootChecked: {\n      backgroundColor: caret.buttonBackgroundCheckedColor,\n      color: caret.buttonTextHoveredCheckedColor\n    },\n    rootCheckedHovered: {\n      backgroundColor: caret.buttonBackgroundCheckedHoveredColor,\n      color: caret.buttonTextHoveredCheckedColor\n    },\n    rootDisabled: getDisabledStyles(theme)\n  };\n  return concatStyleSets(styles, customStyles);\n});\nexport var getStyles = memoizeFunction(function (theme, customStyles, comboBoxOptionWidth) {\n  var _a, _b, _c, _d;\n\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts,\n      effects = theme.effects;\n  var root = {\n    textColor: semanticColors.bodyText,\n    borderColor: semanticColors.inputBorder,\n    borderHoveredColor: semanticColors.inputBorderHovered,\n    borderPressedColor: semanticColors.inputFocusBorderAlt,\n    borderFocusedColor: semanticColors.inputFocusBorderAlt,\n    backgroundColor: semanticColors.bodyBackground,\n    erroredColor: semanticColors.errorText\n  };\n  var option = {\n    headerTextColor: semanticColors.menuHeader,\n    dividerBorderColor: semanticColors.bodyDivider\n  }; // placeholder style variables\n\n  var placeholderStyles = {\n    color: semanticColors.inputPlaceholderText\n  };\n  var placeholderStylesHovered = {\n    color: semanticColors.inputTextHovered\n  };\n  var disabledPlaceholderStyles = {\n    color: semanticColors.disabledText\n  };\n  var ComboBoxRootHighContrastFocused = {\n    color: 'HighlightText',\n    borderColor: 'Highlight',\n    backgroundColor: 'Window',\n    borderWidth: '2px',\n    MsHighContrastAdjust: 'none',\n    paddingLeft: '11px',\n    paddingTop: '0',\n    paddingBottom: '0',\n    selectors: {\n      '.ms-ComboBox-CaretDown-button': {\n        // Negative positioning to account for the 2px border\n        right: '-2px',\n        top: '-2px'\n      }\n    }\n  };\n  var styles = {\n    container: {},\n    label: {},\n    labelDisabled: {},\n    root: [theme.fonts.medium, {\n      boxShadow: 'none',\n      marginLeft: '0',\n      paddingTop: 1,\n      paddingBottom: 1,\n      paddingRight: ComboBoxCaretDownWidth,\n      paddingLeft: 8,\n      color: root.textColor,\n      position: 'relative',\n      outline: '0',\n      userSelect: 'none',\n      backgroundColor: root.backgroundColor,\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: root.borderColor,\n      borderRadius: effects.roundedCorner2,\n      cursor: 'text',\n      display: 'block',\n      height: ComboBoxHeight,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      boxSizing: 'border-box',\n      selectors: {\n        '.ms-Label': {\n          display: 'inline-block',\n          marginBottom: '8px'\n        },\n        '&.is-open': {\n          borderColor: root.borderColor,\n          selectors: (_a = {}, _a[HighContrastSelector] = ComboBoxRootHighContrastFocused, _a)\n        }\n      }\n    }],\n    rootHovered: {\n      borderColor: root.borderHoveredColor,\n      selectors: (_b = {\n        '.ms-ComboBox-Input': [{\n          color: semanticColors.inputTextHovered\n        }, getPlaceholderStyles(placeholderStylesHovered)]\n      }, _b[HighContrastSelector] = {\n        color: 'HighlightText',\n        borderColor: 'Highlight',\n        backgroundColor: 'Window',\n        MsHighContrastAdjust: 'none'\n      }, _b)\n    },\n    rootPressed: {\n      borderColor: root.borderPressedColor,\n      selectors: (_c = {}, _c[HighContrastSelector] = ComboBoxRootHighContrastFocused, _c)\n    },\n    rootFocused: {\n      borderColor: root.borderFocusedColor,\n      selectors: (_d = {\n        '.ms-ComboBox-Input': {\n          color: semanticColors.inputTextHovered\n        }\n      }, _d[HighContrastSelector] = ComboBoxRootHighContrastFocused, _d)\n    },\n    rootDisabled: getDisabledStyles(theme),\n    rootError: {\n      borderColor: root.erroredColor,\n      marginBottom: '5px'\n    },\n    rootDisallowFreeForm: {},\n    input: [getPlaceholderStyles(placeholderStyles), {\n      backgroundColor: root.backgroundColor,\n      color: root.textColor,\n      boxSizing: 'border-box',\n      width: '100%',\n      height: '28px',\n      borderStyle: 'none',\n      outline: 'none',\n      font: 'inherit',\n      textOverflow: 'ellipsis',\n      padding: '0',\n      selectors: {\n        '::-ms-clear': {\n          display: 'none'\n        }\n      }\n    }],\n    inputDisabled: [getDisabledStyles(theme), getPlaceholderStyles(disabledPlaceholderStyles)],\n    errorMessage: [theme.fonts.small, {\n      color: root.erroredColor\n    }],\n    callout: {\n      boxShadow: effects.elevation8\n    },\n    optionsContainerWrapper: {\n      width: comboBoxOptionWidth\n    },\n    optionsContainer: {\n      display: 'block'\n    },\n    header: [fonts.medium, {\n      fontWeight: FontWeights.semibold,\n      color: option.headerTextColor,\n      backgroundColor: 'none',\n      borderStyle: 'none',\n      height: ComboBoxOptionHeight,\n      lineHeight: ComboBoxOptionHeight,\n      cursor: 'default',\n      padding: '0 8px',\n      userSelect: 'none',\n      textAlign: 'left'\n    }],\n    divider: {\n      height: 1,\n      backgroundColor: option.dividerBorderColor\n    }\n  };\n  return concatStyleSets(styles, customStyles);\n});","map":{"version":3,"sources":["components/ComboBox/ComboBox.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  FontWeights,\r\n  IRawStyle,\r\n  ITheme,\r\n  concatStyleSets,\r\n  getFocusStyle,\r\n  HighContrastSelector,\r\n  IStyle,\r\n  getPlaceholderStyles\r\n} from '../../Styling';\r\nimport { IComboBoxOptionStyles, IComboBoxStyles } from './ComboBox.types';\r\n\r\nimport { IButtonStyles } from '../../Button';\r\nimport { memoizeFunction } from '../../Utilities';\r\n\r\nconst ComboBoxHeight = 32;\r\nconst ComboBoxLineHeight = 30;\r\nconst ComboBoxCaretDownWidth = 32;\r\nconst ComboBoxOptionHeight = 36;\r\n\r\nconst getDisabledStyles = memoizeFunction(\r\n  (theme: ITheme): IRawStyle => {\r\n    const { semanticColors } = theme;\r\n\r\n    return {\r\n      backgroundColor: semanticColors.disabledBackground,\r\n      borderColor: semanticColors.disabledBackground,\r\n      color: semanticColors.disabledText,\r\n      cursor: 'default',\r\n      selectors: {\r\n        [HighContrastSelector]: {\r\n          borderColor: 'GrayText',\r\n          color: 'GrayText'\r\n        }\r\n      }\r\n    };\r\n  }\r\n);\r\n\r\nconst getListOptionHighContrastStyles = memoizeFunction(\r\n  (theme: ITheme): IRawStyle => {\r\n    return {\r\n      selectors: {\r\n        [HighContrastSelector]: {\r\n          backgroundColor: 'Highlight',\r\n          borderColor: 'Highlight',\r\n          color: 'HighlightText',\r\n          MsHighContrastAdjust: 'none'\r\n        }\r\n      }\r\n    };\r\n  }\r\n);\r\n\r\nexport const getOptionStyles = memoizeFunction(\r\n  (\r\n    theme: ITheme,\r\n    customStylesForAllOptions?: Partial<IComboBoxOptionStyles>,\r\n    customOptionStylesForCurrentOption?: Partial<IComboBoxOptionStyles>,\r\n    isPending?: boolean,\r\n    isHidden?: boolean\r\n  ): Partial<IComboBoxOptionStyles> => {\r\n    const { palette, semanticColors } = theme;\r\n\r\n    const option = {\r\n      textHoveredColor: semanticColors.menuItemTextHovered,\r\n      textSelectedColor: palette.neutralDark,\r\n      textDisabledColor: semanticColors.disabledText,\r\n      backgroundHoveredColor: semanticColors.menuItemBackgroundHovered,\r\n      backgroundPressedColor: semanticColors.menuItemBackgroundPressed\r\n    };\r\n\r\n    const optionStyles: IComboBoxOptionStyles = {\r\n      root: [\r\n        theme.fonts.medium,\r\n        {\r\n          backgroundColor: isPending ? option.backgroundHoveredColor : 'transparent',\r\n          boxSizing: 'border-box',\r\n          cursor: 'pointer',\r\n          display: isHidden ? 'none' : 'block',\r\n          width: '100%',\r\n          height: 'auto',\r\n          minHeight: ComboBoxOptionHeight,\r\n          lineHeight: '20px',\r\n          padding: '0 8px',\r\n          position: 'relative',\r\n          borderWidth: '1px',\r\n          borderStyle: 'solid',\r\n          borderColor: 'transparent',\r\n          borderRadius: 0,\r\n          wordWrap: 'break-word',\r\n          overflowWrap: 'break-word',\r\n          textAlign: 'left',\r\n          selectors: {\r\n            [HighContrastSelector]: {\r\n              borderColor: 'Background'\r\n            },\r\n            '&.ms-Checkbox': {\r\n              display: 'flex',\r\n              alignItems: 'center'\r\n            },\r\n            '&.ms-Button--command:hover:active': {\r\n              backgroundColor: option.backgroundPressedColor\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      rootHovered: {\r\n        backgroundColor: option.backgroundHoveredColor,\r\n        color: option.textHoveredColor\r\n      },\r\n      rootFocused: {\r\n        backgroundColor: option.backgroundHoveredColor\r\n      },\r\n      rootChecked: [\r\n        {\r\n          backgroundColor: 'transparent',\r\n          color: option.textSelectedColor,\r\n          selectors: {\r\n            ':hover': {\r\n              backgroundColor: option.backgroundHoveredColor\r\n            }\r\n          }\r\n        },\r\n        getFocusStyle(theme, { inset: -1, isFocusedOnly: false }),\r\n        getListOptionHighContrastStyles(theme)\r\n      ],\r\n      rootDisabled: {\r\n        color: option.textDisabledColor,\r\n        cursor: 'default'\r\n      },\r\n      optionText: {\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        minWidth: '0px',\r\n        maxWidth: '100%',\r\n        wordWrap: 'break-word',\r\n        overflowWrap: 'break-word',\r\n        display: 'inline-block'\r\n      },\r\n      optionTextWrapper: {\r\n        maxWidth: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n      }\r\n    };\r\n\r\n    return concatStyleSets(optionStyles, customStylesForAllOptions, customOptionStylesForCurrentOption);\r\n  }\r\n);\r\n\r\nexport const getCaretDownButtonStyles = memoizeFunction(\r\n  (theme: ITheme, customStyles?: Partial<IButtonStyles>): IButtonStyles => {\r\n    const { semanticColors, fonts } = theme;\r\n\r\n    const caret = {\r\n      buttonTextColor: semanticColors.bodySubtext,\r\n      buttonTextHoveredCheckedColor: semanticColors.buttonTextChecked,\r\n      buttonBackgroundHoveredColor: semanticColors.listItemBackgroundHovered,\r\n      buttonBackgroundCheckedColor: semanticColors.listItemBackgroundChecked,\r\n      buttonBackgroundCheckedHoveredColor: semanticColors.listItemBackgroundCheckedHovered\r\n    };\r\n\r\n    const styles: IButtonStyles = {\r\n      root: {\r\n        color: caret.buttonTextColor,\r\n        fontSize: fonts.small.fontSize,\r\n        position: 'absolute',\r\n        // The negative positioning accounts for the 1px root border now that box-sizing is border-box\r\n        top: '-1px',\r\n        right: '-1px',\r\n        height: ComboBoxHeight,\r\n        lineHeight: ComboBoxLineHeight,\r\n        width: ComboBoxCaretDownWidth,\r\n        textAlign: 'center',\r\n        cursor: 'default',\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            backgroundColor: 'ButtonFace',\r\n            borderColor: 'ButtonText',\r\n            color: 'ButtonText',\r\n            MsHighContrastAdjust: 'none'\r\n          }\r\n        }\r\n      },\r\n      icon: {\r\n        fontSize: fonts.small.fontSize\r\n      },\r\n      rootHovered: {\r\n        backgroundColor: caret.buttonBackgroundHoveredColor,\r\n        color: caret.buttonTextHoveredCheckedColor,\r\n        cursor: 'pointer'\r\n      },\r\n      rootPressed: {\r\n        backgroundColor: caret.buttonBackgroundCheckedColor,\r\n        color: caret.buttonTextHoveredCheckedColor\r\n      },\r\n      rootChecked: {\r\n        backgroundColor: caret.buttonBackgroundCheckedColor,\r\n        color: caret.buttonTextHoveredCheckedColor\r\n      },\r\n      rootCheckedHovered: {\r\n        backgroundColor: caret.buttonBackgroundCheckedHoveredColor,\r\n        color: caret.buttonTextHoveredCheckedColor\r\n      },\r\n      rootDisabled: getDisabledStyles(theme)\r\n    };\r\n    return concatStyleSets(styles, customStyles);\r\n  }\r\n);\r\n\r\nexport const getStyles = memoizeFunction(\r\n  (theme: ITheme, customStyles?: Partial<IComboBoxStyles>, comboBoxOptionWidth?: string): Partial<IComboBoxStyles> => {\r\n    const { semanticColors, fonts, effects } = theme;\r\n\r\n    const root = {\r\n      textColor: semanticColors.bodyText,\r\n      borderColor: semanticColors.inputBorder,\r\n      borderHoveredColor: semanticColors.inputBorderHovered,\r\n      borderPressedColor: semanticColors.inputFocusBorderAlt,\r\n      borderFocusedColor: semanticColors.inputFocusBorderAlt,\r\n      backgroundColor: semanticColors.bodyBackground,\r\n      erroredColor: semanticColors.errorText\r\n    };\r\n\r\n    const option = {\r\n      headerTextColor: semanticColors.menuHeader,\r\n      dividerBorderColor: semanticColors.bodyDivider\r\n    };\r\n\r\n    // placeholder style variables\r\n    const placeholderStyles: IStyle = {\r\n      color: semanticColors.inputPlaceholderText\r\n    };\r\n    const placeholderStylesHovered: IStyle = {\r\n      color: semanticColors.inputTextHovered\r\n    };\r\n    const disabledPlaceholderStyles: IStyle = {\r\n      color: semanticColors.disabledText\r\n    };\r\n\r\n    const ComboBoxRootHighContrastFocused = {\r\n      color: 'HighlightText',\r\n      borderColor: 'Highlight',\r\n      backgroundColor: 'Window',\r\n      borderWidth: '2px',\r\n      MsHighContrastAdjust: 'none',\r\n      paddingLeft: '11px',\r\n      paddingTop: '0',\r\n      paddingBottom: '0',\r\n      selectors: {\r\n        '.ms-ComboBox-CaretDown-button': {\r\n          // Negative positioning to account for the 2px border\r\n          right: '-2px',\r\n          top: '-2px'\r\n        }\r\n      }\r\n    };\r\n\r\n    const styles: IComboBoxStyles = {\r\n      container: {},\r\n      label: {},\r\n      labelDisabled: {},\r\n      root: [\r\n        theme.fonts.medium,\r\n        {\r\n          boxShadow: 'none',\r\n          marginLeft: '0',\r\n          paddingTop: 1, // The 1px padding centers the input field, avoiding overlap in the browser\r\n          paddingBottom: 1,\r\n          paddingRight: ComboBoxCaretDownWidth,\r\n          paddingLeft: 8,\r\n          color: root.textColor,\r\n          position: 'relative',\r\n          outline: '0',\r\n          userSelect: 'none',\r\n          backgroundColor: root.backgroundColor,\r\n          borderWidth: '1px',\r\n          borderStyle: 'solid',\r\n          borderColor: root.borderColor,\r\n          borderRadius: effects.roundedCorner2,\r\n          cursor: 'text',\r\n          display: 'block',\r\n          height: ComboBoxHeight,\r\n          overflow: 'hidden',\r\n          whiteSpace: 'nowrap',\r\n          textOverflow: 'ellipsis',\r\n          boxSizing: 'border-box', // Border-box matches Dropdown and TextField\r\n          selectors: {\r\n            '.ms-Label': {\r\n              display: 'inline-block',\r\n              marginBottom: '8px'\r\n            },\r\n            '&.is-open': {\r\n              borderColor: root.borderColor,\r\n              selectors: {\r\n                [HighContrastSelector]: ComboBoxRootHighContrastFocused\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ],\r\n\r\n      rootHovered: {\r\n        borderColor: root.borderHoveredColor,\r\n        selectors: {\r\n          '.ms-ComboBox-Input': [{ color: semanticColors.inputTextHovered }, getPlaceholderStyles(placeholderStylesHovered)],\r\n          [HighContrastSelector]: {\r\n            color: 'HighlightText',\r\n            borderColor: 'Highlight',\r\n            backgroundColor: 'Window',\r\n            MsHighContrastAdjust: 'none'\r\n          }\r\n        }\r\n      },\r\n\r\n      rootPressed: {\r\n        borderColor: root.borderPressedColor,\r\n        selectors: {\r\n          [HighContrastSelector]: ComboBoxRootHighContrastFocused\r\n        }\r\n      },\r\n\r\n      rootFocused: {\r\n        borderColor: root.borderFocusedColor,\r\n        selectors: {\r\n          '.ms-ComboBox-Input': {\r\n            color: semanticColors.inputTextHovered\r\n          },\r\n          [HighContrastSelector]: ComboBoxRootHighContrastFocused\r\n        }\r\n      },\r\n\r\n      rootDisabled: getDisabledStyles(theme),\r\n\r\n      rootError: {\r\n        borderColor: root.erroredColor,\r\n        marginBottom: '5px'\r\n      },\r\n\r\n      rootDisallowFreeForm: {},\r\n\r\n      input: [\r\n        getPlaceholderStyles(placeholderStyles),\r\n        {\r\n          backgroundColor: root.backgroundColor,\r\n          color: root.textColor,\r\n          boxSizing: 'border-box',\r\n          width: '100%',\r\n          height: '28px',\r\n          borderStyle: 'none',\r\n          outline: 'none',\r\n          font: 'inherit',\r\n          textOverflow: 'ellipsis',\r\n          padding: '0',\r\n          selectors: {\r\n            '::-ms-clear': {\r\n              display: 'none'\r\n            }\r\n          }\r\n        }\r\n      ],\r\n\r\n      inputDisabled: [getDisabledStyles(theme), getPlaceholderStyles(disabledPlaceholderStyles)],\r\n      errorMessage: [\r\n        theme.fonts.small,\r\n        {\r\n          color: root.erroredColor\r\n        }\r\n      ],\r\n\r\n      callout: {\r\n        boxShadow: effects.elevation8\r\n      },\r\n\r\n      optionsContainerWrapper: {\r\n        width: comboBoxOptionWidth\r\n      },\r\n\r\n      optionsContainer: {\r\n        display: 'block'\r\n      },\r\n\r\n      header: [\r\n        fonts.medium,\r\n        {\r\n          fontWeight: FontWeights.semibold,\r\n          color: option.headerTextColor,\r\n          backgroundColor: 'none',\r\n          borderStyle: 'none',\r\n          height: ComboBoxOptionHeight,\r\n          lineHeight: ComboBoxOptionHeight,\r\n          cursor: 'default',\r\n          padding: '0 8px',\r\n          userSelect: 'none',\r\n          textAlign: 'left'\r\n        }\r\n      ],\r\n\r\n      divider: {\r\n        height: 1,\r\n        backgroundColor: option.dividerBorderColor\r\n      }\r\n    };\r\n\r\n    return concatStyleSets(styles, customStyles);\r\n  }\r\n);\r\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}