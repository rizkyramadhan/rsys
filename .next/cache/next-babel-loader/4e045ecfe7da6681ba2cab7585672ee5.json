{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Styling_1 = require(\"../../Styling\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar GlobalClassNames = {\n  root: 'ms-Shimmer-container',\n  shimmerWrapper: 'ms-Shimmer-shimmerWrapper',\n  shimmerGradient: 'ms-Shimmer-shimmerGradient',\n  dataWrapper: 'ms-Shimmer-dataWrapper'\n};\nvar BACKGROUND_OFF_SCREEN_POSITION = '100%';\nvar shimmerAnimation = Styling_1.keyframes({\n  '0%': {\n    transform: \"translateX(-\" + BACKGROUND_OFF_SCREEN_POSITION + \")\"\n  },\n  '100%': {\n    transform: \"translateX(\" + BACKGROUND_OFF_SCREEN_POSITION + \")\"\n  }\n});\nvar shimmerAnimationRTL = Styling_1.keyframes({\n  '100%': {\n    transform: \"translateX(-\" + BACKGROUND_OFF_SCREEN_POSITION + \")\"\n  },\n  '0%': {\n    transform: \"translateX(\" + BACKGROUND_OFF_SCREEN_POSITION + \")\"\n  }\n});\n\nfunction getStyles(props) {\n  var _a;\n\n  var isDataLoaded = props.isDataLoaded,\n      className = props.className,\n      theme = props.theme,\n      transitionAnimationInterval = props.transitionAnimationInterval,\n      shimmerColor = props.shimmerColor,\n      shimmerWaveColor = props.shimmerWaveColor;\n  var semanticColors = theme.semanticColors;\n  var classNames = Styling_1.getGlobalClassNames(GlobalClassNames, theme);\n  var isRTL = Utilities_1.getRTL();\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      position: 'relative',\n      height: 'auto'\n    }, className],\n    shimmerWrapper: [classNames.shimmerWrapper, {\n      position: 'relative',\n      overflow: 'hidden',\n      transform: 'translateZ(0)',\n      backgroundColor: shimmerColor || semanticColors.disabledBackground,\n      transition: \"opacity \" + transitionAnimationInterval + \"ms\",\n      selectors: (_a = {\n        '> *': {\n          transform: 'translateZ(0)'\n        }\n      }, _a[Styling_1.HighContrastSelector] = {\n        background: \"WindowText\\n                        linear-gradient(\\n                          to right,\\n                          transparent 0%,\\n                          Window 50%,\\n                          transparent 100%)\\n                        0 0 / 90% 100%\\n                        no-repeat\"\n      }, _a)\n    }, isDataLoaded && {\n      opacity: '0',\n      position: 'absolute',\n      top: '0',\n      bottom: '0',\n      left: '0',\n      right: '0'\n    }],\n    shimmerGradient: [classNames.shimmerGradient, {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      background: (shimmerColor || semanticColors.disabledBackground) + \"\\n                      linear-gradient(\\n                        to right,\\n                        \" + (shimmerColor || semanticColors.disabledBackground) + \" 0%,\\n                        \" + (shimmerWaveColor || semanticColors.bodyDivider) + \" 50%,\\n                        \" + (shimmerColor || semanticColors.disabledBackground) + \" 100%)\\n                      0 0 / 90% 100%\\n                      no-repeat\",\n      transform: \"translateX(-\" + BACKGROUND_OFF_SCREEN_POSITION + \")\",\n      animationDuration: '2s',\n      animationTimingFunction: 'ease-in-out',\n      animationDirection: 'normal',\n      animationIterationCount: 'infinite',\n      animationName: isRTL ? shimmerAnimationRTL : shimmerAnimation\n    }],\n    dataWrapper: [classNames.dataWrapper, {\n      position: 'absolute',\n      top: '0',\n      bottom: '0',\n      left: '0',\n      right: '0',\n      opacity: '0',\n      background: 'none',\n      backgroundColor: 'transparent',\n      border: 'none',\n      transition: \"opacity \" + transitionAnimationInterval + \"ms\"\n    }, isDataLoaded && {\n      opacity: '1',\n      position: 'static'\n    }],\n    screenReaderText: Styling_1.hiddenContentStyle\n  };\n}\n\nexports.getStyles = getStyles;","map":{"version":3,"sources":["components/Shimmer/Shimmer.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { IShimmerStyleProps, IShimmerStyles } from './Shimmer.types';\nimport { keyframes, getGlobalClassNames, hiddenContentStyle, HighContrastSelector } from '../../Styling';\nimport { getRTL } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-Shimmer-container',\n  shimmerWrapper: 'ms-Shimmer-shimmerWrapper',\n  shimmerGradient: 'ms-Shimmer-shimmerGradient',\n  dataWrapper: 'ms-Shimmer-dataWrapper'\n};\n\nconst BACKGROUND_OFF_SCREEN_POSITION = '100%';\n\nconst shimmerAnimation: string = keyframes({\n  '0%': {\n    transform: `translateX(-${BACKGROUND_OFF_SCREEN_POSITION})`\n  },\n  '100%': {\n    transform: `translateX(${BACKGROUND_OFF_SCREEN_POSITION})`\n  }\n});\n\nconst shimmerAnimationRTL: string = keyframes({\n  '100%': {\n    transform: `translateX(-${BACKGROUND_OFF_SCREEN_POSITION})`\n  },\n  '0%': {\n    transform: `translateX(${BACKGROUND_OFF_SCREEN_POSITION})`\n  }\n});\n\nexport function getStyles(props: IShimmerStyleProps): IShimmerStyles {\n  const { isDataLoaded, className, theme, transitionAnimationInterval, shimmerColor, shimmerWaveColor } = props;\n\n  const { semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const isRTL = getRTL();\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        position: 'relative',\n        height: 'auto'\n      },\n      className\n    ],\n    shimmerWrapper: [\n      classNames.shimmerWrapper,\n      {\n        position: 'relative',\n        overflow: 'hidden',\n        transform: 'translateZ(0)',\n        backgroundColor: shimmerColor || semanticColors.disabledBackground,\n        transition: `opacity ${transitionAnimationInterval}ms`,\n        selectors: {\n          '> *': {\n            transform: 'translateZ(0)'\n          },\n          [HighContrastSelector]: {\n            background: `WindowText\n                        linear-gradient(\n                          to right,\n                          transparent 0%,\n                          Window 50%,\n                          transparent 100%)\n                        0 0 / 90% 100%\n                        no-repeat`\n          }\n        }\n      },\n      isDataLoaded && {\n        opacity: '0',\n        position: 'absolute',\n        top: '0',\n        bottom: '0',\n        left: '0',\n        right: '0'\n      }\n    ],\n    shimmerGradient: [\n      classNames.shimmerGradient,\n      {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        background: `${shimmerColor || semanticColors.disabledBackground}\n                      linear-gradient(\n                        to right,\n                        ${shimmerColor || semanticColors.disabledBackground} 0%,\n                        ${shimmerWaveColor || semanticColors.bodyDivider} 50%,\n                        ${shimmerColor || semanticColors.disabledBackground} 100%)\n                      0 0 / 90% 100%\n                      no-repeat`,\n        transform: `translateX(-${BACKGROUND_OFF_SCREEN_POSITION})`,\n        animationDuration: '2s',\n        animationTimingFunction: 'ease-in-out',\n        animationDirection: 'normal',\n        animationIterationCount: 'infinite',\n        animationName: isRTL ? shimmerAnimationRTL : shimmerAnimation\n      }\n    ],\n    dataWrapper: [\n      classNames.dataWrapper,\n      {\n        position: 'absolute',\n        top: '0',\n        bottom: '0',\n        left: '0',\n        right: '0',\n        opacity: '0',\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        transition: `opacity ${transitionAnimationInterval}ms`\n      },\n      isDataLoaded && {\n        opacity: '1',\n        position: 'static'\n      }\n    ],\n    screenReaderText: hiddenContentStyle\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}