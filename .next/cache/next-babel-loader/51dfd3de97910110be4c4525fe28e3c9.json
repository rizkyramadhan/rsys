{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Determines the effective checked state of a menu item.\n *\n * @param item {IContextualMenuItem} to get the check state of.\n * @returns {true} if the item is checked.\n * @returns {false} if the item is unchecked.\n * @returns {null} if the item is not checkable.\n */\n\n\nfunction getIsChecked(item) {\n  if (item.canCheck) {\n    return !!(item.isChecked || item.checked);\n  }\n\n  if (typeof item.isChecked === 'boolean') {\n    return item.isChecked;\n  }\n\n  if (typeof item.checked === 'boolean') {\n    return item.checked;\n  } // Item is not checkable.\n\n\n  return null;\n}\n\nexports.getIsChecked = getIsChecked;\n\nfunction hasSubmenu(item) {\n  return !!(item.subMenuProps || item.items);\n}\n\nexports.hasSubmenu = hasSubmenu;\n\nfunction isItemDisabled(item) {\n  return !!(item.isDisabled || item.disabled);\n}\n\nexports.isItemDisabled = isItemDisabled;","map":{"version":3,"sources":["utilities/contextualMenu/contextualMenuUtility.ts"],"names":[],"mappings":";;;;;;;AAEA;;;;;;;;;;AAQA,SAAgB,YAAhB,CAA6B,IAA7B,EAAsD;AACpD,MAAI,IAAI,CAAC,QAAT,EAAmB;AACjB,WAAO,CAAC,EAAE,IAAI,CAAC,SAAL,IAAkB,IAAI,CAAC,OAAzB,CAAR;AACD;;AAED,MAAI,OAAO,IAAI,CAAC,SAAZ,KAA0B,SAA9B,EAAyC;AACvC,WAAO,IAAI,CAAC,SAAZ;AACD;;AAED,MAAI,OAAO,IAAI,CAAC,OAAZ,KAAwB,SAA5B,EAAuC;AACrC,WAAO,IAAI,CAAC,OAAZ;AACD,GAXmD,CAapD;;;AACA,SAAO,IAAP;AACD;;AAfD,OAAA,CAAA,YAAA,GAAA,YAAA;;AAiBA,SAAgB,UAAhB,CAA2B,IAA3B,EAAoD;AAClD,SAAO,CAAC,EAAE,IAAI,CAAC,YAAL,IAAqB,IAAI,CAAC,KAA5B,CAAR;AACD;;AAFD,OAAA,CAAA,UAAA,GAAA,UAAA;;AAIA,SAAgB,cAAhB,CAA+B,IAA/B,EAAwD;AACtD,SAAO,CAAC,EAAE,IAAI,CAAC,UAAL,IAAmB,IAAI,CAAC,QAA1B,CAAR;AACD;;AAFD,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import { IContextualMenuItem } from '../../index';\n\n/**\n * Determines the effective checked state of a menu item.\n *\n * @param item {IContextualMenuItem} to get the check state of.\n * @returns {true} if the item is checked.\n * @returns {false} if the item is unchecked.\n * @returns {null} if the item is not checkable.\n */\nexport function getIsChecked(item: IContextualMenuItem): boolean | null {\n  if (item.canCheck) {\n    return !!(item.isChecked || item.checked);\n  }\n\n  if (typeof item.isChecked === 'boolean') {\n    return item.isChecked;\n  }\n\n  if (typeof item.checked === 'boolean') {\n    return item.checked;\n  }\n\n  // Item is not checkable.\n  return null;\n}\n\nexport function hasSubmenu(item: IContextualMenuItem): boolean {\n  return !!(item.subMenuProps || item.items);\n}\n\nexport function isItemDisabled(item: IContextualMenuItem): boolean {\n  return !!(item.isDisabled || item.disabled);\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}