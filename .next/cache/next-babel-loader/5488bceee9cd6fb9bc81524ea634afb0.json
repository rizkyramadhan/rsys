{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar Utilities_1 = require(\"../../../Utilities\");\n\nvar Button_1 = require(\"../../../Button\");\n\nvar TagItem_styles_1 = require(\"./TagItem.styles\");\n\nvar getClassNames = Utilities_1.classNamesFunction();\n/**\n * {@docCategory TagPicker}\n */\n\nexports.TagItemBase = function (props) {\n  var theme = props.theme,\n      styles = props.styles,\n      selected = props.selected,\n      disabled = props.disabled,\n      enableTagFocusInDisabledPicker = props.enableTagFocusInDisabledPicker,\n      children = props.children,\n      className = props.className,\n      index = props.index,\n      onRemoveItem = props.onRemoveItem,\n      removeButtonAriaLabel = props.removeButtonAriaLabel;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    selected: selected,\n    disabled: disabled\n  });\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    role: 'listitem',\n    key: index,\n    \"data-selection-index\": index,\n    \"data-is-focusable\": (enableTagFocusInDisabledPicker || !disabled) && true\n  }, React.createElement(\"span\", {\n    className: classNames.text,\n    \"aria-label\": children\n  }, children), React.createElement(Button_1.IconButton, {\n    onClick: onRemoveItem,\n    disabled: disabled,\n    iconProps: {\n      iconName: 'Cancel',\n      styles: {\n        root: {\n          fontSize: '12px'\n        }\n      }\n    },\n    className: classNames.close,\n    ariaLabel: removeButtonAriaLabel\n  }));\n};\n\nexports.TagItem = Utilities_1.styled(exports.TagItemBase, TagItem_styles_1.getStyles, undefined, {\n  scope: 'TagItem'\n});","map":{"version":3,"sources":["components/pickers/TagPicker/TagItem.tsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAGA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAEA,IAAM,aAAa,GAAG,WAAA,CAAA,kBAAA,EAAtB;AAEA;;;;AAGa,OAAA,CAAA,WAAA,GAAc,UAAC,KAAD,EAAqB;AAE5C,MAAA,KAAA,GAAA,KAAA,CAAA,KAAA;AAAA,MACA,MAAA,GAAA,KAAA,CAAA,MADA;AAAA,MAEA,QAAA,GAAA,KAAA,CAAA,QAFA;AAAA,MAGA,QAAA,GAAA,KAAA,CAAA,QAHA;AAAA,MAIA,8BAAA,GAAA,KAAA,CAAA,8BAJA;AAAA,MAKA,QAAA,GAAA,KAAA,CAAA,QALA;AAAA,MAMA,SAAA,GAAA,KAAA,CAAA,SANA;AAAA,MAOA,KAAA,GAAA,KAAA,CAAA,KAPA;AAAA,MAQA,YAAA,GAAA,KAAA,CAAA,YARA;AAAA,MASA,qBAAA,GAAA,KAAA,CAAA,qBATA;AAYF,MAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;AACvC,IAAA,KAAK,EAAE,KADgC;AAEvC,IAAA,SAAS,EAAA,SAF8B;AAGvC,IAAA,QAAQ,EAAA,QAH+B;AAIvC,IAAA,QAAQ,EAAA;AAJ+B,GAAT,CAAhC;AAOA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,UAAU,CAAC,IADxB;AAEE,IAAA,IAAI,EAAE,UAFR;AAGE,IAAA,GAAG,EAAE,KAHP;AAGY,4BACY,KAJxB;AAI6B,yBACR,CAAC,8BAA8B,IAAI,CAAC,QAApC,KAAiD;AALtE,GAAA,EAOE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAE,UAAU,CAAC,IAA5B;AAAgC,kBAAc;AAA9C,GAAA,EACG,QADH,CAPF,EAUE,KAAA,CAAA,aAAA,CAAC,QAAA,CAAA,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,YADA;AAET,IAAA,QAAQ,EAAE,QAFD;AAGT,IAAA,SAAS,EAAE;AAAE,MAAA,QAAQ,EAAE,QAAZ;AAAsB,MAAA,MAAM,EAAE;AAAE,QAAA,IAAI,EAAE;AAAE,UAAA,QAAQ,EAAE;AAAZ;AAAR;AAA9B,KAHF;AAIT,IAAA,SAAS,EAAE,UAAU,CAAC,KAJb;AAKT,IAAA,SAAS,EAAE;AALF,GAAX,CAVF,CADF;AAoBD,CAzCY;;AA2CA,OAAA,CAAA,OAAA,GAAU,WAAA,CAAA,MAAA,CAA0D,OAAA,CAAA,WAA1D,EAAuE,gBAAA,CAAA,SAAvE,EAAkF,SAAlF,EAA6F;AAAE,EAAA,KAAK,EAAE;AAAT,CAA7F,CAAV","sourcesContent":["import * as React from 'react';\n\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\n\nimport { ITagItemProps, ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\nimport { getStyles } from './TagItem.styles';\n\nconst getClassNames = classNamesFunction<ITagItemStyleProps, ITagItemStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemBase = (props: ITagItemProps) => {\n  const {\n    theme,\n    styles,\n    selected,\n    disabled,\n    enableTagFocusInDisabledPicker,\n    children,\n    className,\n    index,\n    onRemoveItem,\n    removeButtonAriaLabel\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled\n  });\n\n  return (\n    <div\n      className={classNames.root}\n      role={'listitem'}\n      key={index}\n      data-selection-index={index}\n      data-is-focusable={(enableTagFocusInDisabledPicker || !disabled) && true}\n    >\n      <span className={classNames.text} aria-label={children as string}>\n        {children}\n      </span>\n      <IconButton\n        onClick={onRemoveItem}\n        disabled={disabled}\n        iconProps={{ iconName: 'Cancel', styles: { root: { fontSize: '12px' } } }}\n        className={classNames.close}\n        ariaLabel={removeButtonAriaLabel}\n      />\n    </div>\n  );\n};\n\nexport const TagItem = styled<ITagItemProps, ITagItemStyleProps, ITagItemStyles>(TagItemBase, getStyles, undefined, { scope: 'TagItem' });\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}