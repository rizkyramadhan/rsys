{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Styling_1 = require(\"../../../Styling\");\n\nvar Utilities_1 = require(\"../../../Utilities\");\n\nvar BaseButton_styles_1 = require(\"../BaseButton.styles\");\n\nvar SplitButton_styles_1 = require(\"../SplitButton/SplitButton.styles\");\n\nvar ButtonThemes_1 = require(\"../ButtonThemes\");\n\nvar DEFAULT_BUTTON_HEIGHT = '32px';\nvar DEFAULT_BUTTON_MIN_WIDTH = '80px';\nexports.getStyles = Utilities_1.memoizeFunction(function (theme, customStyles, primary) {\n  var baseButtonStyles = BaseButton_styles_1.getStyles(theme);\n  var splitButtonStyles = SplitButton_styles_1.getStyles(theme);\n  var defaultButtonStyles = {\n    root: {\n      minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n      height: DEFAULT_BUTTON_HEIGHT\n    },\n    label: {\n      fontWeight: Styling_1.FontWeights.semibold\n    }\n  };\n  return Styling_1.concatStyleSets(baseButtonStyles, defaultButtonStyles, primary ? ButtonThemes_1.primaryStyles(theme) : ButtonThemes_1.standardStyles(theme), splitButtonStyles, customStyles);\n});","map":{"version":3,"sources":["components/Button/DefaultButton/DefaultButton.styles.ts"],"names":[],"mappings":";;;;;;;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;AAEA,IAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,IAAM,qBAAqB,GAAG,MAA9B;AACA,IAAM,wBAAwB,GAAG,MAAjC;AAEa,OAAA,CAAA,SAAA,GAAY,WAAA,CAAA,eAAA,CACvB,UAAC,KAAD,EAAgB,YAAhB,EAA8C,OAA9C,EAA+D;AAC7D,MAAM,gBAAgB,GAAkB,mBAAA,CAAA,SAAA,CAAoB,KAApB,CAAxC;AACA,MAAM,iBAAiB,GAAkB,oBAAA,CAAA,SAAA,CAAqB,KAArB,CAAzC;AACA,MAAM,mBAAmB,GAAkB;AACzC,IAAA,IAAI,EAAE;AACJ,MAAA,QAAQ,EAAE,wBADN;AAEJ,MAAA,MAAM,EAAE;AAFJ,KADmC;AAKzC,IAAA,KAAK,EAAE;AACL,MAAA,UAAU,EAAE,SAAA,CAAA,WAAA,CAAY;AADnB;AALkC,GAA3C;AAUA,SAAO,SAAA,CAAA,eAAA,CACL,gBADK,EAEL,mBAFK,EAGL,OAAO,GAAG,cAAA,CAAA,aAAA,CAAc,KAAd,CAAH,GAA0B,cAAA,CAAA,cAAA,CAAe,KAAf,CAH5B,EAIL,iBAJK,EAKL,YALK,CAAP;AAOD,CArBsB,CAAZ","sourcesContent":["import { IButtonStyles } from '../Button.types';\nimport { ITheme, concatStyleSets, FontWeights } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\n\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\n\nconst DEFAULT_BUTTON_HEIGHT = '32px';\nconst DEFAULT_BUTTON_MIN_WIDTH = '80px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, primary?: boolean): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const defaultButtonStyles: IButtonStyles = {\n      root: {\n        minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n        height: DEFAULT_BUTTON_HEIGHT\n      },\n      label: {\n        fontWeight: FontWeights.semibold\n      }\n    };\n\n    return concatStyleSets(\n      baseButtonStyles,\n      defaultButtonStyles,\n      primary ? primaryStyles(theme) : standardStyles(theme),\n      splitButtonStyles,\n      customStyles\n    )!;\n  }\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}