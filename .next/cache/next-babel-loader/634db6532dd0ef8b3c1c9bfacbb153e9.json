{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar Utilities_1 = require(\"../../../Utilities\");\n\nvar CardCallout_1 = require(\"../CardCallout/CardCallout\");\n\nvar getClassNames = Utilities_1.classNamesFunction();\n\nvar PlainCardBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PlainCardBase, _super);\n\n  function PlainCardBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._onKeyDown = function (ev) {\n      if (ev.which === Utilities_1.KeyCodes.escape) {\n        _this.props.onLeave && _this.props.onLeave(ev);\n      }\n    };\n\n    return _this;\n  }\n\n  PlainCardBase.prototype.render = function () {\n    var _a = this.props,\n        styles = _a.styles,\n        theme = _a.theme,\n        className = _a.className;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className\n    });\n    var content = React.createElement(\"div\", {\n      onMouseEnter: this.props.onEnter,\n      onMouseLeave: this.props.onLeave,\n      onKeyDown: this._onKeyDown\n    }, this.props.onRenderPlainCard(this.props.renderData));\n    return React.createElement(CardCallout_1.CardCallout, tslib_1.__assign({}, this.props, {\n      content: content,\n      className: this._classNames.root\n    }));\n  };\n\n  return PlainCardBase;\n}(Utilities_1.BaseComponent);\n\nexports.PlainCardBase = PlainCardBase;","map":{"version":3,"sources":["components/HoverCard/PlainCard/PlainCard.base.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAEA,IAAM,aAAa,GAAG,WAAA,CAAA,kBAAA,EAAtB;;AAEA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,EAAA,MAAA;;AAAnC,WAAA,aAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAoBU,IAAA,KAAA,CAAA,UAAA,GAAa,UAAC,EAAD,EAAqC;AACxD,UAAI,EAAE,CAAC,KAAH,KAAa,WAAA,CAAA,QAAA,CAAS,MAA1B,EAAkC;AAChC,QAAA,KAAI,CAAC,KAAL,CAAW,OAAX,IAAsB,KAAI,CAAC,KAAL,CAAW,OAAX,CAAmB,EAAnB,CAAtB;AACD;AACF,KAJO;;;AAKT;;AAtBQ,EAAA,aAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,MAAA,GAAA,EAAA,CAAA,MAAF;AAAA,QAAU,KAAA,GAAA,EAAA,CAAA,KAAV;AAAA,QAAiB,SAAA,GAAA,EAAA,CAAA,SAAjB;AAEN,SAAK,WAAL,GAAmB,aAAa,CAAC,MAAD,EAAU;AACxC,MAAA,KAAK,EAAE,KADiC;AAExC,MAAA,SAAS,EAAA;AAF+B,KAAV,CAAhC;AAKA,QAAM,OAAO,GACX,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,YAAY,EAAE,KAAK,KAAL,CAAW,OAA9B;AAAuC,MAAA,YAAY,EAAE,KAAK,KAAL,CAAW,OAAhE;AAAyE,MAAA,SAAS,EAAE,KAAK;AAAzF,KAAA,EACG,KAAK,KAAL,CAAW,iBAAX,CAA8B,KAAK,KAAL,CAAW,UAAzC,CADH,CADF;AAMA,WAAO,KAAA,CAAA,aAAA,CAAC,aAAA,CAAA,WAAD,EAAY,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,KAAK,KAAV,EAAe;AAAE,MAAA,OAAO,EAAE,OAAX;AAAoB,MAAA,SAAS,EAAE,KAAK,WAAL,CAAiB;AAAhD,KAAf,CAAZ,CAAP;AACD,GAfM;;AAsBT,SAAA,aAAA;AAAC,CAzBD,CAAmC,WAAA,CAAA,aAAnC,CAAA;;AAAa,OAAA,CAAA,aAAA,GAAA,aAAA","sourcesContent":["import * as React from 'react';\n\nimport { classNamesFunction, BaseComponent, KeyCodes } from '../../../Utilities';\nimport { IPlainCardProps, IPlainCardStyles, IPlainCardStyleProps } from './PlainCard.types';\nimport { CardCallout } from '../CardCallout/CardCallout';\n\nconst getClassNames = classNamesFunction<IPlainCardStyleProps, IPlainCardStyles>();\n\nexport class PlainCardBase extends BaseComponent<IPlainCardProps, {}> {\n  private _classNames: { [key in keyof IPlainCardStyles]: string };\n\n  public render(): JSX.Element {\n    const { styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className\n    });\n\n    const content: JSX.Element = (\n      <div onMouseEnter={this.props.onEnter} onMouseLeave={this.props.onLeave} onKeyDown={this._onKeyDown}>\n        {this.props.onRenderPlainCard!(this.props.renderData)}\n      </div>\n    );\n\n    return <CardCallout {...this.props} content={content} className={this._classNames.root} />;\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    if (ev.which === KeyCodes.escape) {\n      this.props.onLeave && this.props.onLeave(ev);\n    }\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}