{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar Utilities_1 = require(\"../../../Utilities\");\n\nvar TagItemSuggestion_styles_1 = require(\"./TagItemSuggestion.styles\");\n\nvar getClassNames = Utilities_1.classNamesFunction();\n/**\n * {@docCategory TagPicker}\n */\n\nexports.TagItemSuggestionBase = function (props) {\n  var styles = props.styles,\n      theme = props.theme,\n      children = props.children;\n  var classNames = getClassNames(styles, {\n    theme: theme\n  });\n  return React.createElement(\"div\", {\n    className: classNames.suggestionTextOverflow\n  }, \" \", children, \" \");\n};\n\nexports.TagItemSuggestion = Utilities_1.styled(exports.TagItemSuggestionBase, TagItemSuggestion_styles_1.getStyles, undefined, {\n  scope: 'TagItemSuggestion'\n});","map":{"version":3,"sources":["components/pickers/TagPicker/TagItemSuggestion.tsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,0BAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAEA,IAAM,aAAa,GAAG,WAAA,CAAA,kBAAA,EAAtB;AAEA;;;;AAGa,OAAA,CAAA,qBAAA,GAAwB,UAAC,KAAD,EAA+B;AAC1D,MAAA,MAAA,GAAA,KAAA,CAAA,MAAA;AAAA,MAAQ,KAAA,GAAA,KAAA,CAAA,KAAR;AAAA,MAAe,QAAA,GAAA,KAAA,CAAA,QAAf;AAER,MAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;AACvC,IAAA,KAAK,EAAE;AADgC,GAAT,CAAhC;AAIA,SAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,UAAU,CAAC;AAA3B,GAAA,E,GAAA,EAAqD,QAArD,EAAqE,GAArE,CAAP;AACD,CARY;;AAUA,OAAA,CAAA,iBAAA,GAAoB,WAAA,CAAA,MAAA,CAC/B,OAAA,CAAA,qBAD+B,EAE/B,0BAAA,CAAA,SAF+B,EAG/B,SAH+B,EAI/B;AAAE,EAAA,KAAK,EAAE;AAAT,CAJ+B,CAApB","sourcesContent":["import * as React from 'react';\n\nimport { classNamesFunction, styled } from '../../../Utilities';\nimport { ITagItemSuggestionProps, ITagItemSuggestionStyleProps, ITagItemSuggestionStyles } from './TagPicker.types';\nimport { getStyles } from './TagItemSuggestion.styles';\n\nconst getClassNames = classNamesFunction<ITagItemSuggestionStyleProps, ITagItemSuggestionStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemSuggestionBase = (props: ITagItemSuggestionProps) => {\n  const { styles, theme, children } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!\n  });\n\n  return <div className={classNames.suggestionTextOverflow}> {children} </div>;\n};\n\nexport const TagItemSuggestion = styled<ITagItemSuggestionProps, ITagItemSuggestionStyleProps, ITagItemSuggestionStyles>(\n  TagItemSuggestionBase,\n  getStyles,\n  undefined,\n  { scope: 'TagItemSuggestion' }\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}