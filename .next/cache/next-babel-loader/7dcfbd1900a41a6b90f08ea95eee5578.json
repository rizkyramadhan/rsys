{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Styling_1 = require(\"../../Styling\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar GlobalClassNames = {\n  root: 'ms-Checkbox',\n  label: 'ms-Checkbox-label',\n  checkbox: 'ms-Checkbox-checkbox',\n  checkmark: 'ms-Checkbox-checkmark',\n  text: 'ms-Checkbox-text'\n};\nvar MS_CHECKBOX_LABEL_SIZE = '20px';\nvar MS_CHECKBOX_TRANSITION_DURATION = '200ms';\nvar MS_CHECKBOX_TRANSITION_TIMING = 'cubic-bezier(.4, 0, .23, 1)';\n\nexports.getStyles = function (props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n\n  var className = props.className,\n      theme = props.theme,\n      reversed = props.reversed,\n      checked = props.checked,\n      disabled = props.disabled,\n      isUsingCustomLabelRender = props.isUsingCustomLabelRender,\n      indeterminate = props.indeterminate;\n  var semanticColors = theme.semanticColors,\n      effects = theme.effects,\n      palette = theme.palette,\n      fonts = theme.fonts;\n  var classNames = Styling_1.getGlobalClassNames(GlobalClassNames, theme);\n  var checkmarkFontColor = semanticColors.inputForegroundChecked; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBorder\n\n  var checkmarkFontColorHovered = palette.neutralSecondary; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n\n  var checkboxBorderColor = palette.neutralPrimary;\n  var checkboxBorderIndeterminateColor = semanticColors.inputBackgroundChecked;\n  var checkboxBorderColorChecked = semanticColors.inputBackgroundChecked;\n  var checkboxBorderColorDisabled = semanticColors.disabledBodySubtext;\n  var checkboxBorderHoveredColor = semanticColors.inputBorderHovered;\n  var checkboxBorderIndeterminateHoveredColor = semanticColors.inputBackgroundCheckedHovered;\n  var checkboxBackgroundChecked = semanticColors.inputBackgroundChecked; // TODO: after updating the semanticColors slots mapping following 2 tokens need to be semanticColors.inputBackgroundCheckedHovered\n\n  var checkboxBackgroundCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\n  var checkboxBorderColorCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\n  var checkboxHoveredTextColor = semanticColors.inputTextHovered;\n  var checkboxBackgroundDisabledChecked = semanticColors.disabledBodySubtext;\n  var checkboxTextColor = semanticColors.bodyText;\n  var checkboxTextColorDisabled = semanticColors.disabledText;\n  var indeterminateDotStyles = [{\n    content: '\"\"',\n    width: 0,\n    height: 0,\n    borderRadius: effects.roundedCorner2,\n    position: 'absolute',\n    left: 10,\n    right: 0,\n    transitionProperty: 'border-width, border, border-color',\n    transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\n    transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\n    boxSizing: 'border-box'\n  }, indeterminate && {\n    width: 10,\n    height: 10,\n    borderStyle: 'solid',\n    borderColor: checkboxBorderIndeterminateColor,\n    borderWidth: 5,\n    left: 4,\n    top: 4\n  }, indeterminate && disabled && {\n    borderColor: checkboxBorderColorDisabled\n  }];\n  return {\n    root: [classNames.root, {\n      position: 'relative',\n      display: 'flex'\n    }, reversed && 'reversed', checked && 'is-checked', !disabled && 'is-enabled', disabled && 'is-disabled', !disabled && [!checked && {\n      selectors: (_a = {}, _a[\":hover .\" + classNames.checkbox] = {\n        borderColor: checkboxBorderHoveredColor,\n        selectors: (_b = {}, _b[Styling_1.HighContrastSelector] = {\n          borderColor: 'Highlight'\n        }, _b)\n      }, _a[\":focus .\" + classNames.checkbox] = {\n        borderColor: checkboxBorderHoveredColor\n      }, _a[\":hover .\" + classNames.checkmark] = {\n        color: checkmarkFontColorHovered,\n        opacity: '1',\n        selectors: (_c = {}, _c[Styling_1.HighContrastSelector] = {\n          color: 'Highlight'\n        }, _c)\n      }, _a)\n    }, checked && !indeterminate && {\n      selectors: (_d = {}, _d[\":hover .\" + classNames.checkbox] = {\n        background: checkboxBackgroundCheckedHovered,\n        borderColor: checkboxBorderColorCheckedHovered\n      }, _d[\":focus .\" + classNames.checkbox] = {\n        background: checkboxBackgroundCheckedHovered,\n        borderColor: checkboxBorderColorCheckedHovered\n      }, _d[\".\" + classNames.checkbox] = {\n        background: checkboxBorderColorChecked,\n        borderColor: checkboxBorderColorChecked\n      }, _d[Styling_1.HighContrastSelector] = {\n        selectors: (_e = {}, _e[\":hover .\" + classNames.checkbox] = {\n          background: 'Window',\n          borderColor: 'Highlight'\n        }, _e[\":focus .\" + classNames.checkbox] = {\n          background: 'Highlight'\n        }, _e[\":focus:hover .\" + classNames.checkbox] = {\n          background: 'Highlight'\n        }, _e[\":focus:hover .\" + classNames.checkmark] = {\n          color: 'Window'\n        }, _e[\":hover .\" + classNames.checkmark] = {\n          color: 'Highlight'\n        }, _e)\n      }, _d)\n    }, indeterminate && {\n      selectors: (_f = {}, _f[\":hover .\" + classNames.checkbox + \", :hover .\" + classNames.checkbox + \":after\"] = {\n        borderColor: checkboxBorderIndeterminateHoveredColor\n      }, _f[\":focus .\" + classNames.checkbox] = {\n        borderColor: checkboxBorderIndeterminateHoveredColor\n      }, _f[\":hover .\" + classNames.checkmark] = {\n        opacity: '0'\n      }, _f)\n    }, {\n      selectors: (_g = {}, _g[\":hover .\" + classNames.text] = {\n        color: checkboxHoveredTextColor\n      }, _g[\":focus .\" + classNames.text] = {\n        color: checkboxHoveredTextColor\n      }, _g)\n    }], className],\n    input: {\n      position: 'absolute',\n      background: 'none',\n      opacity: 0,\n      selectors: (_h = {}, _h[\".\" + Utilities_1.IsFocusVisibleClassName + \" &:focus + label::before\"] = {\n        outline: '1px solid ' + theme.palette.neutralSecondary,\n        outlineOffset: '2px',\n        selectors: (_j = {}, _j[Styling_1.HighContrastSelector] = {\n          outline: '1px solid ActiveBorder'\n        }, _j)\n      }, _h)\n    },\n    label: [classNames.label, theme.fonts.medium, {\n      display: 'flex',\n      alignItems: isUsingCustomLabelRender ? 'center' : 'flex-start',\n      cursor: disabled ? 'default' : 'pointer',\n      position: 'relative',\n      userSelect: 'none',\n      textAlign: 'left'\n    }, reversed && {\n      flexDirection: 'row-reverse',\n      justifyContent: 'flex-end'\n    }, {\n      selectors: {\n        '&::before': {\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          content: '\"\"',\n          pointerEvents: 'none'\n        }\n      }\n    }],\n    checkbox: [classNames.checkbox, {\n      position: 'relative',\n      display: 'flex',\n      flexShrink: 0,\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: MS_CHECKBOX_LABEL_SIZE,\n      width: MS_CHECKBOX_LABEL_SIZE,\n      border: \"1px solid \" + checkboxBorderColor,\n      borderRadius: effects.roundedCorner2,\n      boxSizing: 'border-box',\n      transitionProperty: 'background, border, border-color',\n      transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\n      transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\n\n      /* in case the icon is bigger than the box */\n      overflow: 'hidden',\n      selectors: {\n        ':after': indeterminate ? indeterminateDotStyles : null\n      }\n    }, indeterminate && {\n      borderColor: checkboxBorderIndeterminateColor\n    }, !reversed ? // this margin on the checkbox is for backwards compat.\n    // notably it has the effect where a customRender is used, there will be only a 4px margin from checkbox to label.\n    // the label by default would have another 4px margin for a total of 8px margin between checkbox and label.\n    // we don't combine the two (and move it into the text) to not incur a breaking change for everyone using custom render atm.\n    {\n      marginRight: 4\n    } : {\n      marginLeft: 4\n    }, !disabled && !indeterminate && checked && {\n      background: checkboxBackgroundChecked,\n      borderColor: checkboxBorderColorChecked,\n      selectors: (_k = {}, _k[Styling_1.HighContrastSelector] = {\n        background: 'Highlight',\n        borderColor: 'Highlight'\n      }, _k)\n    }, disabled && {\n      borderColor: checkboxBorderColorDisabled,\n      selectors: (_l = {}, _l[Styling_1.HighContrastSelector] = {\n        borderColor: 'InactiveBorder'\n      }, _l)\n    }, checked && disabled && {\n      background: checkboxBackgroundDisabledChecked,\n      borderColor: checkboxBorderColorDisabled\n    }],\n    checkmark: [classNames.checkmark, {\n      opacity: checked ? '1' : '0',\n      color: checkmarkFontColor,\n      selectors: (_m = {}, _m[Styling_1.HighContrastSelector] = {\n        color: disabled ? 'InactiveBorder' : 'Window',\n        MsHighContrastAdjust: 'none'\n      }, _m)\n    }],\n    text: [classNames.text, {\n      color: disabled ? checkboxTextColorDisabled : checkboxTextColor,\n      fontSize: fonts.medium.fontSize,\n      lineHeight: '20px'\n    }, !reversed ? {\n      marginLeft: 4\n    } : {\n      marginRight: 4\n    }, disabled && {\n      selectors: (_o = {}, _o[Styling_1.HighContrastSelector] = {\n        // backwards compat for the color of the text when the checkbox was rendered\n        // using a Button.\n        color: 'InactiveBorder'\n      }, _o)\n    }]\n  };\n};","map":{"version":3,"sources":["components/Checkbox/Checkbox.styles.ts"],"names":[],"mappings":";;;;;;;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,IAAM,gBAAgB,GAAG;AACvB,EAAA,IAAI,EAAE,aADiB;AAEvB,EAAA,KAAK,EAAE,mBAFgB;AAGvB,EAAA,QAAQ,EAAE,sBAHa;AAIvB,EAAA,SAAS,EAAE,uBAJY;AAKvB,EAAA,IAAI,EAAE;AALiB,CAAzB;AAQA,IAAM,sBAAsB,GAAG,MAA/B;AACA,IAAM,+BAA+B,GAAG,OAAxC;AACA,IAAM,6BAA6B,GAAG,6BAAtC;;AAEa,OAAA,CAAA,SAAA,GAAY,UAAC,KAAD,EAA2B;;;AAC1C,MAAA,SAAA,GAAA,KAAA,CAAA,SAAA;AAAA,MAAW,KAAA,GAAA,KAAA,CAAA,KAAX;AAAA,MAAkB,QAAA,GAAA,KAAA,CAAA,QAAlB;AAAA,MAA4B,OAAA,GAAA,KAAA,CAAA,OAA5B;AAAA,MAAqC,QAAA,GAAA,KAAA,CAAA,QAArC;AAAA,MAA+C,wBAAA,GAAA,KAAA,CAAA,wBAA/C;AAAA,MAAyE,aAAA,GAAA,KAAA,CAAA,aAAzE;AACA,MAAA,cAAA,GAAA,KAAA,CAAA,cAAA;AAAA,MAAgB,OAAA,GAAA,KAAA,CAAA,OAAhB;AAAA,MAAyB,OAAA,GAAA,KAAA,CAAA,OAAzB;AAAA,MAAkC,KAAA,GAAA,KAAA,CAAA,KAAlC;AAER,MAAM,UAAU,GAAG,SAAA,CAAA,mBAAA,CAAoB,gBAApB,EAAsC,KAAtC,CAAnB;AAEA,MAAM,kBAAkB,GAAG,cAAc,CAAC,sBAA1C,CANkD,CAOlD;;AACA,MAAM,yBAAyB,GAAG,OAAO,CAAC,gBAA1C,CARkD,CASlD;;AACA,MAAM,mBAAmB,GAAG,OAAO,CAAC,cAApC;AACA,MAAM,gCAAgC,GAAG,cAAc,CAAC,sBAAxD;AACA,MAAM,0BAA0B,GAAG,cAAc,CAAC,sBAAlD;AACA,MAAM,2BAA2B,GAAG,cAAc,CAAC,mBAAnD;AACA,MAAM,0BAA0B,GAAG,cAAc,CAAC,kBAAlD;AACA,MAAM,uCAAuC,GAAG,cAAc,CAAC,6BAA/D;AACA,MAAM,yBAAyB,GAAG,cAAc,CAAC,sBAAjD,CAhBkD,CAiBlD;;AACA,MAAM,gCAAgC,GAAG,cAAc,CAAC,6BAAxD;AACA,MAAM,iCAAiC,GAAG,cAAc,CAAC,6BAAzD;AACA,MAAM,wBAAwB,GAAG,cAAc,CAAC,gBAAhD;AACA,MAAM,iCAAiC,GAAG,cAAc,CAAC,mBAAzD;AACA,MAAM,iBAAiB,GAAG,cAAc,CAAC,QAAzC;AACA,MAAM,yBAAyB,GAAG,cAAc,CAAC,YAAjD;AAEA,MAAM,sBAAsB,GAAW,CACrC;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,KAAK,EAAE,CAFT;AAGE,IAAA,MAAM,EAAE,CAHV;AAIE,IAAA,YAAY,EAAE,OAAO,CAAC,cAJxB;AAKE,IAAA,QAAQ,EAAE,UALZ;AAME,IAAA,IAAI,EAAE,EANR;AAOE,IAAA,KAAK,EAAE,CAPT;AAQE,IAAA,kBAAkB,EAAE,oCARtB;AASE,IAAA,kBAAkB,EAAE,+BATtB;AAUE,IAAA,wBAAwB,EAAE,6BAV5B;AAWE,IAAA,SAAS,EAAE;AAXb,GADqC,EAcrC,aAAa,IAAI;AACf,IAAA,KAAK,EAAE,EADQ;AAEf,IAAA,MAAM,EAAE,EAFO;AAGf,IAAA,WAAW,EAAE,OAHE;AAIf,IAAA,WAAW,EAAE,gCAJE;AAKf,IAAA,WAAW,EAAE,CALE;AAMf,IAAA,IAAI,EAAE,CANS;AAOf,IAAA,GAAG,EAAE;AAPU,GAdoB,EAuBrC,aAAa,IACX,QADF,IACc;AACV,IAAA,WAAW,EAAE;AADH,GAxBuB,CAAvC;AA6BA,SAAO;AACL,IAAA,IAAI,EAAE,CACJ,UAAU,CAAC,IADP,EAEJ;AACE,MAAA,QAAQ,EAAE,UADZ;AAEE,MAAA,OAAO,EAAE;AAFX,KAFI,EAMJ,QAAQ,IAAI,UANR,EAOJ,OAAO,IAAI,YAPP,EAQJ,CAAC,QAAD,IAAa,YART,EASJ,QAAQ,IAAI,aATR,EAUJ,CAAC,QAAD,IAAa,CACX,CAAC,OAAD,IAAY;AACV,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,aAAW,UAAU,CAAC,QAAvB,CAAA,GAAoC;AAClC,QAAA,WAAW,EAAE,0BADqB;AAElC,QAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,SAAA,CAAA,oBAAD,CAAA,GAAwB;AACtB,UAAA,WAAW,EAAE;AADS,SADjB,EAIR,EAJQ;AAFyB,OAD7B,EASP,EAAA,CAAC,aAAW,UAAU,CAAC,QAAvB,CAAA,GAAoC;AAAE,QAAA,WAAW,EAAE;AAAf,OAT7B,EAUP,EAAA,CAAC,aAAW,UAAU,CAAC,SAAvB,CAAA,GAAqC;AACnC,QAAA,KAAK,EAAE,yBAD4B;AAEnC,QAAA,OAAO,EAAE,GAF0B;AAGnC,QAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,SAAA,CAAA,oBAAD,CAAA,GAAwB;AACtB,UAAA,KAAK,EAAE;AADe,SADjB,EAIR,EAJQ;AAH0B,OAV9B,EAmBR,EAnBQ;AADC,KADD,EAuBX,OAAO,IACL,CAAC,aADH,IACoB;AAChB,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,aAAW,UAAU,CAAC,QAAvB,CAAA,GAAoC;AAClC,QAAA,UAAU,EAAE,gCADsB;AAElC,QAAA,WAAW,EAAE;AAFqB,OAD7B,EAKP,EAAA,CAAC,aAAW,UAAU,CAAC,QAAvB,CAAA,GAAoC;AAClC,QAAA,UAAU,EAAE,gCADsB;AAElC,QAAA,WAAW,EAAE;AAFqB,OAL7B,EASP,EAAA,CAAC,MAAI,UAAU,CAAC,QAAhB,CAAA,GAA6B;AAC3B,QAAA,UAAU,EAAE,0BADe;AAE3B,QAAA,WAAW,EAAE;AAFc,OATtB,EAaP,EAAA,CAAC,SAAA,CAAA,oBAAD,CAAA,GAAwB;AACtB,QAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,aAAW,UAAU,CAAC,QAAvB,CAAA,GAAoC;AAClC,UAAA,UAAU,EAAE,QADsB;AAElC,UAAA,WAAW,EAAE;AAFqB,SAD7B,EAKP,EAAA,CAAC,aAAW,UAAU,CAAC,QAAvB,CAAA,GAAoC;AAClC,UAAA,UAAU,EAAE;AADsB,SAL7B,EAQP,EAAA,CAAC,mBAAiB,UAAU,CAAC,QAA7B,CAAA,GAA0C;AACxC,UAAA,UAAU,EAAE;AAD4B,SARnC,EAWP,EAAA,CAAC,mBAAiB,UAAU,CAAC,SAA7B,CAAA,GAA2C;AACzC,UAAA,KAAK,EAAE;AADkC,SAXpC,EAcP,EAAA,CAAC,aAAW,UAAU,CAAC,SAAvB,CAAA,GAAqC;AACnC,UAAA,KAAK,EAAE;AAD4B,SAd9B,EAiBR,EAjBQ;AADa,OAbjB,EAiCR,EAjCQ;AADO,KAxBT,EA4DX,aAAa,IAAI;AACf,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,aAAW,UAAU,CAAC,QAAtB,GAA8B,YAA9B,GAA2C,UAAU,CAAC,QAAtD,GAA8D,QAA/D,CAAA,GAA0E;AACxE,QAAA,WAAW,EAAE;AAD2D,OADnE,EAIP,EAAA,CAAC,aAAW,UAAU,CAAC,QAAvB,CAAA,GAAoC;AAClC,QAAA,WAAW,EAAE;AADqB,OAJ7B,EAOP,EAAA,CAAC,aAAW,UAAU,CAAC,SAAvB,CAAA,GAAqC;AACnC,QAAA,OAAO,EAAE;AAD0B,OAP9B,EAUR,EAVQ;AADM,KA5DN,EAyEX;AACE,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,aAAW,UAAU,CAAC,IAAvB,CAAA,GAAgC;AAAE,QAAA,KAAK,EAAE;AAAT,OADzB,EAEP,EAAA,CAAC,aAAW,UAAU,CAAC,IAAvB,CAAA,GAAgC;AAAE,QAAA,KAAK,EAAE;AAAT,OAFzB,EAGR,EAHQ;AADX,KAzEW,CAVT,EA0FJ,SA1FI,CADD;AA6FL,IAAA,KAAK,EAAE;AACL,MAAA,QAAQ,EAAE,UADL;AAEL,MAAA,UAAU,EAAE,MAFP;AAIL,MAAA,OAAO,EAAE,CAJJ;AAKL,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,MAAI,WAAA,CAAA,uBAAJ,GAA2B,0BAA5B,CAAA,GAAyD;AACvD,QAAA,OAAO,EAAE,eAAe,KAAK,CAAC,OAAN,CAAc,gBADiB;AAEvD,QAAA,aAAa,EAAE,KAFwC;AAGvD,QAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,SAAA,CAAA,oBAAD,CAAA,GAAwB;AACtB,UAAA,OAAO,EAAE;AADa,SADjB,EAIR,EAJQ;AAH8C,OADlD,EAUR,EAVQ;AALJ,KA7FF;AA8GL,IAAA,KAAK,EAAE,CACL,UAAU,CAAC,KADN,EAEL,KAAK,CAAC,KAAN,CAAY,MAFP,EAGL;AACE,MAAA,OAAO,EAAE,MADX;AAEE,MAAA,UAAU,EAAE,wBAAwB,GAAG,QAAH,GAAc,YAFpD;AAGE,MAAA,MAAM,EAAE,QAAQ,GAAG,SAAH,GAAe,SAHjC;AAIE,MAAA,QAAQ,EAAE,UAJZ;AAKE,MAAA,UAAU,EAAE,MALd;AAME,MAAA,SAAS,EAAE;AANb,KAHK,EAWL,QAAQ,IAAI;AACV,MAAA,aAAa,EAAE,aADL;AAEV,MAAA,cAAc,EAAE;AAFN,KAXP,EAeL;AACE,MAAA,SAAS,EAAE;AACT,qBAAa;AACX,UAAA,QAAQ,EAAE,UADC;AAEX,UAAA,IAAI,EAAE,CAFK;AAGX,UAAA,KAAK,EAAE,CAHI;AAIX,UAAA,GAAG,EAAE,CAJM;AAKX,UAAA,MAAM,EAAE,CALG;AAMX,UAAA,OAAO,EAAE,IANE;AAOX,UAAA,aAAa,EAAE;AAPJ;AADJ;AADb,KAfK,CA9GF;AA2IL,IAAA,QAAQ,EAAE,CACR,UAAU,CAAC,QADH,EAER;AACE,MAAA,QAAQ,EAAE,UADZ;AAEE,MAAA,OAAO,EAAE,MAFX;AAGE,MAAA,UAAU,EAAE,CAHd;AAIE,MAAA,UAAU,EAAE,QAJd;AAKE,MAAA,cAAc,EAAE,QALlB;AAME,MAAA,MAAM,EAAE,sBANV;AAOE,MAAA,KAAK,EAAE,sBAPT;AAQE,MAAA,MAAM,EAAE,eAAa,mBARvB;AASE,MAAA,YAAY,EAAE,OAAO,CAAC,cATxB;AAUE,MAAA,SAAS,EAAE,YAVb;AAWE,MAAA,kBAAkB,EAAE,kCAXtB;AAYE,MAAA,kBAAkB,EAAE,+BAZtB;AAaE,MAAA,wBAAwB,EAAE,6BAb5B;;AAeE;AACA,MAAA,QAAQ,EAAE,QAhBZ;AAiBE,MAAA,SAAS,EAAE;AACT,kBAAU,aAAa,GAAG,sBAAH,GAA4B;AAD1C;AAjBb,KAFQ,EAuBR,aAAa,IAAI;AACf,MAAA,WAAW,EAAE;AADE,KAvBT,EA0BR,CAAC,QAAD,GACI;AACA;AACA;AACA;AACA;AACE,MAAA,WAAW,EAAE;AADf,KALJ,GAQI;AACE,MAAA,UAAU,EAAE;AADd,KAlCI,EAqCR,CAAC,QAAD,IACE,CAAC,aADH,IAEE,OAFF,IAEa;AACT,MAAA,UAAU,EAAE,yBADH;AAET,MAAA,WAAW,EAAE,0BAFJ;AAGT,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,SAAA,CAAA,oBAAD,CAAA,GAAwB;AACtB,QAAA,UAAU,EAAE,WADU;AAEtB,QAAA,WAAW,EAAE;AAFS,OADjB,EAKR,EALQ;AAHA,KAvCL,EAiDR,QAAQ,IAAI;AACV,MAAA,WAAW,EAAE,2BADH;AAEV,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,SAAA,CAAA,oBAAD,CAAA,GAAwB;AACtB,QAAA,WAAW,EAAE;AADS,OADjB,EAIR,EAJQ;AAFC,KAjDJ,EAyDR,OAAO,IACL,QADF,IACc;AACV,MAAA,UAAU,EAAE,iCADF;AAEV,MAAA,WAAW,EAAE;AAFH,KA1DN,CA3IL;AA0ML,IAAA,SAAS,EAAE,CACT,UAAU,CAAC,SADF,EAET;AACE,MAAA,OAAO,EAAE,OAAO,GAAG,GAAH,GAAS,GAD3B;AAEE,MAAA,KAAK,EAAE,kBAFT;AAGE,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,SAAA,CAAA,oBAAD,CAAA,GAAwB;AACtB,QAAA,KAAK,EAAE,QAAQ,GAAG,gBAAH,GAAsB,QADf;AAEtB,QAAA,oBAAoB,EAAE;AAFA,OADjB,EAKR,EALQ;AAHX,KAFS,CA1MN;AAuNL,IAAA,IAAI,EAAE,CACJ,UAAU,CAAC,IADP,EAEJ;AACE,MAAA,KAAK,EAAE,QAAQ,GAAG,yBAAH,GAA+B,iBADhD;AAEE,MAAA,QAAQ,EAAE,KAAK,CAAC,MAAN,CAAa,QAFzB;AAGE,MAAA,UAAU,EAAE;AAHd,KAFI,EAOJ,CAAC,QAAD,GACI;AACE,MAAA,UAAU,EAAE;AADd,KADJ,GAII;AACE,MAAA,WAAW,EAAE;AADf,KAXA,EAcJ,QAAQ,IAAI;AACV,MAAA,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,SAAA,CAAA,oBAAD,CAAA,GAAwB;AACtB;AACA;AACA,QAAA,KAAK,EAAE;AAHe,OADjB,EAMR,EANQ;AADC,KAdR;AAvND,GAAP;AAgPD,CAtSY","sourcesContent":["import { ICheckboxStyleProps, ICheckboxStyles } from './Checkbox.types';\r\nimport { HighContrastSelector, getGlobalClassNames, IStyle } from '../../Styling';\r\nimport { IsFocusVisibleClassName } from '../../Utilities';\r\n\r\nconst GlobalClassNames = {\r\n  root: 'ms-Checkbox',\r\n  label: 'ms-Checkbox-label',\r\n  checkbox: 'ms-Checkbox-checkbox',\r\n  checkmark: 'ms-Checkbox-checkmark',\r\n  text: 'ms-Checkbox-text'\r\n};\r\n\r\nconst MS_CHECKBOX_LABEL_SIZE = '20px';\r\nconst MS_CHECKBOX_TRANSITION_DURATION = '200ms';\r\nconst MS_CHECKBOX_TRANSITION_TIMING = 'cubic-bezier(.4, 0, .23, 1)';\r\n\r\nexport const getStyles = (props: ICheckboxStyleProps): ICheckboxStyles => {\r\n  const { className, theme, reversed, checked, disabled, isUsingCustomLabelRender, indeterminate } = props;\r\n  const { semanticColors, effects, palette, fonts } = theme;\r\n\r\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\r\n\r\n  const checkmarkFontColor = semanticColors.inputForegroundChecked;\r\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBorder\r\n  const checkmarkFontColorHovered = palette.neutralSecondary;\r\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\r\n  const checkboxBorderColor = palette.neutralPrimary;\r\n  const checkboxBorderIndeterminateColor = semanticColors.inputBackgroundChecked;\r\n  const checkboxBorderColorChecked = semanticColors.inputBackgroundChecked;\r\n  const checkboxBorderColorDisabled = semanticColors.disabledBodySubtext;\r\n  const checkboxBorderHoveredColor = semanticColors.inputBorderHovered;\r\n  const checkboxBorderIndeterminateHoveredColor = semanticColors.inputBackgroundCheckedHovered;\r\n  const checkboxBackgroundChecked = semanticColors.inputBackgroundChecked;\r\n  // TODO: after updating the semanticColors slots mapping following 2 tokens need to be semanticColors.inputBackgroundCheckedHovered\r\n  const checkboxBackgroundCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\r\n  const checkboxBorderColorCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\r\n  const checkboxHoveredTextColor = semanticColors.inputTextHovered;\r\n  const checkboxBackgroundDisabledChecked = semanticColors.disabledBodySubtext;\r\n  const checkboxTextColor = semanticColors.bodyText;\r\n  const checkboxTextColorDisabled = semanticColors.disabledText;\r\n\r\n  const indeterminateDotStyles: IStyle = [\r\n    {\r\n      content: '\"\"',\r\n      width: 0,\r\n      height: 0,\r\n      borderRadius: effects.roundedCorner2,\r\n      position: 'absolute',\r\n      left: 10,\r\n      right: 0,\r\n      transitionProperty: 'border-width, border, border-color',\r\n      transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\r\n      transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\r\n      boxSizing: 'border-box'\r\n    },\r\n    indeterminate && {\r\n      width: 10,\r\n      height: 10,\r\n      borderStyle: 'solid',\r\n      borderColor: checkboxBorderIndeterminateColor,\r\n      borderWidth: 5,\r\n      left: 4,\r\n      top: 4\r\n    },\r\n    indeterminate &&\r\n      disabled && {\r\n        borderColor: checkboxBorderColorDisabled\r\n      }\r\n  ];\r\n\r\n  return {\r\n    root: [\r\n      classNames.root,\r\n      {\r\n        position: 'relative',\r\n        display: 'flex'\r\n      },\r\n      reversed && 'reversed',\r\n      checked && 'is-checked',\r\n      !disabled && 'is-enabled',\r\n      disabled && 'is-disabled',\r\n      !disabled && [\r\n        !checked && {\r\n          selectors: {\r\n            [`:hover .${classNames.checkbox}`]: {\r\n              borderColor: checkboxBorderHoveredColor,\r\n              selectors: {\r\n                [HighContrastSelector]: {\r\n                  borderColor: 'Highlight'\r\n                }\r\n              }\r\n            },\r\n            [`:focus .${classNames.checkbox}`]: { borderColor: checkboxBorderHoveredColor },\r\n            [`:hover .${classNames.checkmark}`]: {\r\n              color: checkmarkFontColorHovered,\r\n              opacity: '1',\r\n              selectors: {\r\n                [HighContrastSelector]: {\r\n                  color: 'Highlight'\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        checked &&\r\n          !indeterminate && {\r\n            selectors: {\r\n              [`:hover .${classNames.checkbox}`]: {\r\n                background: checkboxBackgroundCheckedHovered,\r\n                borderColor: checkboxBorderColorCheckedHovered\r\n              },\r\n              [`:focus .${classNames.checkbox}`]: {\r\n                background: checkboxBackgroundCheckedHovered,\r\n                borderColor: checkboxBorderColorCheckedHovered\r\n              },\r\n              [`.${classNames.checkbox}`]: {\r\n                background: checkboxBorderColorChecked,\r\n                borderColor: checkboxBorderColorChecked\r\n              },\r\n              [HighContrastSelector]: {\r\n                selectors: {\r\n                  [`:hover .${classNames.checkbox}`]: {\r\n                    background: 'Window',\r\n                    borderColor: 'Highlight'\r\n                  },\r\n                  [`:focus .${classNames.checkbox}`]: {\r\n                    background: 'Highlight'\r\n                  },\r\n                  [`:focus:hover .${classNames.checkbox}`]: {\r\n                    background: 'Highlight'\r\n                  },\r\n                  [`:focus:hover .${classNames.checkmark}`]: {\r\n                    color: 'Window'\r\n                  },\r\n                  [`:hover .${classNames.checkmark}`]: {\r\n                    color: 'Highlight'\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n        indeterminate && {\r\n          selectors: {\r\n            [`:hover .${classNames.checkbox}, :hover .${classNames.checkbox}:after`]: {\r\n              borderColor: checkboxBorderIndeterminateHoveredColor\r\n            },\r\n            [`:focus .${classNames.checkbox}`]: {\r\n              borderColor: checkboxBorderIndeterminateHoveredColor\r\n            },\r\n            [`:hover .${classNames.checkmark}`]: {\r\n              opacity: '0'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          selectors: {\r\n            [`:hover .${classNames.text}`]: { color: checkboxHoveredTextColor },\r\n            [`:focus .${classNames.text}`]: { color: checkboxHoveredTextColor }\r\n          }\r\n        }\r\n      ],\r\n      className\r\n    ],\r\n    input: {\r\n      position: 'absolute',\r\n      background: 'none',\r\n\r\n      opacity: 0,\r\n      selectors: {\r\n        [`.${IsFocusVisibleClassName} &:focus + label::before`]: {\r\n          outline: '1px solid ' + theme.palette.neutralSecondary,\r\n          outlineOffset: '2px',\r\n          selectors: {\r\n            [HighContrastSelector]: {\r\n              outline: '1px solid ActiveBorder'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    label: [\r\n      classNames.label,\r\n      theme.fonts.medium,\r\n      {\r\n        display: 'flex',\r\n        alignItems: isUsingCustomLabelRender ? 'center' : 'flex-start',\r\n        cursor: disabled ? 'default' : 'pointer',\r\n        position: 'relative',\r\n        userSelect: 'none',\r\n        textAlign: 'left'\r\n      },\r\n      reversed && {\r\n        flexDirection: 'row-reverse',\r\n        justifyContent: 'flex-end'\r\n      },\r\n      {\r\n        selectors: {\r\n          '&::before': {\r\n            position: 'absolute',\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            content: '\"\"',\r\n            pointerEvents: 'none'\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    checkbox: [\r\n      classNames.checkbox,\r\n      {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        flexShrink: 0,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: MS_CHECKBOX_LABEL_SIZE,\r\n        width: MS_CHECKBOX_LABEL_SIZE,\r\n        border: `1px solid ${checkboxBorderColor}`,\r\n        borderRadius: effects.roundedCorner2,\r\n        boxSizing: 'border-box',\r\n        transitionProperty: 'background, border, border-color',\r\n        transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\r\n        transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\r\n\r\n        /* in case the icon is bigger than the box */\r\n        overflow: 'hidden',\r\n        selectors: {\r\n          ':after': indeterminate ? indeterminateDotStyles : null\r\n        }\r\n      },\r\n      indeterminate && {\r\n        borderColor: checkboxBorderIndeterminateColor\r\n      },\r\n      !reversed\r\n        ? // this margin on the checkbox is for backwards compat.\r\n          // notably it has the effect where a customRender is used, there will be only a 4px margin from checkbox to label.\r\n          // the label by default would have another 4px margin for a total of 8px margin between checkbox and label.\r\n          // we don't combine the two (and move it into the text) to not incur a breaking change for everyone using custom render atm.\r\n          {\r\n            marginRight: 4\r\n          }\r\n        : {\r\n            marginLeft: 4\r\n          },\r\n      !disabled &&\r\n        !indeterminate &&\r\n        checked && {\r\n          background: checkboxBackgroundChecked,\r\n          borderColor: checkboxBorderColorChecked,\r\n          selectors: {\r\n            [HighContrastSelector]: {\r\n              background: 'Highlight',\r\n              borderColor: 'Highlight'\r\n            }\r\n          }\r\n        },\r\n      disabled && {\r\n        borderColor: checkboxBorderColorDisabled,\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            borderColor: 'InactiveBorder'\r\n          }\r\n        }\r\n      },\r\n      checked &&\r\n        disabled && {\r\n          background: checkboxBackgroundDisabledChecked,\r\n          borderColor: checkboxBorderColorDisabled\r\n        }\r\n    ],\r\n    checkmark: [\r\n      classNames.checkmark,\r\n      {\r\n        opacity: checked ? '1' : '0',\r\n        color: checkmarkFontColor,\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            color: disabled ? 'InactiveBorder' : 'Window',\r\n            MsHighContrastAdjust: 'none'\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    text: [\r\n      classNames.text,\r\n      {\r\n        color: disabled ? checkboxTextColorDisabled : checkboxTextColor,\r\n        fontSize: fonts.medium.fontSize,\r\n        lineHeight: '20px'\r\n      },\r\n      !reversed\r\n        ? {\r\n            marginLeft: 4\r\n          }\r\n        : {\r\n            marginRight: 4\r\n          },\r\n      disabled && {\r\n        selectors: {\r\n          [HighContrastSelector]: {\r\n            // backwards compat for the color of the text when the checkbox was rendered\r\n            // using a Button.\r\n            color: 'InactiveBorder'\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  };\r\n};\r\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}