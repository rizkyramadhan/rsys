{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n/** @jsx withSlots */\n\n\nvar React = require(\"react\");\n\nvar Foundation_1 = require(\"../../Foundation\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar Stack_styles_1 = require(\"./Stack.styles\");\n\nvar StackItem_1 = require(\"./StackItem/StackItem\");\n\nvar StackItemType = Foundation_1.withSlots(StackItem_1.StackItem, null).type;\n\nvar StackView = function (props) {\n  var _a = props.as,\n      RootType = _a === void 0 ? 'div' : _a,\n      disableShrink = props.disableShrink,\n      wrap = props.wrap,\n      rest = tslib_1.__rest(props, [\"as\", \"disableShrink\", \"wrap\"]);\n\n  Utilities_1.warnDeprecations('Stack', props, {\n    gap: 'tokens.childrenGap',\n    maxHeight: 'tokens.maxHeight',\n    maxWidth: 'tokens.maxWidth',\n    padding: 'tokens.padding'\n  });\n  var stackChildren = React.Children.map(props.children, function (child, index) {\n    if (!child) {\n      return null;\n    }\n\n    if (child.type === StackItemType) {\n      var defaultItemProps = {\n        shrink: !disableShrink\n      };\n      return React.cloneElement(child, tslib_1.__assign({}, defaultItemProps, child.props));\n    }\n\n    return child;\n  });\n  var nativeProps = Utilities_1.getNativeProps(rest, Utilities_1.htmlElementProperties);\n  var Slots = Foundation_1.getSlots(props, {\n    root: RootType,\n    inner: 'div'\n  });\n\n  if (wrap) {\n    return Foundation_1.withSlots(Slots.root, tslib_1.__assign({}, nativeProps), Foundation_1.withSlots(Slots.inner, null, stackChildren));\n  }\n\n  return Foundation_1.withSlots(Slots.root, tslib_1.__assign({}, nativeProps), stackChildren);\n};\n\nvar StackStatics = {\n  Item: StackItem_1.StackItem\n};\nexports.Stack = Foundation_1.createComponent(StackView, {\n  displayName: 'Stack',\n  styles: Stack_styles_1.styles,\n  statics: StackStatics\n});\nexports.default = exports.Stack;","map":{"version":3,"sources":["components/Stack/Stack.tsx"],"names":[],"mappings":";;;;;;;;;AAAA;;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AAGA,IAAM,aAAa,GAAI,YAAA,CAAA,SAAA,CAAC,WAAA,CAAA,SAAD,EAAU,IAAV,EAAsD,IAA7E;;AAEA,IAAM,SAAS,GAA4B,UAAA,KAAA,EAAK;AACtC,MAAA,EAAA,GAAA,KAAA,CAAA,EAAA;AAAA,MAAA,QAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,EAAA;AAAA,MAAsB,aAAA,GAAA,KAAA,CAAA,aAAtB;AAAA,MAAqC,IAAA,GAAA,KAAA,CAAA,IAArC;AAAA,MAA2C,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,IAAA,EAAA,eAAA,EAAA,MAAA,CAAA,CAA3C;;AAER,EAAA,WAAA,CAAA,gBAAA,CAAiB,OAAjB,EAA0B,KAA1B,EAAiC;AAC/B,IAAA,GAAG,EAAE,oBAD0B;AAE/B,IAAA,SAAS,EAAE,kBAFoB;AAG/B,IAAA,QAAQ,EAAE,iBAHqB;AAI/B,IAAA,OAAO,EAAE;AAJsB,GAAjC;AAOA,MAAM,aAAa,GAAgC,KAAK,CAAC,QAAN,CAAe,GAAf,CACjD,KAAK,CAAC,QAD2C,EAEjD,UAAC,KAAD,EAA6C,KAA7C,EAA0D;AACxD,QAAI,CAAC,KAAL,EAAY;AACV,aAAO,IAAP;AACD;;AAED,QAAI,KAAK,CAAC,IAAN,KAAe,aAAnB,EAAkC;AAChC,UAAM,gBAAgB,GAAoB;AACxC,QAAA,MAAM,EAAE,CAAC;AAD+B,OAA1C;AAIA,aAAO,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAAwB,OAAA,CAAA,QAAA,CAAA,EAAA,EAC1B,gBAD0B,EAE1B,KAAK,CAAC,KAFoB,CAAxB,CAAP;AAID;;AAED,WAAO,KAAP;AACD,GAnBgD,CAAnD;AAsBA,MAAM,WAAW,GAAG,WAAA,CAAA,cAAA,CAAqD,IAArD,EAA2D,WAAA,CAAA,qBAA3D,CAApB;AAEA,MAAM,KAAK,GAAG,YAAA,CAAA,QAAA,CAAmC,KAAnC,EAA0C;AACtD,IAAA,IAAI,EAAE,QADgD;AAEtD,IAAA,KAAK,EAAE;AAF+C,GAA1C,CAAd;;AAKA,MAAI,IAAJ,EAAU;AACR,WACE,YAAA,CAAA,SAAA,CAAC,KAAK,CAAC,IAAP,EAAW,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,WAAL,CAAX,EACE,YAAA,CAAA,SAAA,CAAC,KAAK,CAAC,KAAP,EAAY,IAAZ,EAAc,aAAd,CADF,CADF;AAKD;;AAED,SAAO,YAAA,CAAA,SAAA,CAAC,KAAK,CAAC,IAAP,EAAW,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,WAAL,CAAX,EAA8B,aAA9B,CAAP;AACD,CAhDD;;AAkDA,IAAM,YAAY,GAAG;AACnB,EAAA,IAAI,EAAE,WAAA,CAAA;AADa,CAArB;AAIa,OAAA,CAAA,KAAA,GAET,YAAA,CAAA,eAAA,CAAgB,SAAhB,EAA2B;AAC7B,EAAA,WAAW,EAAE,OADgB;AAE7B,EAAA,MAAM,EAAA,cAAA,CAAA,MAFuB;AAG7B,EAAA,OAAO,EAAE;AAHoB,CAA3B,CAFS;AAQb,OAAA,CAAA,OAAA,GAAe,OAAA,CAAA,KAAf","sourcesContent":["/** @jsx withSlots */\nimport * as React from 'react';\nimport { withSlots, createComponent, getSlots } from '../../Foundation';\nimport { getNativeProps, htmlElementProperties, warnDeprecations } from '../../Utilities';\nimport { styles } from './Stack.styles';\nimport { IStackComponent, IStackProps, IStackSlots } from './Stack.types';\nimport { StackItem } from './StackItem/StackItem';\nimport { IStackItemProps } from './StackItem/StackItem.types';\n\nconst StackItemType = (<StackItem /> as React.ReactElement<IStackItemProps>).type;\n\nconst StackView: IStackComponent['view'] = props => {\n  const { as: RootType = 'div', disableShrink, wrap, ...rest } = props;\n\n  warnDeprecations('Stack', props, {\n    gap: 'tokens.childrenGap',\n    maxHeight: 'tokens.maxHeight',\n    maxWidth: 'tokens.maxWidth',\n    padding: 'tokens.padding'\n  });\n\n  const stackChildren: (React.ReactChild | null)[] = React.Children.map(\n    props.children,\n    (child: React.ReactElement<IStackItemProps>, index: number) => {\n      if (!child) {\n        return null;\n      }\n\n      if (child.type === StackItemType) {\n        const defaultItemProps: IStackItemProps = {\n          shrink: !disableShrink\n        };\n\n        return React.cloneElement(child, {\n          ...defaultItemProps,\n          ...child.props\n        });\n      }\n\n      return child;\n    }\n  );\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(rest, htmlElementProperties);\n\n  const Slots = getSlots<IStackProps, IStackSlots>(props, {\n    root: RootType,\n    inner: 'div'\n  });\n\n  if (wrap) {\n    return (\n      <Slots.root {...nativeProps}>\n        <Slots.inner>{stackChildren}</Slots.inner>\n      </Slots.root>\n    );\n  }\n\n  return <Slots.root {...nativeProps}>{stackChildren}</Slots.root>;\n};\n\nconst StackStatics = {\n  Item: StackItem\n};\n\nexport const Stack: React.StatelessComponent<IStackProps> & {\n  Item: React.StatelessComponent<IStackItemProps>;\n} = createComponent(StackView, {\n  displayName: 'Stack',\n  styles,\n  statics: StackStatics\n});\n\nexport default Stack;\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}