{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar Icon_1 = require(\"../../Icon\");\n\nvar FocusZone_1 = require(\"../../FocusZone\");\n\nvar Rating_types_1 = require(\"./Rating.types\");\n\nvar getClassNames = Utilities_1.classNamesFunction();\n\nvar RatingStar = function (props) {\n  var icon = props.icon || 'FavoriteStarFill';\n  return React.createElement(\"div\", {\n    className: props.classNames.ratingStar,\n    key: props.id\n  }, React.createElement(Icon_1.Icon, {\n    className: props.classNames.ratingStarBack,\n    iconName: icon\n  }), !props.disabled && React.createElement(Icon_1.Icon, {\n    className: props.classNames.ratingStarFront,\n    iconName: icon,\n    style: {\n      width: props.fillPercentage + '%'\n    }\n  }));\n};\n\nvar RatingBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(RatingBase, _super);\n\n  function RatingBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    Utilities_1.initializeComponentRef(_this);\n    Utilities_1.warnDeprecations('Rating', props, {\n      onChanged: 'onChange'\n    });\n    _this._id = Utilities_1.getId('Rating');\n    _this._min = _this.props.allowZeroStars ? 0 : 1;\n\n    if (_this.props.min !== undefined && _this.props.min !== 1) {\n      _this._min = _this.props.min;\n    }\n\n    _this._labelId = Utilities_1.getId('RatingLabel');\n    _this.state = {\n      rating: _this._getInitialValue(props)\n    };\n    return _this;\n  }\n\n  RatingBase.prototype.render = function () {\n    var _a, _b, _c;\n\n    var _d = this.props,\n        disabled = _d.disabled,\n        getAriaLabel = _d.getAriaLabel,\n        styles = _d.styles,\n        max = _d.max,\n        readOnly = _d.readOnly,\n        size = _d.size,\n        theme = _d.theme,\n        _e = _d.icon,\n        icon = _e === void 0 ? 'FavoriteStarFill' : _e,\n        _f = _d.unselectedIcon,\n        unselectedIcon = _f === void 0 ? 'FavoriteStar' : _f;\n    var id = this._id;\n    var stars = [];\n    var starIds = [];\n\n    var rating = this._getRating();\n\n    var divProps = Utilities_1.getNativeProps(this.props, Utilities_1.divProperties);\n    this._classNames = getClassNames(styles, {\n      disabled: disabled,\n      readOnly: readOnly,\n      theme: theme\n    });\n\n    for (var i = this._min; i <= max; i++) {\n      if (i !== 0) {\n        var fillPercentage = this._getFillingPercentage(i);\n\n        var ratingStarProps = {\n          fillPercentage: fillPercentage,\n          disabled: disabled,\n          classNames: this._classNames,\n          icon: fillPercentage > 0 ? icon : unselectedIcon\n        };\n        starIds.push(this._getStarId(i - 1));\n        stars.push(React.createElement(\"button\", tslib_1.__assign({\n          className: Utilities_1.css(this._classNames.ratingButton, (_a = {}, _a[this._classNames.ratingStarIsLarge] = size === Rating_types_1.RatingSize.Large, _a[this._classNames.ratingStarIsSmall] = size !== Rating_types_1.RatingSize.Large, _a)),\n          id: starIds[i - 1],\n          key: i\n        }, i === Math.ceil(rating) ? {\n          'data-is-current': true\n        } : {}, {\n          onFocus: this._onFocus.bind(this, i),\n          onClick: this._onFocus.bind(this, i),\n          disabled: disabled || readOnly ? true : false,\n          role: \"presentation\",\n          type: \"button\"\n        }), this._getLabel(rating % 1 ? rating : i), React.createElement(RatingStar, tslib_1.__assign({\n          key: i + 'rating'\n        }, ratingStarProps))));\n      }\n    }\n\n    var ariaLabel = getAriaLabel ? getAriaLabel(rating ? rating : 0, max) : '';\n    return React.createElement(\"div\", tslib_1.__assign({\n      className: Utilities_1.css('ms-Rating-star', this._classNames.root, (_b = {}, _b[this._classNames.rootIsLarge] = size === Rating_types_1.RatingSize.Large, _b[this._classNames.rootIsSmall] = size !== Rating_types_1.RatingSize.Large, _b)),\n      \"aria-label\": !readOnly ? ariaLabel : '',\n      id: id\n    }, divProps), React.createElement(FocusZone_1.FocusZone, {\n      direction: FocusZone_1.FocusZoneDirection.horizontal,\n      tabIndex: readOnly ? 0 : -1,\n      className: Utilities_1.css(this._classNames.ratingFocusZone, (_c = {}, _c[this._classNames.rootIsLarge] = size === Rating_types_1.RatingSize.Large, _c[this._classNames.rootIsSmall] = size !== Rating_types_1.RatingSize.Large, _c)),\n      \"data-is-focusable\": readOnly ? true : false,\n      defaultActiveElement: rating ? starIds[Math.ceil(rating) - 1] && '#' + starIds[Math.ceil(rating) - 1] : undefined,\n      \"aria-label\": readOnly ? ariaLabel : ''\n    }, stars));\n  };\n\n  RatingBase.prototype._getStarId = function (index) {\n    return this._id + '-star-' + index;\n  };\n\n  RatingBase.prototype._onFocus = function (value, ev) {\n    if (Math.ceil(this.state.rating) !== value) {\n      this.setState({\n        rating: value\n      });\n      var _a = this.props,\n          onChange = _a.onChange,\n          onChanged = _a.onChanged;\n\n      if (onChange) {\n        onChange(ev, value);\n      }\n\n      if (onChanged) {\n        onChanged(value);\n      }\n    }\n  };\n\n  RatingBase.prototype._getLabel = function (rating) {\n    var text = this.props.ariaLabelFormat || '';\n    return React.createElement(\"span\", {\n      id: this._labelId + \"-\" + rating,\n      className: this._classNames.labelText\n    }, Utilities_1.format(text, rating, this.props.max));\n  };\n\n  RatingBase.prototype._getInitialValue = function (props) {\n    if (typeof props.rating === 'undefined') {\n      return this._min;\n    }\n\n    if (props.rating === null) {\n      return undefined;\n    }\n\n    return this._getClampedRating(props.rating);\n  };\n\n  RatingBase.prototype._getClampedRating = function (rating) {\n    return Math.min(Math.max(rating, this._min), this.props.max);\n  };\n\n  RatingBase.prototype._getRating = function () {\n    if (this.props.rating !== undefined) {\n      return this._getClampedRating(this.props.rating);\n    }\n\n    if (this.state.rating !== undefined && this.state.rating !== null) {\n      return this._getClampedRating(this.state.rating);\n    }\n\n    return 0;\n  };\n\n  RatingBase.prototype._getFillingPercentage = function (starPosition) {\n    var rating = this._getRating();\n\n    var ceilValue = Math.ceil(rating);\n    var fillPercentage = 100;\n\n    if (starPosition === rating) {\n      fillPercentage = 100;\n    } else if (starPosition === ceilValue) {\n      fillPercentage = 100 * (rating % 1);\n    } else if (starPosition > ceilValue) {\n      fillPercentage = 0;\n    }\n\n    return fillPercentage;\n  };\n\n  RatingBase.defaultProps = {\n    min: 1,\n    max: 5\n  };\n  return RatingBase;\n}(React.Component);\n\nexports.RatingBase = RatingBase;","map":{"version":3,"sources":["components/Rating/Rating.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  warnDeprecations,\n  initializeComponentRef,\n  classNamesFunction,\n  css,\n  format,\n  getId,\n  divProperties,\n  getNativeProps\n} from '../../Utilities';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { Icon } from '../../Icon';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { IRatingProps, RatingSize, IRatingStyleProps, IRatingStyles } from './Rating.types';\n\nconst getClassNames = classNamesFunction<IRatingStyleProps, IRatingStyles>();\n\ninterface IRatingStarProps extends React.AllHTMLAttributes<HTMLElement> {\n  fillPercentage: number;\n  disabled?: boolean;\n  readOnly?: boolean;\n  classNames: IProcessedStyleSet<IRatingStyles>;\n  icon?: string;\n}\n\nexport interface IRatingState {\n  rating: number | null | undefined;\n}\n\nconst RatingStar = (props: IRatingStarProps) => {\n  const icon = props.icon || 'FavoriteStarFill';\n  return (\n    <div className={props.classNames.ratingStar} key={props.id}>\n      <Icon className={props.classNames.ratingStarBack} iconName={icon} />\n      {!props.disabled && (\n        <Icon className={props.classNames.ratingStarFront} iconName={icon} style={{ width: props.fillPercentage + '%' }} />\n      )}\n    </div>\n  );\n};\n\nexport class RatingBase extends React.Component<IRatingProps, IRatingState> {\n  public static defaultProps: IRatingProps = {\n    min: 1,\n    max: 5\n  };\n  private _id: string;\n  private _min: number;\n  private _labelId: string;\n  private _classNames: IProcessedStyleSet<IRatingStyles>;\n\n  constructor(props: IRatingProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    warnDeprecations('Rating', props, { onChanged: 'onChange' });\n\n    this._id = getId('Rating');\n    this._min = this.props.allowZeroStars ? 0 : 1;\n    if (this.props.min !== undefined && this.props.min !== 1) {\n      this._min = this.props.min;\n    }\n    this._labelId = getId('RatingLabel');\n\n    this.state = {\n      rating: this._getInitialValue(props)\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      disabled,\n      getAriaLabel,\n      styles,\n      max,\n      readOnly,\n      size,\n      theme,\n      icon = 'FavoriteStarFill',\n      unselectedIcon = 'FavoriteStar'\n    } = this.props;\n\n    const id = this._id;\n    const stars = [];\n    const starIds = [];\n    const rating = this._getRating();\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    this._classNames = getClassNames(styles!, {\n      disabled,\n      readOnly,\n      theme: theme!\n    });\n\n    for (let i = this._min as number; i <= (max as number); i++) {\n      if (i !== 0) {\n        const fillPercentage = this._getFillingPercentage(i);\n        const ratingStarProps: IRatingStarProps = {\n          fillPercentage,\n          disabled,\n          classNames: this._classNames,\n          icon: fillPercentage > 0 ? icon : unselectedIcon\n        };\n\n        starIds.push(this._getStarId(i - 1));\n\n        stars.push(\n          <button\n            className={css(this._classNames.ratingButton, {\n              [this._classNames.ratingStarIsLarge]: size === RatingSize.Large,\n              [this._classNames.ratingStarIsSmall]: size !== RatingSize.Large\n            })}\n            id={starIds[i - 1]}\n            key={i}\n            {...(i === Math.ceil(rating) ? { 'data-is-current': true } : {})}\n            onFocus={this._onFocus.bind(this, i)}\n            onClick={this._onFocus.bind(this, i)} // For Safari & Firefox on OSX\n            disabled={disabled || readOnly ? true : false}\n            role=\"presentation\"\n            type=\"button\"\n          >\n            {this._getLabel((rating as number) % 1 ? rating : i)}\n            <RatingStar key={i + 'rating'} {...ratingStarProps} />\n          </button>\n        );\n      }\n    }\n\n    const ariaLabel = getAriaLabel ? getAriaLabel(rating ? rating : 0, max as number) : '';\n\n    return (\n      <div\n        className={css('ms-Rating-star', this._classNames.root, {\n          [this._classNames.rootIsLarge]: size === RatingSize.Large,\n          [this._classNames.rootIsSmall]: size !== RatingSize.Large\n        })}\n        aria-label={!readOnly ? ariaLabel : ''}\n        id={id}\n        {...divProps}\n      >\n        <FocusZone\n          direction={FocusZoneDirection.horizontal}\n          tabIndex={readOnly ? 0 : -1}\n          className={css(this._classNames.ratingFocusZone, {\n            [this._classNames.rootIsLarge]: size === RatingSize.Large,\n            [this._classNames.rootIsSmall]: size !== RatingSize.Large\n          })}\n          data-is-focusable={readOnly ? true : false}\n          defaultActiveElement={rating ? starIds[Math.ceil(rating) - 1] && '#' + starIds[Math.ceil(rating) - 1] : undefined}\n          aria-label={readOnly ? ariaLabel : ''}\n        >\n          {stars}\n        </FocusZone>\n      </div>\n    );\n  }\n\n  private _getStarId(index: number): string {\n    return this._id + '-star-' + index;\n  }\n\n  private _onFocus(value: number, ev: React.FocusEvent<HTMLElement>): void {\n    if (Math.ceil(this.state.rating!) !== value) {\n      this.setState({\n        rating: value\n      } as IRatingState);\n\n      const { onChange, onChanged } = this.props;\n\n      if (onChange) {\n        onChange(ev, value);\n      }\n\n      if (onChanged) {\n        onChanged(value);\n      }\n    }\n  }\n\n  private _getLabel(rating: number): JSX.Element {\n    const text = this.props.ariaLabelFormat || '';\n\n    return (\n      <span id={`${this._labelId}-${rating}`} className={this._classNames.labelText}>\n        {format(text, rating, this.props.max)}\n      </span>\n    );\n  }\n\n  private _getInitialValue(props: IRatingProps): number | undefined {\n    if (typeof props.rating === 'undefined') {\n      return this._min;\n    }\n\n    if (props.rating === null) {\n      return undefined;\n    }\n\n    return this._getClampedRating(props.rating);\n  }\n\n  private _getClampedRating(rating: number): number {\n    return Math.min(Math.max(rating, this._min as number), this.props.max as number);\n  }\n\n  private _getRating(): number {\n    if (this.props.rating !== undefined) {\n      return this._getClampedRating(this.props.rating);\n    }\n    if (this.state.rating !== undefined && this.state.rating !== null) {\n      return this._getClampedRating(this.state.rating);\n    }\n    return 0;\n  }\n\n  private _getFillingPercentage(starPosition: number): number {\n    const rating = this._getRating();\n    const ceilValue = Math.ceil(rating as number);\n    let fillPercentage = 100;\n\n    if (starPosition === rating) {\n      fillPercentage = 100;\n    } else if (starPosition === ceilValue) {\n      fillPercentage = 100 * ((rating as number) % 1);\n    } else if (starPosition > ceilValue) {\n      fillPercentage = 0;\n    }\n    return fillPercentage;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}