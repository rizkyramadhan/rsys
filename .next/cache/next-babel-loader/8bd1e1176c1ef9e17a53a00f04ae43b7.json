{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar Spinner_types_1 = require(\"./Spinner.types\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar getClassNames = Utilities_1.classNamesFunction();\n\nvar SpinnerBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(SpinnerBase, _super);\n\n  function SpinnerBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SpinnerBase.prototype.render = function () {\n    var _a = this.props,\n        type = _a.type,\n        size = _a.size,\n        ariaLabel = _a.ariaLabel,\n        ariaLive = _a.ariaLive,\n        styles = _a.styles,\n        label = _a.label,\n        theme = _a.theme,\n        className = _a.className,\n        labelPosition = _a.labelPosition;\n    var statusMessage = ariaLabel;\n    var nativeProps = Utilities_1.getNativeProps(this.props, Utilities_1.divProperties, ['size']); // SpinnerType is deprecated. If someone is still using this property, rather than putting the SpinnerType into the ISpinnerStyleProps,\n    // we'll map SpinnerType to its equivalent SpinnerSize and pass that in. Once SpinnerType finally goes away we should delete this.\n\n    var styleSize = size;\n\n    if (styleSize === undefined && type !== undefined) {\n      styleSize = type === Spinner_types_1.SpinnerType.large ? Spinner_types_1.SpinnerSize.large : Spinner_types_1.SpinnerSize.medium;\n    }\n\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      size: styleSize,\n      className: className,\n      labelPosition: labelPosition\n    });\n    return React.createElement(\"div\", tslib_1.__assign({}, nativeProps, {\n      className: classNames.root\n    }), React.createElement(\"div\", {\n      className: classNames.circle\n    }), label && React.createElement(\"div\", {\n      className: classNames.label\n    }, label), statusMessage && React.createElement(\"div\", {\n      role: \"status\",\n      \"aria-live\": ariaLive\n    }, React.createElement(Utilities_1.DelayedRender, null, React.createElement(\"div\", {\n      className: classNames.screenReaderText\n    }, statusMessage))));\n  };\n\n  SpinnerBase.defaultProps = {\n    size: Spinner_types_1.SpinnerSize.medium,\n    ariaLive: 'polite',\n    labelPosition: 'bottom'\n  };\n  return SpinnerBase;\n}(Utilities_1.BaseComponent);\n\nexports.SpinnerBase = SpinnerBase;","map":{"version":3,"sources":["components/Spinner/Spinner.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ISpinnerProps, ISpinnerStyleProps, ISpinnerStyles, SpinnerType, SpinnerSize } from './Spinner.types';\nimport { BaseComponent, classNamesFunction, DelayedRender, getNativeProps, divProperties } from '../../Utilities';\n\nconst getClassNames = classNamesFunction<ISpinnerStyleProps, ISpinnerStyles>();\n\nexport class SpinnerBase extends BaseComponent<ISpinnerProps, any> {\n  public static defaultProps: ISpinnerProps = {\n    size: SpinnerSize.medium,\n    ariaLive: 'polite',\n    labelPosition: 'bottom'\n  };\n\n  public render() {\n    const { type, size, ariaLabel, ariaLive, styles, label, theme, className, labelPosition } = this.props;\n    const statusMessage = ariaLabel;\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties, ['size']);\n\n    // SpinnerType is deprecated. If someone is still using this property, rather than putting the SpinnerType into the ISpinnerStyleProps,\n    // we'll map SpinnerType to its equivalent SpinnerSize and pass that in. Once SpinnerType finally goes away we should delete this.\n    let styleSize = size;\n    if (styleSize === undefined && type !== undefined) {\n      styleSize = type === SpinnerType.large ? SpinnerSize.large : SpinnerSize.medium;\n    }\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      size: styleSize,\n      className,\n      labelPosition\n    });\n\n    return (\n      <div {...nativeProps} className={classNames.root}>\n        <div className={classNames.circle} />\n        {label && <div className={classNames.label}>{label}</div>}\n        {statusMessage && (\n          <div role=\"status\" aria-live={ariaLive}>\n            <DelayedRender>\n              <div className={classNames.screenReaderText}>{statusMessage}</div>\n            </DelayedRender>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}