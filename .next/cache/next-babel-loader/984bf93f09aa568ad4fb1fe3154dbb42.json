{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar Button_types_1 = require(\"./Button.types\");\n\nvar DefaultButton_1 = require(\"./DefaultButton/DefaultButton\");\n\nvar ActionButton_1 = require(\"./ActionButton/ActionButton\");\n\nvar CompoundButton_1 = require(\"./CompoundButton/CompoundButton\");\n\nvar IconButton_1 = require(\"./IconButton/IconButton\");\n\nvar PrimaryButton_1 = require(\"./PrimaryButton/PrimaryButton\");\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\n\n\nvar Button =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Button, _super);\n\n  function Button(props) {\n    var _this = _super.call(this, props) || this;\n    /**\n     * Set this BaseComponent._skipComponentRefResolution to true, bypassing resolution of componentRef.\n     */\n\n\n    _this._skipComponentRefResolution = true;\n    Utilities_1.warn(\"The Button component has been deprecated. Use specific variants instead. \" + \"(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)\");\n    return _this;\n  }\n\n  Button.prototype.render = function () {\n    var props = this.props;\n\n    switch (props.buttonType) {\n      case Button_types_1.ButtonType.command:\n        return React.createElement(ActionButton_1.ActionButton, tslib_1.__assign({}, props));\n\n      case Button_types_1.ButtonType.compound:\n        return React.createElement(CompoundButton_1.CompoundButton, tslib_1.__assign({}, props));\n\n      case Button_types_1.ButtonType.icon:\n        return React.createElement(IconButton_1.IconButton, tslib_1.__assign({}, props));\n\n      case Button_types_1.ButtonType.primary:\n        return React.createElement(PrimaryButton_1.PrimaryButton, tslib_1.__assign({}, props));\n\n      default:\n        return React.createElement(DefaultButton_1.DefaultButton, tslib_1.__assign({}, props));\n    }\n  };\n\n  return Button;\n}(Utilities_1.BaseComponent);\n\nexports.Button = Button;","map":{"version":3,"sources":["components/Button/Button.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;AACA;;;;;;;AAKA,IAAA,MAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4B,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,EAAA,MAAA;;AAM1B,WAAA,MAAA,CAAY,KAAZ,EAA+B;AAA/B,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;AALA;;;;;AAGU,IAAA,KAAA,CAAA,2BAAA,GAA8B,IAA9B;AAKR,IAAA,WAAA,CAAA,IAAA,CACE,8EACE,gEAFJ;;AAID;;AAEM,EAAA,MAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,QAAM,KAAK,GAAG,KAAK,KAAnB;;AAEA,YAAQ,KAAK,CAAC,UAAd;AACE,WAAK,cAAA,CAAA,UAAA,CAAW,OAAhB;AACE,eAAO,KAAA,CAAA,aAAA,CAAC,cAAA,CAAA,YAAD,EAAa,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,KAAL,CAAb,CAAP;;AAEF,WAAK,cAAA,CAAA,UAAA,CAAW,QAAhB;AACE,eAAO,KAAA,CAAA,aAAA,CAAC,gBAAA,CAAA,cAAD,EAAe,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,KAAL,CAAf,CAAP;;AAEF,WAAK,cAAA,CAAA,UAAA,CAAW,IAAhB;AACE,eAAO,KAAA,CAAA,aAAA,CAAC,YAAA,CAAA,UAAD,EAAW,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,KAAL,CAAX,CAAP;;AAEF,WAAK,cAAA,CAAA,UAAA,CAAW,OAAhB;AACE,eAAO,KAAA,CAAA,aAAA,CAAC,eAAA,CAAA,aAAD,EAAc,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,KAAL,CAAd,CAAP;;AAEF;AACE,eAAO,KAAA,CAAA,aAAA,CAAC,eAAA,CAAA,aAAD,EAAc,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,KAAL,CAAd,CAAP;AAdJ;AAgBD,GAnBM;;AAoBT,SAAA,MAAA;AAAC,CAnCD,CAA4B,WAAA,CAAA,aAA5B,CAAA;;AAAa,OAAA,CAAA,MAAA,GAAA,MAAA","sourcesContent":["import * as React from 'react';\n\nimport { BaseComponent, warn } from '../../Utilities';\nimport { ButtonType, IButtonProps } from './Button.types';\nimport { DefaultButton } from './DefaultButton/DefaultButton';\nimport { ActionButton } from './ActionButton/ActionButton';\nimport { CompoundButton } from './CompoundButton/CompoundButton';\nimport { IconButton } from './IconButton/IconButton';\nimport { PrimaryButton } from './PrimaryButton/PrimaryButton';\n/**\n * This class is deprecated. Use the individual *Button components instead.\n * @deprecated Use the individual *Button components instead.\n * {@docCategory Button}\n */\nexport class Button extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Set this BaseComponent._skipComponentRefResolution to true, bypassing resolution of componentRef.\n   */\n  protected _skipComponentRefResolution = true;\n\n  constructor(props: IButtonProps) {\n    super(props);\n\n    warn(\n      `The Button component has been deprecated. Use specific variants instead. ` +\n        `(PrimaryButton, DefaultButton, IconButton, ActionButton, etc.)`\n    );\n  }\n\n  public render(): JSX.Element {\n    const props = this.props;\n\n    switch (props.buttonType) {\n      case ButtonType.command:\n        return <ActionButton {...props} />;\n\n      case ButtonType.compound:\n        return <CompoundButton {...props} />;\n\n      case ButtonType.icon:\n        return <IconButton {...props} />;\n\n      case ButtonType.primary:\n        return <PrimaryButton {...props} />;\n\n      default:\n        return <DefaultButton {...props} />;\n    }\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}