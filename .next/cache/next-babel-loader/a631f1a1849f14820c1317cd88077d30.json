{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar index_1 = require(\"../../utilities/contextualMenu/index\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar Icon_1 = require(\"../../Icon\");\n\nvar renderItemIcon = function (props) {\n  var item = props.item,\n      hasIcons = props.hasIcons,\n      classNames = props.classNames;\n  var iconProps = item.iconProps;\n\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props);\n  }\n\n  return React.createElement(Icon_1.Icon, tslib_1.__assign({}, iconProps, {\n    className: classNames.icon\n  }));\n};\n\nvar renderCheckMarkIcon = function (_a) {\n  var onCheckmarkClick = _a.onCheckmarkClick,\n      item = _a.item,\n      classNames = _a.classNames;\n  var isItemChecked = index_1.getIsChecked(item);\n\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    var onClick = function (e) {\n      return onCheckmarkClick(item, e);\n    };\n\n    return React.createElement(Icon_1.Icon, {\n      iconName: isItemChecked ? 'CheckMark' : '',\n      className: classNames.checkmarkIcon,\n      onClick: onClick\n    });\n  }\n\n  return null;\n};\n\nvar renderItemName = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames;\n\n  if (item.text || item.name) {\n    return React.createElement(\"span\", {\n      className: classNames.label\n    }, item.text || item.name);\n  }\n\n  return null;\n};\n\nvar renderSecondaryText = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames;\n\n  if (item.secondaryText) {\n    return React.createElement(\"span\", {\n      className: classNames.secondaryText\n    }, item.secondaryText);\n  }\n\n  return null;\n};\n\nvar renderSubMenuIcon = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames;\n\n  if (index_1.hasSubmenu(item)) {\n    return React.createElement(Icon_1.Icon, tslib_1.__assign({\n      iconName: Utilities_1.getRTL() ? 'ChevronLeft' : 'ChevronRight'\n    }, item.submenuIconProps, {\n      className: classNames.subMenuIcon\n    }));\n  }\n\n  return null;\n};\n\nvar ContextualMenuItemBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ContextualMenuItemBase, _super);\n\n  function ContextualMenuItemBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.openSubMenu = function () {\n      var _a = _this.props,\n          item = _a.item,\n          openSubMenu = _a.openSubMenu,\n          getSubmenuTarget = _a.getSubmenuTarget;\n\n      if (getSubmenuTarget) {\n        var submenuTarget = getSubmenuTarget();\n\n        if (index_1.hasSubmenu(item) && openSubMenu && submenuTarget) {\n          openSubMenu(item, submenuTarget);\n        }\n      }\n    };\n\n    _this.dismissSubMenu = function () {\n      var _a = _this.props,\n          item = _a.item,\n          dismissSubMenu = _a.dismissSubMenu;\n\n      if (index_1.hasSubmenu(item) && dismissSubMenu) {\n        dismissSubMenu();\n      }\n    };\n\n    _this.dismissMenu = function (dismissAll) {\n      var dismissMenu = _this.props.dismissMenu;\n\n      if (dismissMenu) {\n        dismissMenu(undefined\n        /* ev */\n        , dismissAll);\n      }\n    };\n\n    return _this;\n  }\n\n  ContextualMenuItemBase.prototype.render = function () {\n    var _a = this.props,\n        item = _a.item,\n        classNames = _a.classNames;\n    return React.createElement(\"div\", {\n      className: item.split ? classNames.linkContentMenu : classNames.linkContent\n    }, renderCheckMarkIcon(this.props), renderItemIcon(this.props), renderItemName(this.props), renderSecondaryText(this.props), renderSubMenuIcon(this.props));\n  };\n\n  return ContextualMenuItemBase;\n}(Utilities_1.BaseComponent);\n\nexports.ContextualMenuItemBase = ContextualMenuItemBase;","map":{"version":3,"sources":["components/ContextualMenu/ContextualMenuItem.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { BaseComponent, getRTL } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { IContextualMenuItemProps } from './ContextualMenuItem.types';\n\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\n  const { item, hasIcons, classNames } = props;\n\n  const { iconProps } = item;\n\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props);\n  }\n\n  return <Icon {...iconProps} className={classNames.icon} />;\n};\n\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\n  const isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\n\n    return <Icon iconName={isItemChecked ? 'CheckMark' : ''} className={classNames.checkmarkIcon} onClick={onClick} />;\n  }\n  return null;\n};\n\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.text || item.name) {\n    return <span className={classNames.label}>{item.text || item.name}</span>;\n  }\n  return null;\n};\n\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.secondaryText) {\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\n  }\n  return null;\n};\n\nconst renderSubMenuIcon = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (hasSubmenu(item)) {\n    return <Icon iconName={getRTL() ? 'ChevronLeft' : 'ChevronRight'} {...item.submenuIconProps} className={classNames.subMenuIcon} />;\n  }\n  return null;\n};\n\nexport class ContextualMenuItemBase extends BaseComponent<IContextualMenuItemProps, {}> {\n  public render() {\n    const { item, classNames } = this.props;\n\n    return (\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\n        {renderCheckMarkIcon(this.props)}\n        {renderItemIcon(this.props)}\n        {renderItemName(this.props)}\n        {renderSecondaryText(this.props)}\n        {renderSubMenuIcon(this.props)}\n      </div>\n    );\n  }\n\n  public openSubMenu = (): void => {\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\n    if (getSubmenuTarget) {\n      const submenuTarget = getSubmenuTarget();\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n        openSubMenu(item, submenuTarget);\n      }\n    }\n  };\n\n  public dismissSubMenu = (): void => {\n    const { item, dismissSubMenu } = this.props;\n    if (hasSubmenu(item) && dismissSubMenu) {\n      dismissSubMenu();\n    }\n  };\n\n  public dismissMenu = (dismissAll?: boolean): void => {\n    const { dismissMenu } = this.props;\n    if (dismissMenu) {\n      dismissMenu(undefined /* ev */, dismissAll);\n    }\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}