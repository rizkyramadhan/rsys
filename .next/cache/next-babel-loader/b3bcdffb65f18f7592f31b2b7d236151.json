{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar Icon_1 = require(\"../../Icon\");\n\nvar Image_1 = require(\"../../Image\");\n\nvar Link_1 = require(\"../../Link\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar LIST_ITEM_COUNT = 3;\nvar getClassNames = Utilities_1.classNamesFunction();\n/**\n * {@docCategory DocumentCard}\n */\n\nvar DocumentCardPreviewBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(DocumentCardPreviewBase, _super);\n\n  function DocumentCardPreviewBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._renderPreviewList = function (previewImages) {\n      var getOverflowDocumentCountText = _this.props.getOverflowDocumentCountText; // Determine how many documents we won't be showing\n\n      var overflowDocumentCount = previewImages.length - LIST_ITEM_COUNT; // Determine the overflow text that will be rendered after the preview list.\n\n      var overflowText = overflowDocumentCount ? getOverflowDocumentCountText ? getOverflowDocumentCountText(overflowDocumentCount) : '+' + overflowDocumentCount : null; // Create list items for the documents to be shown\n\n      var fileListItems = previewImages.slice(0, LIST_ITEM_COUNT).map(function (file, fileIndex) {\n        return React.createElement(\"li\", {\n          key: fileIndex\n        }, React.createElement(Image_1.Image, {\n          className: _this._classNames.fileListIcon,\n          src: file.iconSrc,\n          role: \"presentation\",\n          alt: \"\",\n          width: \"16px\",\n          height: \"16px\"\n        }), React.createElement(Link_1.Link, tslib_1.__assign({}, (file.linkProps, {\n          href: file.url || file.linkProps && file.linkProps.href\n        })), file.name));\n      });\n      return React.createElement(\"div\", null, React.createElement(\"ul\", {\n        className: _this._classNames.fileList\n      }, fileListItems), overflowText && React.createElement(\"span\", {\n        className: _this._classNames.fileListOverflowText\n      }, overflowText));\n    };\n\n    return _this;\n  }\n\n  DocumentCardPreviewBase.prototype.render = function () {\n    var _a = this.props,\n        previewImages = _a.previewImages,\n        styles = _a.styles,\n        theme = _a.theme,\n        className = _a.className;\n    var style, preview;\n    var isFileList = previewImages.length > 1;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      isFileList: isFileList\n    });\n\n    if (previewImages.length > 1) {\n      // Render a list of files\n      preview = this._renderPreviewList(previewImages);\n    } else if (previewImages.length === 1) {\n      // Render a single preview\n      preview = this._renderPreviewImage(previewImages[0]); // Override the border color if an accent color was provided\n\n      if (previewImages[0].accentColor) {\n        style = {\n          borderBottomColor: previewImages[0].accentColor\n        };\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: this._classNames.root,\n      style: style\n    }, preview);\n  };\n\n  DocumentCardPreviewBase.prototype._renderPreviewImage = function (previewImage) {\n    var width = previewImage.width,\n        height = previewImage.height,\n        imageFit = previewImage.imageFit,\n        previewIconProps = previewImage.previewIconProps,\n        previewIconContainerClass = previewImage.previewIconContainerClass;\n\n    if (previewIconProps) {\n      return React.createElement(\"div\", {\n        className: Utilities_1.css(this._classNames.previewIcon, previewIconContainerClass),\n        style: {\n          width: width,\n          height: height\n        }\n      }, React.createElement(Icon_1.Icon, tslib_1.__assign({}, previewIconProps)));\n    }\n\n    var image = React.createElement(Image_1.Image, {\n      width: width,\n      height: height,\n      imageFit: imageFit,\n      src: previewImage.previewImageSrc,\n      role: \"presentation\",\n      alt: \"\"\n    });\n    var icon;\n\n    if (previewImage.iconSrc) {\n      icon = React.createElement(Image_1.Image, {\n        className: this._classNames.icon,\n        src: previewImage.iconSrc,\n        role: \"presentation\",\n        alt: \"\"\n      });\n    }\n\n    return React.createElement(\"div\", null, image, icon);\n  };\n\n  return DocumentCardPreviewBase;\n}(Utilities_1.BaseComponent);\n\nexports.DocumentCardPreviewBase = DocumentCardPreviewBase;","map":{"version":3,"sources":["components/DocumentCard/DocumentCardPreview.base.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAQA,IAAM,eAAe,GAAG,CAAxB;AACA,IAAM,aAAa,GAAG,WAAA,CAAA,kBAAA,EAAtB;AAEA;;;;AAGA,IAAA,uBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,OAAA,CAAA,SAAA,CAAA,uBAAA,EAAA,MAAA;;AAA7C,WAAA,uBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AA8DU,IAAA,KAAA,CAAA,kBAAA,GAAqB,UAAC,aAAD,EAA2C;AAC9D,UAAA,4BAAA,GAAA,KAAA,CAAA,KAAA,CAAA,4BAAA,CAD8D,CAGtE;;AACA,UAAM,qBAAqB,GAAG,aAAa,CAAC,MAAd,GAAuB,eAArD,CAJsE,CAMtE;;AACA,UAAM,YAAY,GAAG,qBAAqB,GACtC,4BAA4B,GAC1B,4BAA4B,CAAC,qBAAD,CADF,GAE1B,MAAM,qBAH8B,GAItC,IAJJ,CAPsE,CAatE;;AACA,UAAM,aAAa,GAAG,aAAa,CAAC,KAAd,CAAoB,CAApB,EAAuB,eAAvB,EAAwC,GAAxC,CAA4C,UAAC,IAAD,EAAO,SAAP,EAAgB;AAAK,eACrF,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,UAAA,GAAG,EAAE;AAAT,SAAA,EACE,KAAA,CAAA,aAAA,CAAC,OAAA,CAAA,KAAD,EAAM;AAAC,UAAA,SAAS,EAAE,KAAI,CAAC,WAAL,CAAiB,YAA7B;AAA2C,UAAA,GAAG,EAAE,IAAI,CAAC,OAArD;AAA8D,UAAA,IAAI,EAAC,cAAnE;AAAkF,UAAA,GAAG,EAAC,EAAtF;AAAyF,UAAA,KAAK,EAAC,MAA/F;AAAsG,UAAA,MAAM,EAAC;AAA7G,SAAN,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,MAAA,CAAA,IAAD,EAAK,OAAA,CAAA,QAAA,CAAA,EAAA,GAAM,IAAI,CAAC,SAAL,EAAgB;AAAE,UAAA,IAAI,EAAE,IAAI,CAAC,GAAL,IAAa,IAAI,CAAC,SAAL,IAAkB,IAAI,CAAC,SAAL,CAAe;AAAtD,SAAtB,EAAL,EAA4F,IAAI,CAHb,IAGnF,CAFF,CADqF;AAKtF,OALqB,CAAtB;AAOA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,QAAA,SAAS,EAAE,KAAI,CAAC,WAAL,CAAiB;AAAhC,OAAA,EAA2C,aAA3C,CADF,EAEG,YAAY,IAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAE,KAAI,CAAC,WAAL,CAAiB;AAAlC,OAAA,EAAyD,YAAzD,CAFnB,CADF;AAMD,KA3BO;;;AA4BT;;AAvFQ,EAAA,uBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,aAAA,GAAA,EAAA,CAAA,aAAF;AAAA,QAAiB,MAAA,GAAA,EAAA,CAAA,MAAjB;AAAA,QAAyB,KAAA,GAAA,EAAA,CAAA,KAAzB;AAAA,QAAgC,SAAA,GAAA,EAAA,CAAA,SAAhC;AACN,QAAI,KAAJ,EAAW,OAAX;AACA,QAAM,UAAU,GAAG,aAAa,CAAC,MAAd,GAAuB,CAA1C;AAEA,SAAK,WAAL,GAAmB,aAAa,CAAC,MAAD,EAAU;AACxC,MAAA,KAAK,EAAE,KADiC;AAExC,MAAA,SAAS,EAAA,SAF+B;AAGxC,MAAA,UAAU,EAAA;AAH8B,KAAV,CAAhC;;AAMA,QAAI,aAAa,CAAC,MAAd,GAAuB,CAA3B,EAA8B;AAC5B;AACA,MAAA,OAAO,GAAG,KAAK,kBAAL,CAAwB,aAAxB,CAAV;AACD,KAHD,MAGO,IAAI,aAAa,CAAC,MAAd,KAAyB,CAA7B,EAAgC;AACrC;AACA,MAAA,OAAO,GAAG,KAAK,mBAAL,CAAyB,aAAa,CAAC,CAAD,CAAtC,CAAV,CAFqC,CAIrC;;AACA,UAAI,aAAa,CAAC,CAAD,CAAb,CAAiB,WAArB,EAAkC;AAChC,QAAA,KAAK,GAAG;AACN,UAAA,iBAAiB,EAAE,aAAa,CAAC,CAAD,CAAb,CAAiB;AAD9B,SAAR;AAGD;AACF;;AAED,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,KAAK,WAAL,CAAiB,IAAjC;AAAuC,MAAA,KAAK,EAAE;AAA9C,KAAA,EACG,OADH,CADF;AAKD,GA/BM;;AAiCC,EAAA,uBAAA,CAAA,SAAA,CAAA,mBAAA,GAAR,UAA4B,YAA5B,EAAmE;AACzD,QAAA,KAAA,GAAA,YAAA,CAAA,KAAA;AAAA,QAAO,MAAA,GAAA,YAAA,CAAA,MAAP;AAAA,QAAe,QAAA,GAAA,YAAA,CAAA,QAAf;AAAA,QAAyB,gBAAA,GAAA,YAAA,CAAA,gBAAzB;AAAA,QAA2C,yBAAA,GAAA,YAAA,CAAA,yBAA3C;;AAER,QAAI,gBAAJ,EAAsB;AACpB,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE,WAAA,CAAA,GAAA,CAAI,KAAK,WAAL,CAAiB,WAArB,EAAkC,yBAAlC,CAAhB;AAA8E,QAAA,KAAK,EAAE;AAAE,UAAA,KAAK,EAAE,KAAT;AAAgB,UAAA,MAAM,EAAE;AAAxB;AAArF,OAAA,EACE,KAAA,CAAA,aAAA,CAAC,MAAA,CAAA,IAAD,EAAK,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,gBAAL,CAAL,CADF,CADF;AAKD;;AAED,QAAM,KAAK,GAAG,KAAA,CAAA,aAAA,CAAC,OAAA,CAAA,KAAD,EAAM;AAAC,MAAA,KAAK,EAAE,KAAR;AAAe,MAAA,MAAM,EAAE,MAAvB;AAA+B,MAAA,QAAQ,EAAE,QAAzC;AAAmD,MAAA,GAAG,EAAE,YAAY,CAAC,eAArE;AAAsF,MAAA,IAAI,EAAC,cAA3F;AAA0G,MAAA,GAAG,EAAC;AAA9G,KAAN,CAAd;AAEA,QAAI,IAAJ;;AACA,QAAI,YAAY,CAAC,OAAjB,EAA0B;AACxB,MAAA,IAAI,GAAG,KAAA,CAAA,aAAA,CAAC,OAAA,CAAA,KAAD,EAAM;AAAC,QAAA,SAAS,EAAE,KAAK,WAAL,CAAiB,IAA7B;AAAmC,QAAA,GAAG,EAAE,YAAY,CAAC,OAArD;AAA8D,QAAA,IAAI,EAAC,cAAnE;AAAkF,QAAA,GAAG,EAAC;AAAtF,OAAN,CAAP;AACD;;AAED,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACG,KADH,EAEG,IAFH,CADF;AAMD,GAxBO;;AAsDV,SAAA,uBAAA;AAAC,CA1FD,CAA6C,WAAA,CAAA,aAA7C,CAAA;;AAAa,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourcesContent":["import * as React from 'react';\nimport { Icon } from '../../Icon';\nimport { Image } from '../../Image';\nimport { Link } from '../../Link';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { BaseComponent, classNamesFunction, css } from '../../Utilities';\nimport {\n  IDocumentCardPreviewImage,\n  IDocumentCardPreviewProps,\n  IDocumentCardPreviewStyleProps,\n  IDocumentCardPreviewStyles\n} from './DocumentCardPreview.types';\n\nconst LIST_ITEM_COUNT = 3;\nconst getClassNames = classNamesFunction<IDocumentCardPreviewStyleProps, IDocumentCardPreviewStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardPreviewBase extends BaseComponent<IDocumentCardPreviewProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardPreviewStyles>;\n\n  public render(): JSX.Element {\n    const { previewImages, styles, theme, className } = this.props;\n    let style, preview;\n    const isFileList = previewImages.length > 1;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isFileList\n    });\n\n    if (previewImages.length > 1) {\n      // Render a list of files\n      preview = this._renderPreviewList(previewImages);\n    } else if (previewImages.length === 1) {\n      // Render a single preview\n      preview = this._renderPreviewImage(previewImages[0]);\n\n      // Override the border color if an accent color was provided\n      if (previewImages[0].accentColor) {\n        style = {\n          borderBottomColor: previewImages[0].accentColor\n        };\n      }\n    }\n\n    return (\n      <div className={this._classNames.root} style={style}>\n        {preview}\n      </div>\n    );\n  }\n\n  private _renderPreviewImage(previewImage: IDocumentCardPreviewImage): React.ReactElement<React.HTMLAttributes<HTMLDivElement>> {\n    const { width, height, imageFit, previewIconProps, previewIconContainerClass } = previewImage;\n\n    if (previewIconProps) {\n      return (\n        <div className={css(this._classNames.previewIcon, previewIconContainerClass)} style={{ width: width, height: height }}>\n          <Icon {...previewIconProps} />\n        </div>\n      );\n    }\n\n    const image = <Image width={width} height={height} imageFit={imageFit} src={previewImage.previewImageSrc} role=\"presentation\" alt=\"\" />;\n\n    let icon;\n    if (previewImage.iconSrc) {\n      icon = <Image className={this._classNames.icon} src={previewImage.iconSrc} role=\"presentation\" alt=\"\" />;\n    }\n\n    return (\n      <div>\n        {image}\n        {icon}\n      </div>\n    );\n  }\n\n  private _renderPreviewList = (previewImages: IDocumentCardPreviewImage[]): React.ReactElement<React.HTMLAttributes<HTMLDivElement>> => {\n    const { getOverflowDocumentCountText } = this.props;\n\n    // Determine how many documents we won't be showing\n    const overflowDocumentCount = previewImages.length - LIST_ITEM_COUNT;\n\n    // Determine the overflow text that will be rendered after the preview list.\n    const overflowText = overflowDocumentCount\n      ? getOverflowDocumentCountText\n        ? getOverflowDocumentCountText(overflowDocumentCount)\n        : '+' + overflowDocumentCount\n      : null;\n\n    // Create list items for the documents to be shown\n    const fileListItems = previewImages.slice(0, LIST_ITEM_COUNT).map((file, fileIndex) => (\n      <li key={fileIndex}>\n        <Image className={this._classNames.fileListIcon} src={file.iconSrc} role=\"presentation\" alt=\"\" width=\"16px\" height=\"16px\" />\n        <Link {...(file.linkProps, { href: file.url || (file.linkProps && file.linkProps.href) })}>{file.name}</Link>\n      </li>\n    ));\n\n    return (\n      <div>\n        <ul className={this._classNames.fileList}>{fileListItems}</ul>\n        {overflowText && <span className={this._classNames.fileListOverflowText}>{overflowText}</span>}\n      </div>\n    );\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}