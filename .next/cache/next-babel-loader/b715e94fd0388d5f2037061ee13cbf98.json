{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar BaseButton_1 = require(\"../BaseButton\");\n\nvar Utilities_1 = require(\"../../../Utilities\");\n\nvar ActionButton_styles_1 = require(\"./ActionButton.styles\");\n/**\n * {@docCategory Button}\n */\n\n\nvar ActionButton =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ActionButton, _super);\n\n  function ActionButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Tell BaseComponent to bypass resolution of componentRef.\n     */\n\n\n    _this._skipComponentRefResolution = true;\n    return _this;\n  }\n\n  ActionButton.prototype.render = function () {\n    var _a = this.props,\n        styles = _a.styles,\n        theme = _a.theme;\n    return React.createElement(BaseButton_1.BaseButton, tslib_1.__assign({}, this.props, {\n      variantClassName: \"ms-Button--action ms-Button--command\",\n      styles: ActionButton_styles_1.getStyles(theme, styles),\n      onRenderDescription: Utilities_1.nullRender\n    }));\n  };\n\n  ActionButton = tslib_1.__decorate([Utilities_1.customizable('ActionButton', ['theme', 'styles'], true)], ActionButton);\n  return ActionButton;\n}(Utilities_1.BaseComponent);\n\nexports.ActionButton = ActionButton;","map":{"version":3,"sources":["components/Button/ActionButton/ActionButton.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,qBAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;AAEA;;;;;AAIA,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,OAAA,CAAA,SAAA,CAAA,YAAA,EAAA,MAAA;;AADlC,WAAA,YAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAEE;;;;;AAGU,IAAA,KAAA,CAAA,2BAAA,GAA8B,IAA9B;;AAcX;;AAZQ,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,MAAA,GAAA,EAAA,CAAA,MAAF;AAAA,QAAU,KAAA,GAAA,EAAA,CAAA,KAAV;AAEN,WACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAA,UAAD,EAAW,OAAA,CAAA,QAAA,CAAA,EAAA,EACL,KAAK,KADA,EACK;AACd,MAAA,gBAAgB,EAAC,sCADH;AAEd,MAAA,MAAM,EAAE,qBAAA,CAAA,SAAA,CAAU,KAAV,EAAkB,MAAlB,CAFM;AAGd,MAAA,mBAAmB,EAAE,WAAA,CAAA;AAHP,KADL,CAAX,CADF;AAQD,GAXM;;AANI,EAAA,YAAY,GAAA,OAAA,CAAA,UAAA,CAAA,CADxB,WAAA,CAAA,YAAA,CAAa,cAAb,EAA6B,CAAC,OAAD,EAAU,QAAV,CAA7B,EAAkD,IAAlD,CACwB,CAAA,EAAZ,YAAY,CAAZ;AAkBb,SAAA,YAAA;AAAC,CAlBD,CAAkC,WAAA,CAAA,aAAlC,CAAA;;AAAa,OAAA,CAAA,YAAA,GAAA,YAAA","sourcesContent":["import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\nimport { IButtonProps } from '../Button.types';\nimport { getStyles } from './ActionButton.styles';\n\n/**\n * {@docCategory Button}\n */\n@customizable('ActionButton', ['theme', 'styles'], true)\nexport class ActionButton extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Tell BaseComponent to bypass resolution of componentRef.\n   */\n  protected _skipComponentRefResolution = true;\n\n  public render(): JSX.Element {\n    const { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        {...this.props}\n        variantClassName=\"ms-Button--action ms-Button--command\"\n        styles={getStyles(theme!, styles)}\n        onRenderDescription={nullRender}\n      />\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}