{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport GrapesJS from 'grapesjs';\nimport gjsBasicBlocks from 'grapesjs-blocks-basic';\nimport Head from 'next/head';\nimport { useEffect, useState } from 'react';\nexport default (({\n  id = 'grapesjs-react-editor',\n  components = [],\n  blocks = [],\n  plugins = [],\n  blockManager,\n  storageManager\n}) => {\n  const {\n    0: editor,\n    1: setEditor\n  } = useState(null);\n  useEffect(() => {\n    if (!editor) {\n      let eplugins = [...plugins, gjsBasicBlocks];\n      const e = GrapesJS.init({\n        blockManager,\n        storageManager,\n        container: `#${id}`,\n        fromElement: true,\n        eplugins\n      });\n      const defaultType = e.DomComponents.getType('default');\n      const defaultModel = defaultType.model;\n      const defaultView = defaultType.view;\n      components.forEach(component => {\n        e.DomComponents.addType(component.type, {\n          model: defaultModel.extend({\n            defaults: _Object$assign({}, defaultModel.prototype.defaults)\n          }, {\n            isComponent: component.isComponent.bind(this)\n          }),\n          view: defaultView.extend({\n            events: _objectSpread({}, component.events),\n            render: component.render.bind(this)\n          })\n        });\n      });\n      blocks.forEach(block => {\n        e.BlockManager.add(block.id, block);\n      });\n      setEditor(e);\n    } else {\n      if (document) {\n        document.getElementById(id).append(editor.render());\n      }\n    }\n\n    return function cleanup() {\n      if (editor) {\n        editor.destroy();\n        GrapesJS.editors = GrapesJS.editors.filter(e => e !== editor);\n      }\n    };\n  }, []);\n  return __jsx(\"div\", {\n    id: id\n  }, __jsx(Head, null, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"/static/grapesjs/css/grapes.min.css\"\n  })));\n});","map":{"version":3,"sources":["/Users/riz/Documents/rsys/components/Grape.tsx"],"names":["GrapesJS","gjsBasicBlocks","Head","useEffect","useState","id","components","blocks","plugins","blockManager","storageManager","editor","setEditor","eplugins","e","init","container","fromElement","defaultType","DomComponents","getType","defaultModel","model","defaultView","view","forEach","component","addType","type","extend","defaults","prototype","isComponent","bind","events","render","block","BlockManager","add","document","getElementById","append","cleanup","destroy","editors","filter"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAeA,gBAAe,CAAC;AACdC,EAAAA,EAAE,GAAG,uBADS;AAEdC,EAAAA,UAAU,GAAG,EAFC;AAGdC,EAAAA,MAAM,GAAG,EAHK;AAIdC,EAAAA,OAAO,GAAG,EAJI;AAKdC,EAAAA,YALc;AAMdC,EAAAA;AANc,CAAD,KAOJ;AACT,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,MAAL,EAAa;AACX,UAAIE,QAAQ,GAAG,CAAC,GAAGL,OAAJ,EAAaP,cAAb,CAAf;AACA,YAAMa,CAAC,GAAGd,QAAQ,CAACe,IAAT,CAAc;AACtBN,QAAAA,YADsB;AAEtBC,QAAAA,cAFsB;AAGtBM,QAAAA,SAAS,EAAG,IAAGX,EAAG,EAHI;AAItBY,QAAAA,WAAW,EAAE,IAJS;AAKtBJ,QAAAA;AALsB,OAAd,CAAV;AAQA,YAAMK,WAAW,GAAGJ,CAAC,CAACK,aAAF,CAAgBC,OAAhB,CAAwB,SAAxB,CAApB;AACA,YAAMC,YAAY,GAAGH,WAAW,CAACI,KAAjC;AACA,YAAMC,WAAW,GAAGL,WAAW,CAACM,IAAhC;AACAlB,MAAAA,UAAU,CAACmB,OAAX,CAAoBC,SAAD,IAAoB;AACrCZ,QAAAA,CAAC,CAACK,aAAF,CAAgBQ,OAAhB,CAAwBD,SAAS,CAACE,IAAlC,EAAwC;AACtCN,UAAAA,KAAK,EAAED,YAAY,CAACQ,MAAb,CACL;AACEC,YAAAA,QAAQ,EAAE,eAAc,EAAd,EAAkBT,YAAY,CAACU,SAAb,CAAuBD,QAAzC;AADZ,WADK,EAIL;AACEE,YAAAA,WAAW,EAAEN,SAAS,CAACM,WAAV,CAAsBC,IAAtB,CAA2B,IAA3B;AADf,WAJK,CAD+B;AAStCT,UAAAA,IAAI,EAAED,WAAW,CAACM,MAAZ,CAAmB;AACvBK,YAAAA,MAAM,oBACDR,SAAS,CAACQ,MADT,CADiB;AAIvBC,YAAAA,MAAM,EAAET,SAAS,CAACS,MAAV,CAAiBF,IAAjB,CAAsB,IAAtB;AAJe,WAAnB;AATgC,SAAxC;AAgBD,OAjBD;AAkBA1B,MAAAA,MAAM,CAACkB,OAAP,CAAgBW,KAAD,IAAgB;AAC7BtB,QAAAA,CAAC,CAACuB,YAAF,CAAeC,GAAf,CAAmBF,KAAK,CAAC/B,EAAzB,EAA6B+B,KAA7B;AACD,OAFD;AAGAxB,MAAAA,SAAS,CAACE,CAAD,CAAT;AACD,KAnCD,MAmCO;AACL,UAAIyB,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACC,cAAT,CAAwBnC,EAAxB,EAA4BoC,MAA5B,CAAmC9B,MAAM,CAACwB,MAAP,EAAnC;AACD;AACF;;AAED,WAAO,SAASO,OAAT,GAAmB;AACxB,UAAI/B,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACgC,OAAP;AACA3C,QAAAA,QAAQ,CAAC4C,OAAT,GAAmB5C,QAAQ,CAAC4C,OAAT,CAAiBC,MAAjB,CAAwB/B,CAAC,IAAIA,CAAC,KAAKH,MAAnC,CAAnB;AACD;AACF,KALD;AAMD,GAhDQ,EAgDN,EAhDM,CAAT;AAkDA,SACE;AAAK,IAAA,EAAE,EAAEN;AAAT,KACE,MAAC,IAAD,QACE;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC;AAA5B,IADF,CADF,CADF;AAOD,CAnED","sourcesContent":["import GrapesJS from 'grapesjs';\nimport gjsBasicBlocks from 'grapesjs-blocks-basic';\nimport Head from 'next/head';\nimport { useEffect, useState } from 'react';\nimport { GrapesPluginType, IStorageManager, IStyleManager } from './GrapeType';\n\ninterface IProps {\n  id: string;\n  // Preset and plugin options\n  plugins: GrapesPluginType[];\n  // Components\n  components: any[];\n  blocks: any[];\n  // Editor configurations\n  storageManager: IStorageManager;\n  blockManager: {};\n  styleManager: IStyleManager;\n}\nexport default ({\n  id = 'grapesjs-react-editor',\n  components = [],\n  blocks = [],\n  plugins = [],\n  blockManager,\n  storageManager\n}: any) => {\n  const [editor, setEditor] = useState(null);\n\n  useEffect(() => {\n    if (!editor) {\n      let eplugins = [...plugins, gjsBasicBlocks];\n      const e = GrapesJS.init({\n        blockManager,\n        storageManager,\n        container: `#${id}`,\n        fromElement: true,\n        eplugins\n      });\n\n      const defaultType = e.DomComponents.getType('default');\n      const defaultModel = defaultType.model;\n      const defaultView = defaultType.view;\n      components.forEach((component: any) => {\n        e.DomComponents.addType(component.type, {\n          model: defaultModel.extend(\n            {\n              defaults: Object.assign({}, defaultModel.prototype.defaults)\n            },\n            {\n              isComponent: component.isComponent.bind(this)\n            }\n          ),\n          view: defaultView.extend({\n            events: {\n              ...component.events\n            },\n            render: component.render.bind(this)\n          })\n        });\n      });\n      blocks.forEach((block: any) => {\n        e.BlockManager.add(block.id, block);\n      });\n      setEditor(e);\n    } else {\n      if (document) {\n        document.getElementById(id).append(editor.render());\n      }\n    }\n\n    return function cleanup() {\n      if (editor) {\n        editor.destroy();\n        GrapesJS.editors = GrapesJS.editors.filter(e => e !== editor);\n      }\n    };\n  }, []);\n\n  return (\n    <div id={id}>\n      <Head>\n        <link rel='stylesheet' href='/static/grapesjs/css/grapes.min.css' />\n      </Head>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}