{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar Button_1 = require(\"../../Button\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar FacepileButton_styles_1 = require(\"./FacepileButton.styles\");\n\nvar FacepileButton =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(FacepileButton, _super);\n\n  function FacepileButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Tell BaseComponent to bypass resolution of componentRef.\n     */\n\n\n    _this._skipComponentRefResolution = true;\n    return _this;\n  }\n\n  FacepileButton.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        styles = _a.styles,\n        rest = tslib_1.__rest(_a, [\"className\", \"styles\"]);\n\n    var customStyles = FacepileButton_styles_1.getStyles(this.props.theme, className, styles);\n    return React.createElement(Button_1.BaseButton, tslib_1.__assign({}, rest, {\n      variantClassName: \"ms-Button--facepile\",\n      styles: customStyles,\n      onRenderDescription: Utilities_1.nullRender\n    }));\n  };\n\n  FacepileButton = tslib_1.__decorate([Utilities_1.customizable('FacepileButton', ['theme', 'styles'], true)], FacepileButton);\n  return FacepileButton;\n}(Utilities_1.BaseComponent);\n\nexports.FacepileButton = FacepileButton;","map":{"version":3,"sources":["components/Facepile/FacepileButton.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAGA,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,OAAA,CAAA,SAAA,CAAA,cAAA,EAAA,MAAA;;AADpC,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAEE;;;;;AAGU,IAAA,KAAA,CAAA,2BAAA,GAA8B,IAA9B;;AASX;;AAPQ,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,QAAM,EAAA,GAAA,KAAA,KAAN;AAAA,QAAQ,SAAA,GAAA,EAAA,CAAA,SAAR;AAAA,QAAmB,MAAA,GAAA,EAAA,CAAA,MAAnB;AAAA,QAA2B,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,CAAA,CAA3B;;AAEA,QAAM,YAAY,GAAG,uBAAA,CAAA,SAAA,CAAU,KAAK,KAAL,CAAW,KAArB,EAA6B,SAA7B,EAAwC,MAAxC,CAArB;AAEA,WAAO,KAAA,CAAA,aAAA,CAAC,QAAA,CAAA,UAAD,EAAW,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,IAAL,EAAS;AAAE,MAAA,gBAAgB,EAAC,qBAAnB;AAAyC,MAAA,MAAM,EAAE,YAAjD;AAA+D,MAAA,mBAAmB,EAAE,WAAA,CAAA;AAApF,KAAT,CAAX,CAAP;AACD,GANM;;AANI,EAAA,cAAc,GAAA,OAAA,CAAA,UAAA,CAAA,CAD1B,WAAA,CAAA,YAAA,CAAa,gBAAb,EAA+B,CAAC,OAAD,EAAU,QAAV,CAA/B,EAAoD,IAApD,CAC0B,CAAA,EAAd,cAAc,CAAd;AAab,SAAA,cAAA;AAAC,CAbD,CAAoC,WAAA,CAAA,aAApC,CAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import * as React from 'react';\nimport { BaseButton, IButtonProps } from '../../Button';\nimport { BaseComponent, customizable, nullRender } from '../../Utilities';\nimport { getStyles } from './FacepileButton.styles';\n\n@customizable('FacepileButton', ['theme', 'styles'], true)\nexport class FacepileButton extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Tell BaseComponent to bypass resolution of componentRef.\n   */\n  protected _skipComponentRefResolution = true;\n\n  public render(): JSX.Element {\n    const { className, styles, ...rest } = this.props;\n\n    const customStyles = getStyles(this.props.theme!, className, styles);\n\n    return <BaseButton {...rest} variantClassName=\"ms-Button--facepile\" styles={customStyles} onRenderDescription={nullRender} />;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}