{"ast":null,"code":"import * as React from 'react';\nimport { styled, memoizeFunction } from '../../Utilities';\nimport { CheckBase } from './Check.base';\nimport { getStyles } from './Check.styles';\nexport var Check = styled(CheckBase, getStyles, undefined, {\n  scope: 'Check'\n}, true);\n/**\n * Memoized helper for rendering a Check. Always uses fast icons.\n * @param theme - Theme, so the check can be re-rendered if it changes.\n * @param checked - Whether the check is checked.\n * @param className - Class name for styling the check.\n */\n\nexport var getCheck = memoizeFunction(function (theme, checked, className) {\n  return React.createElement(Check, {\n    theme: theme,\n    checked: checked,\n    className: className,\n    useFastIcons: true\n  });\n});","map":{"version":3,"sources":["components/Check/Check.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,MAAT,EAAiB,eAAjB,QAAwC,iBAAxC;AAEA,SAAS,SAAT,QAA0B,cAA1B;AACA,SAAS,SAAT,QAA0B,gBAA1B;AAGA,OAAO,IAAM,KAAK,GAAyC,MAAM,CAC/D,SAD+D,EAE/D,SAF+D,EAG/D,SAH+D,EAI/D;AACE,EAAA,KAAK,EAAE;AADT,CAJ+D,EAO/D,IAP+D,CAA1D;AAUP;;;;;;;AAMA,OAAO,IAAM,QAAQ,GAAG,eAAe,CAAC,UAAC,KAAD,EAAiB,OAAjB,EAAoC,SAApC,EAAsD;AAC5F,SAAO,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,IAAA,KAAK,EAAE,KAAR;AAAe,IAAA,OAAO,EAAE,OAAxB;AAAiC,IAAA,SAAS,EAAE,SAA5C;AAAuD,IAAA,YAAY,EAAA;AAAnE,GAAN,CAAP;AACD,CAFsC,CAAhC","sourcesContent":["import * as React from 'react';\nimport { styled, memoizeFunction } from '../../Utilities';\nimport { ICheckProps, ICheckStyleProps, ICheckStyles } from './Check.types';\nimport { CheckBase } from './Check.base';\nimport { getStyles } from './Check.styles';\nimport { ITheme } from '../../Styling';\n\nexport const Check: React.FunctionComponent<ICheckProps> = styled<ICheckProps, ICheckStyleProps, ICheckStyles>(\n  CheckBase,\n  getStyles,\n  undefined,\n  {\n    scope: 'Check'\n  },\n  true\n);\n\n/**\n * Memoized helper for rendering a Check. Always uses fast icons.\n * @param theme - Theme, so the check can be re-rendered if it changes.\n * @param checked - Whether the check is checked.\n * @param className - Class name for styling the check.\n */\nexport const getCheck = memoizeFunction((theme?: ITheme, checked?: boolean, className?: string) => {\n  return <Check theme={theme} checked={checked} className={className} useFastIcons />;\n});\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}