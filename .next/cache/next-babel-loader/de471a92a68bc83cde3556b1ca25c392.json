{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar Styling_1 = require(\"../../Styling\");\n\nexports.getClassNames = Utilities_1.memoizeFunction(function (styles, className, isOpen, disabled, required, focused, allowFreeForm, hasErrorMessage) {\n  return {\n    container: Styling_1.mergeStyles('ms-ComboBox-container', className, styles.container),\n    label: Styling_1.mergeStyles(styles.label, disabled && styles.labelDisabled),\n    root: Styling_1.mergeStyles('ms-ComboBox', hasErrorMessage ? styles.rootError : isOpen && 'is-open', required && 'is-required', styles.root, !allowFreeForm && styles.rootDisallowFreeForm, hasErrorMessage ? styles.rootError : !disabled && focused && styles.rootFocused, !disabled && {\n      selectors: {\n        ':hover': hasErrorMessage ? styles.rootError : !isOpen && !focused && styles.rootHovered,\n        ':active': hasErrorMessage ? styles.rootError : styles.rootPressed,\n        ':focus': hasErrorMessage ? styles.rootError : styles.rootFocused\n      }\n    }, disabled && ['is-disabled', styles.rootDisabled]),\n    input: Styling_1.mergeStyles('ms-ComboBox-Input', styles.input, disabled && styles.inputDisabled),\n    errorMessage: Styling_1.mergeStyles(styles.errorMessage),\n    callout: Styling_1.mergeStyles('ms-ComboBox-callout', styles.callout),\n    optionsContainerWrapper: Styling_1.mergeStyles('ms-ComboBox-optionsContainerWrapper', styles.optionsContainerWrapper),\n    optionsContainer: Styling_1.mergeStyles('ms-ComboBox-optionsContainer', styles.optionsContainer),\n    header: Styling_1.mergeStyles('ms-ComboBox-header', styles.header),\n    divider: Styling_1.mergeStyles('ms-ComboBox-divider', styles.divider)\n  };\n});\nexports.getComboBoxOptionClassNames = Utilities_1.memoizeFunction(function (styles) {\n  return {\n    optionText: Styling_1.mergeStyles('ms-ComboBox-optionText', styles.optionText),\n    root: Styling_1.mergeStyles('ms-ComboBox-option', styles.root, {\n      selectors: {\n        ':hover': styles.rootHovered,\n        ':focus': styles.rootFocused,\n        ':active': styles.rootPressed\n      }\n    }),\n    optionTextWrapper: Styling_1.mergeStyles(styles.optionTextWrapper)\n  };\n});","map":{"version":3,"sources":["components/ComboBox/ComboBox.classNames.ts"],"names":[],"mappings":";;;;;;;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAqBa,OAAA,CAAA,aAAA,GAAgB,WAAA,CAAA,eAAA,CAC3B,UACE,MADF,EAEE,SAFF,EAGE,MAHF,EAIE,QAJF,EAKE,QALF,EAME,OANF,EAOE,aAPF,EAQE,eARF,EAQ0B;AAExB,SAAO;AACL,IAAA,SAAS,EAAE,SAAA,CAAA,WAAA,CAAY,uBAAZ,EAAqC,SAArC,EAAgD,MAAM,CAAC,SAAvD,CADN;AAEL,IAAA,KAAK,EAAE,SAAA,CAAA,WAAA,CAAY,MAAM,CAAC,KAAnB,EAA0B,QAAQ,IAAI,MAAM,CAAC,aAA7C,CAFF;AAGL,IAAA,IAAI,EAAE,SAAA,CAAA,WAAA,CACJ,aADI,EAEJ,eAAe,GAAG,MAAM,CAAC,SAAV,GAAsB,MAAM,IAAI,SAF3C,EAGJ,QAAQ,IAAI,aAHR,EAIJ,MAAM,CAAC,IAJH,EAKJ,CAAC,aAAD,IAAkB,MAAM,CAAC,oBALrB,EAMJ,eAAe,GAAG,MAAM,CAAC,SAAV,GAAsB,CAAC,QAAD,IAAa,OAAb,IAAwB,MAAM,CAAC,WANhE,EAOJ,CAAC,QAAD,IAAa;AACX,MAAA,SAAS,EAAE;AACT,kBAAU,eAAe,GAAG,MAAM,CAAC,SAAV,GAAsB,CAAC,MAAD,IAAW,CAAC,OAAZ,IAAuB,MAAM,CAAC,WADpE;AAET,mBAAW,eAAe,GAAG,MAAM,CAAC,SAAV,GAAsB,MAAM,CAAC,WAF9C;AAGT,kBAAU,eAAe,GAAG,MAAM,CAAC,SAAV,GAAsB,MAAM,CAAC;AAH7C;AADA,KAPT,EAcJ,QAAQ,IAAI,CAAC,aAAD,EAAgB,MAAM,CAAC,YAAvB,CAdR,CAHD;AAmBL,IAAA,KAAK,EAAE,SAAA,CAAA,WAAA,CAAY,mBAAZ,EAAiC,MAAM,CAAC,KAAxC,EAA+C,QAAQ,IAAI,MAAM,CAAC,aAAlE,CAnBF;AAoBL,IAAA,YAAY,EAAE,SAAA,CAAA,WAAA,CAAY,MAAM,CAAC,YAAnB,CApBT;AAqBL,IAAA,OAAO,EAAE,SAAA,CAAA,WAAA,CAAY,qBAAZ,EAAmC,MAAM,CAAC,OAA1C,CArBJ;AAsBL,IAAA,uBAAuB,EAAE,SAAA,CAAA,WAAA,CAAY,qCAAZ,EAAmD,MAAM,CAAC,uBAA1D,CAtBpB;AAuBL,IAAA,gBAAgB,EAAE,SAAA,CAAA,WAAA,CAAY,8BAAZ,EAA4C,MAAM,CAAC,gBAAnD,CAvBb;AAwBL,IAAA,MAAM,EAAE,SAAA,CAAA,WAAA,CAAY,oBAAZ,EAAkC,MAAM,CAAC,MAAzC,CAxBH;AAyBL,IAAA,OAAO,EAAE,SAAA,CAAA,WAAA,CAAY,qBAAZ,EAAmC,MAAM,CAAC,OAA1C;AAzBJ,GAAP;AA2BD,CAtC0B,CAAhB;AAyCA,OAAA,CAAA,2BAAA,GAA8B,WAAA,CAAA,eAAA,CACzC,UAAC,MAAD,EAAuC;AACrC,SAAO;AACL,IAAA,UAAU,EAAE,SAAA,CAAA,WAAA,CAAY,wBAAZ,EAAsC,MAAM,CAAC,UAA7C,CADP;AAEL,IAAA,IAAI,EAAE,SAAA,CAAA,WAAA,CAAY,oBAAZ,EAAkC,MAAM,CAAC,IAAzC,EAA+C;AACnD,MAAA,SAAS,EAAE;AACT,kBAAU,MAAM,CAAC,WADR;AAET,kBAAU,MAAM,CAAC,WAFR;AAGT,mBAAW,MAAM,CAAC;AAHT;AADwC,KAA/C,CAFD;AASL,IAAA,iBAAiB,EAAE,SAAA,CAAA,WAAA,CAAY,MAAM,CAAC,iBAAnB;AATd,GAAP;AAWD,CAbwC,CAA9B","sourcesContent":["import { IComboBoxStyles, IComboBoxOptionStyles } from './ComboBox.types';\r\nimport { memoizeFunction } from '../../Utilities';\r\nimport { mergeStyles } from '../../Styling';\r\n\r\nexport interface IComboBoxClassNames {\r\n  container: string;\r\n  label: string;\r\n  root: string;\r\n  input: string;\r\n  errorMessage: string;\r\n  callout: string;\r\n  optionsContainer: string;\r\n  header: string;\r\n  divider: string;\r\n  optionsContainerWrapper: string;\r\n}\r\n\r\nexport interface IComboBoxOptionClassNames {\r\n  optionText: string;\r\n  root: string;\r\n  optionTextWrapper: string;\r\n}\r\n\r\nexport const getClassNames = memoizeFunction(\r\n  (\r\n    styles: Partial<IComboBoxStyles>,\r\n    className: string,\r\n    isOpen: boolean,\r\n    disabled: boolean,\r\n    required: boolean,\r\n    focused: boolean,\r\n    allowFreeForm: boolean,\r\n    hasErrorMessage: boolean\r\n  ): IComboBoxClassNames => {\r\n    return {\r\n      container: mergeStyles('ms-ComboBox-container', className, styles.container),\r\n      label: mergeStyles(styles.label, disabled && styles.labelDisabled),\r\n      root: mergeStyles(\r\n        'ms-ComboBox',\r\n        hasErrorMessage ? styles.rootError : isOpen && 'is-open',\r\n        required && 'is-required',\r\n        styles.root,\r\n        !allowFreeForm && styles.rootDisallowFreeForm,\r\n        hasErrorMessage ? styles.rootError : !disabled && focused && styles.rootFocused,\r\n        !disabled && {\r\n          selectors: {\r\n            ':hover': hasErrorMessage ? styles.rootError : !isOpen && !focused && styles.rootHovered,\r\n            ':active': hasErrorMessage ? styles.rootError : styles.rootPressed,\r\n            ':focus': hasErrorMessage ? styles.rootError : styles.rootFocused\r\n          }\r\n        },\r\n        disabled && ['is-disabled', styles.rootDisabled]\r\n      ),\r\n      input: mergeStyles('ms-ComboBox-Input', styles.input, disabled && styles.inputDisabled),\r\n      errorMessage: mergeStyles(styles.errorMessage),\r\n      callout: mergeStyles('ms-ComboBox-callout', styles.callout),\r\n      optionsContainerWrapper: mergeStyles('ms-ComboBox-optionsContainerWrapper', styles.optionsContainerWrapper),\r\n      optionsContainer: mergeStyles('ms-ComboBox-optionsContainer', styles.optionsContainer),\r\n      header: mergeStyles('ms-ComboBox-header', styles.header),\r\n      divider: mergeStyles('ms-ComboBox-divider', styles.divider)\r\n    };\r\n  }\r\n);\r\n\r\nexport const getComboBoxOptionClassNames = memoizeFunction(\r\n  (styles: Partial<IComboBoxOptionStyles>): IComboBoxOptionClassNames => {\r\n    return {\r\n      optionText: mergeStyles('ms-ComboBox-optionText', styles.optionText),\r\n      root: mergeStyles('ms-ComboBox-option', styles.root, {\r\n        selectors: {\r\n          ':hover': styles.rootHovered,\r\n          ':focus': styles.rootFocused,\r\n          ':active': styles.rootPressed\r\n        }\r\n      }),\r\n      optionTextWrapper: mergeStyles(styles.optionTextWrapper)\r\n    };\r\n  }\r\n);\r\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}