{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { BaseComponent } from '../../Utilities';\nimport { ComboBox } from './ComboBox';\nimport { List } from '../../List';\n\nvar VirtualizedComboBox =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(VirtualizedComboBox, _super);\n\n  function VirtualizedComboBox() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** The combo box element */\n\n\n    _this._comboBox = React.createRef();\n    /** The virtualized list element */\n\n    _this._list = React.createRef();\n\n    _this._onRenderList = function (props) {\n      var onRenderItem = props.onRenderItem; // Render virtualized list\n\n      return React.createElement(List, {\n        componentRef: _this._list,\n        role: \"listbox\",\n        items: props.options,\n        onRenderCell: onRenderItem ? function (item) {\n          return onRenderItem(item);\n        } : function () {\n          return null;\n        }\n      });\n    };\n\n    _this._onScrollToItem = function (itemIndex) {\n      // We are using the List component, call scrollToIndex\n      _this._list.current && _this._list.current.scrollToIndex(itemIndex);\n    };\n\n    return _this;\n  }\n\n  _Object$defineProperty(VirtualizedComboBox.prototype, \"selectedOptions\", {\n    /**\n     * All selected options\n     */\n    get: function get() {\n      if (this._comboBox.current) {\n        return this._comboBox.current.selectedOptions;\n      }\n\n      return [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  VirtualizedComboBox.prototype.dismissMenu = function () {\n    if (this._comboBox.current) {\n      return this._comboBox.current.dismissMenu();\n    }\n  };\n\n  VirtualizedComboBox.prototype.focus = function () {\n    if (this._comboBox.current) {\n      this._comboBox.current.focus();\n\n      return true;\n    }\n\n    return false;\n  };\n\n  VirtualizedComboBox.prototype.render = function () {\n    return React.createElement(ComboBox, tslib_1.__assign({}, this.props, {\n      componentRef: this._comboBox,\n      onRenderList: this._onRenderList,\n      onScrollToItem: this._onScrollToItem\n    }));\n  };\n\n  return VirtualizedComboBox;\n}(BaseComponent);\n\nexport { VirtualizedComboBox };","map":{"version":3,"sources":["components/ComboBox/VirtualizedComboBox.tsx"],"names":[],"mappings":";;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,aAAT,QAA8B,iBAA9B;AACA,SAAS,QAAT,QAAyB,YAAzB;AAEA,SAAgB,IAAhB,QAA4B,YAA5B;;AAGA,IAAA,mBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,OAAA,CAAA,SAAA,CAAA,mBAAA,EAAA,MAAA;;AAAzC,WAAA,mBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AACE;;;AACQ,IAAA,KAAA,CAAA,SAAA,GAAY,KAAK,CAAC,SAAN,EAAZ;AACR;;AACQ,IAAA,KAAA,CAAA,KAAA,GAAQ,KAAK,CAAC,SAAN,EAAR;;AAiCE,IAAA,KAAA,CAAA,aAAA,GAAgB,UAAC,KAAD,EAAsB;AACtC,UAAA,YAAA,GAAA,KAAA,CAAA,YAAA,CADsC,CAG9C;;AACA,aACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AACH,QAAA,YAAY,EAAE,KAAI,CAAC,KADhB;AAEH,QAAA,IAAI,EAAC,SAFF;AAGH,QAAA,KAAK,EAAE,KAAK,CAAC,OAHV;AAIH,QAAA,YAAY,EAAE,YAAY,GAAG,UAAC,IAAD,EAAwB;AAAK,iBAAA,YAAY,CAAZ,IAAY,CAAZ;AAAkB,SAAlD,GAAqD,YAAA;AAAM,iBAAA,IAAA;AAAI;AAJtF,OAAL,CADF;AAQD,KAZS;;AAcA,IAAA,KAAA,CAAA,eAAA,GAAkB,UAAC,SAAD,EAAkB;AAC5C;AACA,MAAA,KAAI,CAAC,KAAL,CAAW,OAAX,IAAsB,KAAI,CAAC,KAAL,CAAW,OAAX,CAAmB,aAAnB,CAAiC,SAAjC,CAAtB;AACD,KAHS;;;AAIX;;AA9CC,yBAAW,mBAAA,CAAA,SAAX,EAAW,iBAAX,EAA0B;AAH1B;;;SAGA,eAAA;AACE,UAAI,KAAK,SAAL,CAAe,OAAnB,EAA4B;AAC1B,eAAO,KAAK,SAAL,CAAe,OAAf,CAAuB,eAA9B;AACD;;AACD,aAAO,EAAP;AACD,KALyB;oBAAA;;AAAA,GAA1B;;AAOO,EAAA,mBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACE,QAAI,KAAK,SAAL,CAAe,OAAnB,EAA4B;AAC1B,aAAO,KAAK,SAAL,CAAe,OAAf,CAAuB,WAAvB,EAAP;AACD;AACF,GAJM;;AAMA,EAAA,mBAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACE,QAAI,KAAK,SAAL,CAAe,OAAnB,EAA4B;AAC1B,WAAK,SAAL,CAAe,OAAf,CAAuB,KAAvB;;AACA,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,GAPM;;AASA,EAAA,mBAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,WACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,OAAA,CAAA,QAAA,CAAA,EAAA,EAAK,KAAK,KAAV,EAAe;AAAE,MAAA,YAAY,EAAE,KAAK,SAArB;AAAgC,MAAA,YAAY,EAAE,KAAK,aAAnD;AAAkE,MAAA,cAAc,EAAE,KAAK;AAAvF,KAAf,CAAT,CADF;AAGD,GAJM;;AAwBT,SAAA,mBAAA;AAAC,CAvDD,CAAyC,aAAzC,CAAA","sourcesContent":["import * as React from 'react';\nimport { BaseComponent } from '../../Utilities';\nimport { ComboBox } from './ComboBox';\nimport { IComboBoxProps, IComboBox, IComboBoxOption } from './ComboBox.types';\nimport { IList, List } from '../../List';\nimport { ISelectableOption } from '../../utilities/selectableOption/SelectableOption.types';\n\nexport class VirtualizedComboBox extends BaseComponent<IComboBoxProps, {}> implements IComboBox {\n  /** The combo box element */\n  private _comboBox = React.createRef<IComboBox>();\n  /** The virtualized list element */\n  private _list = React.createRef<IList>();\n\n  /**\n   * All selected options\n   */\n  public get selectedOptions(): IComboBoxOption[] {\n    if (this._comboBox.current) {\n      return this._comboBox.current.selectedOptions;\n    }\n    return [];\n  }\n\n  public dismissMenu(): void {\n    if (this._comboBox.current) {\n      return this._comboBox.current.dismissMenu();\n    }\n  }\n\n  public focus() {\n    if (this._comboBox.current) {\n      this._comboBox.current.focus();\n      return true;\n    }\n\n    return false;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <ComboBox {...this.props} componentRef={this._comboBox} onRenderList={this._onRenderList} onScrollToItem={this._onScrollToItem} />\n    );\n  }\n\n  protected _onRenderList = (props: IComboBoxProps): JSX.Element => {\n    const { onRenderItem } = props;\n\n    // Render virtualized list\n    return (\n      <List\n        componentRef={this._list}\n        role=\"listbox\"\n        items={props.options}\n        onRenderCell={onRenderItem ? (item: ISelectableOption) => onRenderItem(item) : () => null}\n      />\n    );\n  };\n\n  protected _onScrollToItem = (itemIndex: number): void => {\n    // We are using the List component, call scrollToIndex\n    this._list.current && this._list.current.scrollToIndex(itemIndex);\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}