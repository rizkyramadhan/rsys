{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar Utilities_1 = require(\"../../../Utilities\");\n\nvar Beak_styles_1 = require(\"./Beak.styles\");\n\nvar positioning_1 = require(\"../../../utilities/positioning\");\n\nexports.BEAK_HEIGHT = 10;\nexports.BEAK_WIDTH = 18;\n\nvar Beak =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(Beak, _super);\n\n  function Beak(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Beak.prototype.render = function () {\n    var _a = this.props,\n        left = _a.left,\n        top = _a.top,\n        bottom = _a.bottom,\n        right = _a.right,\n        color = _a.color,\n        _b = _a.direction,\n        direction = _b === void 0 ? positioning_1.RectangleEdge.top : _b;\n    var svgHeight;\n    var svgWidth;\n\n    if (direction === positioning_1.RectangleEdge.top || direction === positioning_1.RectangleEdge.bottom) {\n      svgHeight = exports.BEAK_HEIGHT;\n      svgWidth = exports.BEAK_WIDTH;\n    } else {\n      svgHeight = exports.BEAK_WIDTH;\n      svgWidth = exports.BEAK_HEIGHT;\n    }\n\n    var pointOne;\n    var pointTwo;\n    var pointThree;\n    var transform;\n\n    switch (direction) {\n      case positioning_1.RectangleEdge.top:\n      default:\n        pointOne = exports.BEAK_WIDTH / 2 + \", 0\";\n        pointTwo = exports.BEAK_WIDTH + \", \" + exports.BEAK_HEIGHT;\n        pointThree = \"0, \" + exports.BEAK_HEIGHT;\n        transform = 'translateY(-100%)';\n        break;\n\n      case positioning_1.RectangleEdge.right:\n        pointOne = \"0, 0\";\n        pointTwo = exports.BEAK_HEIGHT + \", \" + exports.BEAK_HEIGHT;\n        pointThree = \"0, \" + exports.BEAK_WIDTH;\n        transform = 'translateX(100%)';\n        break;\n\n      case positioning_1.RectangleEdge.bottom:\n        pointOne = \"0, 0\";\n        pointTwo = exports.BEAK_WIDTH + \", 0\";\n        pointThree = exports.BEAK_WIDTH / 2 + \", \" + exports.BEAK_HEIGHT;\n        transform = 'translateY(100%)';\n        break;\n\n      case positioning_1.RectangleEdge.left:\n        pointOne = exports.BEAK_HEIGHT + \", 0\";\n        pointTwo = \"0, \" + exports.BEAK_HEIGHT;\n        pointThree = exports.BEAK_HEIGHT + \", \" + exports.BEAK_WIDTH;\n        transform = 'translateX(-100%)';\n        break;\n    }\n\n    var getClassNames = Utilities_1.classNamesFunction();\n    var classNames = getClassNames(Beak_styles_1.getStyles, {\n      left: left,\n      top: top,\n      bottom: bottom,\n      right: right,\n      height: svgHeight + \"px\",\n      width: svgWidth + \"px\",\n      transform: transform,\n      color: color\n    });\n    return React.createElement(\"div\", {\n      className: classNames.root,\n      role: \"presentation\"\n    }, React.createElement(\"svg\", {\n      height: svgHeight,\n      width: svgWidth,\n      className: classNames.beak\n    }, React.createElement(\"polygon\", {\n      points: pointOne + ' ' + pointTwo + ' ' + pointThree\n    })));\n  };\n\n  return Beak;\n}(Utilities_1.BaseComponent);\n\nexports.Beak = Beak;","map":{"version":3,"sources":["components/Coachmark/Beak/Beak.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AAEa,OAAA,CAAA,WAAA,GAAc,EAAd;AACA,OAAA,CAAA,UAAA,GAAa,EAAb;;AAEb,IAAA,IAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0B,EAAA,OAAA,CAAA,SAAA,CAAA,IAAA,EAAA,MAAA;;AACxB,WAAA,IAAA,CAAY,KAAZ,EAA6B;WAC3B,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,I;AACb;;AAEM,EAAA,IAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,IAAA,GAAA,EAAA,CAAA,IAAF;AAAA,QAAQ,GAAA,GAAA,EAAA,CAAA,GAAR;AAAA,QAAa,MAAA,GAAA,EAAA,CAAA,MAAb;AAAA,QAAqB,KAAA,GAAA,EAAA,CAAA,KAArB;AAAA,QAA4B,KAAA,GAAA,EAAA,CAAA,KAA5B;AAAA,QAAmC,EAAA,GAAA,EAAA,CAAA,SAAnC;AAAA,QAAmC,SAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,aAAA,CAAA,aAAA,CAAA,GAAA,GAAA,EAAnC;AAEN,QAAI,SAAJ;AACA,QAAI,QAAJ;;AAEA,QAAI,SAAS,KAAK,aAAA,CAAA,aAAA,CAAc,GAA5B,IAAmC,SAAS,KAAK,aAAA,CAAA,aAAA,CAAc,MAAnE,EAA2E;AACzE,MAAA,SAAS,GAAG,OAAA,CAAA,WAAZ;AACA,MAAA,QAAQ,GAAG,OAAA,CAAA,UAAX;AACD,KAHD,MAGO;AACL,MAAA,SAAS,GAAG,OAAA,CAAA,UAAZ;AACA,MAAA,QAAQ,GAAG,OAAA,CAAA,WAAX;AACD;;AAED,QAAI,QAAJ;AACA,QAAI,QAAJ;AACA,QAAI,UAAJ;AACA,QAAI,SAAJ;;AAEA,YAAQ,SAAR;AACE,WAAK,aAAA,CAAA,aAAA,CAAc,GAAnB;AACA;AACE,QAAA,QAAQ,GAAM,OAAA,CAAA,UAAA,GAAa,CAAb,GAAc,KAA5B;AACA,QAAA,QAAQ,GAAM,OAAA,CAAA,UAAA,GAAU,IAAV,GAAe,OAAA,CAAA,WAA7B;AACA,QAAA,UAAU,GAAG,QAAM,OAAA,CAAA,WAAnB;AACA,QAAA,SAAS,GAAG,mBAAZ;AACA;;AACF,WAAK,aAAA,CAAA,aAAA,CAAc,KAAnB;AACE,QAAA,QAAQ,GAAG,MAAX;AACA,QAAA,QAAQ,GAAM,OAAA,CAAA,WAAA,GAAW,IAAX,GAAgB,OAAA,CAAA,WAA9B;AACA,QAAA,UAAU,GAAG,QAAM,OAAA,CAAA,UAAnB;AACA,QAAA,SAAS,GAAG,kBAAZ;AACA;;AACF,WAAK,aAAA,CAAA,aAAA,CAAc,MAAnB;AACE,QAAA,QAAQ,GAAG,MAAX;AACA,QAAA,QAAQ,GAAM,OAAA,CAAA,UAAA,GAAU,KAAxB;AACA,QAAA,UAAU,GAAM,OAAA,CAAA,UAAA,GAAa,CAAb,GAAc,IAAd,GAAmB,OAAA,CAAA,WAAnC;AACA,QAAA,SAAS,GAAG,kBAAZ;AACA;;AACF,WAAK,aAAA,CAAA,aAAA,CAAc,IAAnB;AACE,QAAA,QAAQ,GAAM,OAAA,CAAA,WAAA,GAAW,KAAzB;AACA,QAAA,QAAQ,GAAG,QAAM,OAAA,CAAA,WAAjB;AACA,QAAA,UAAU,GAAM,OAAA,CAAA,WAAA,GAAW,IAAX,GAAgB,OAAA,CAAA,UAAhC;AACA,QAAA,SAAS,GAAG,mBAAZ;AACA;AAzBJ;;AA4BA,QAAM,aAAa,GAAG,WAAA,CAAA,kBAAA,EAAtB;AACA,QAAM,UAAU,GAAG,aAAa,CAAC,aAAA,CAAA,SAAD,EAAY;AAC1C,MAAA,IAAI,EAAA,IADsC;AAE1C,MAAA,GAAG,EAAA,GAFuC;AAG1C,MAAA,MAAM,EAAA,MAHoC;AAI1C,MAAA,KAAK,EAAA,KAJqC;AAK1C,MAAA,MAAM,EAAK,SAAS,GAAA,IALsB;AAM1C,MAAA,KAAK,EAAK,QAAQ,GAAA,IANwB;AAO1C,MAAA,SAAS,EAAE,SAP+B;AAQ1C,MAAA,KAAK,EAAA;AARqC,KAAZ,CAAhC;AAWA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC,IAA3B;AAAiC,MAAA,IAAI,EAAC;AAAtC,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,MAAM,EAAE,SAAb;AAAwB,MAAA,KAAK,EAAE,QAA/B;AAAyC,MAAA,SAAS,EAAE,UAAU,CAAC;AAA/D,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAS,MAAA,MAAM,EAAE,QAAQ,GAAG,GAAX,GAAiB,QAAjB,GAA4B,GAA5B,GAAkC;AAAnD,KAAA,CADF,CADF,CADF;AAOD,GAlEM;;AAmET,SAAA,IAAA;AAAC,CAxED,CAA0B,WAAA,CAAA,aAA1B,CAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, classNamesFunction } from '../../../Utilities';\nimport { IBeakProps } from './Beak.types';\nimport { getStyles, IBeakStyles } from './Beak.styles';\nimport { IBeakStylesProps } from './Beak.types';\nimport { RectangleEdge } from '../../../utilities/positioning';\n\nexport const BEAK_HEIGHT = 10;\nexport const BEAK_WIDTH = 18;\n\nexport class Beak extends BaseComponent<IBeakProps, {}> {\n  constructor(props: IBeakProps) {\n    super(props);\n  }\n\n  public render(): JSX.Element {\n    const { left, top, bottom, right, color, direction = RectangleEdge.top } = this.props;\n\n    let svgHeight: number;\n    let svgWidth: number;\n\n    if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\n      svgHeight = BEAK_HEIGHT;\n      svgWidth = BEAK_WIDTH;\n    } else {\n      svgHeight = BEAK_WIDTH;\n      svgWidth = BEAK_HEIGHT;\n    }\n\n    let pointOne: string;\n    let pointTwo: string;\n    let pointThree: string;\n    let transform: string;\n\n    switch (direction) {\n      case RectangleEdge.top:\n      default:\n        pointOne = `${BEAK_WIDTH / 2}, 0`;\n        pointTwo = `${BEAK_WIDTH}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_HEIGHT}`;\n        transform = 'translateY(-100%)';\n        break;\n      case RectangleEdge.right:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_HEIGHT}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_WIDTH}`;\n        transform = 'translateX(100%)';\n        break;\n      case RectangleEdge.bottom:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_WIDTH}, 0`;\n        pointThree = `${BEAK_WIDTH / 2}, ${BEAK_HEIGHT}`;\n        transform = 'translateY(100%)';\n        break;\n      case RectangleEdge.left:\n        pointOne = `${BEAK_HEIGHT}, 0`;\n        pointTwo = `0, ${BEAK_HEIGHT}`;\n        pointThree = `${BEAK_HEIGHT}, ${BEAK_WIDTH}`;\n        transform = 'translateX(-100%)';\n        break;\n    }\n\n    const getClassNames = classNamesFunction<IBeakStylesProps, IBeakStyles>();\n    const classNames = getClassNames(getStyles, {\n      left,\n      top,\n      bottom,\n      right,\n      height: `${svgHeight}px`,\n      width: `${svgWidth}px`,\n      transform: transform,\n      color\n    });\n\n    return (\n      <div className={classNames.root} role=\"presentation\">\n        <svg height={svgHeight} width={svgWidth} className={classNames.beak}>\n          <polygon points={pointOne + ' ' + pointTwo + ' ' + pointThree} />\n        </svg>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}