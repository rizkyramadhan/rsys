{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = require(\"react\");\n\nvar Utilities_1 = require(\"../../Utilities\");\n\nvar Facepile_types_1 = require(\"./Facepile.types\");\n\nvar FacepileButton_1 = require(\"./FacepileButton\");\n\nvar Icon_1 = require(\"../../Icon\");\n\nvar Persona_1 = require(\"../../Persona\");\n\nvar PersonaCoin_1 = require(\"../../PersonaCoin\");\n\nvar getClassNames = Utilities_1.classNamesFunction();\n/**\n * FacePile with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Component-Styling)\n */\n\nvar FacepileBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(FacepileBase, _super);\n\n  function FacepileBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._classNames = getClassNames(_this.props.styles, {\n      theme: _this.props.theme,\n      className: _this.props.className\n    });\n\n    _this._getPersonaControl = function (persona) {\n      var _a = _this.props,\n          getPersonaProps = _a.getPersonaProps,\n          personaSize = _a.personaSize;\n      var personaStyles = {\n        details: {\n          flex: '1 0 auto'\n        }\n      };\n      return React.createElement(Persona_1.Persona, tslib_1.__assign({\n        imageInitials: persona.imageInitials,\n        imageUrl: persona.imageUrl,\n        initialsColor: persona.initialsColor,\n        allowPhoneInitials: persona.allowPhoneInitials,\n        text: persona.personaName,\n        size: personaSize\n      }, getPersonaProps ? getPersonaProps(persona) : null, {\n        styles: personaStyles\n      }));\n    };\n\n    _this._getPersonaCoinControl = function (persona) {\n      var _a = _this.props,\n          getPersonaProps = _a.getPersonaProps,\n          personaSize = _a.personaSize;\n      return React.createElement(PersonaCoin_1.PersonaCoin, tslib_1.__assign({\n        imageInitials: persona.imageInitials,\n        imageUrl: persona.imageUrl,\n        initialsColor: persona.initialsColor,\n        allowPhoneInitials: persona.allowPhoneInitials,\n        text: persona.personaName,\n        size: personaSize\n      }, getPersonaProps ? getPersonaProps(persona) : null));\n    };\n\n    _this._ariaDescriptionId = Utilities_1.getId();\n    return _this;\n  }\n\n  FacepileBase.prototype.render = function () {\n    var overflowButtonProps = this.props.overflowButtonProps;\n    var _a = this.props,\n        chevronButtonProps = _a.chevronButtonProps,\n        maxDisplayablePersonas = _a.maxDisplayablePersonas,\n        personas = _a.personas,\n        overflowPersonas = _a.overflowPersonas,\n        showAddButton = _a.showAddButton;\n    var _classNames = this._classNames; // Add a check to make sure maxDisplayalePersonas is defined to cover the edge case of it being 0.\n\n    var numPersonasToShow = typeof maxDisplayablePersonas === 'number' ? Math.min(personas.length, maxDisplayablePersonas) : personas.length; // Added for deprecating chevronButtonProps.  Can remove after v1.0\n\n    if (chevronButtonProps && !overflowButtonProps) {\n      overflowButtonProps = chevronButtonProps;\n    }\n\n    var hasOverflowPersonas = overflowPersonas && overflowPersonas.length > 0;\n    var personasPrimary = hasOverflowPersonas ? personas : personas.slice(0, numPersonasToShow);\n    var personasOverflow = (hasOverflowPersonas ? overflowPersonas : personas.slice(numPersonasToShow)) || [];\n    return React.createElement(\"div\", {\n      className: _classNames.root\n    }, this.onRenderAriaDescription(), React.createElement(\"div\", {\n      className: _classNames.itemContainer\n    }, showAddButton ? this._getAddNewElement() : null, React.createElement(\"ul\", {\n      className: _classNames.members,\n      role: \"listbox\"\n    }, this._onRenderVisiblePersonas(personasPrimary, personasOverflow.length === 0 && personas.length === 1)), overflowButtonProps ? this._getOverflowElement(personasOverflow) : null));\n  };\n\n  FacepileBase.prototype.onRenderAriaDescription = function () {\n    var ariaDescription = this.props.ariaDescription;\n    var _classNames = this._classNames; // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n\n    return ariaDescription && React.createElement(\"span\", {\n      className: _classNames.screenReaderOnly,\n      id: this._ariaDescriptionId\n    }, ariaDescription);\n  };\n\n  FacepileBase.prototype._onRenderVisiblePersonas = function (personas, singlePersona) {\n    var _this = this;\n\n    var _a = this.props,\n        _b = _a.onRenderPersona,\n        onRenderPersona = _b === void 0 ? this._getPersonaControl : _b,\n        _c = _a.onRenderPersonaCoin,\n        onRenderPersonaCoin = _c === void 0 ? this._getPersonaCoinControl : _c;\n    return personas.map(function (persona, index) {\n      var personaControl = singlePersona ? onRenderPersona(persona, _this._getPersonaControl) : onRenderPersonaCoin(persona, _this._getPersonaCoinControl);\n      return React.createElement(\"li\", {\n        role: \"option\",\n        key: (singlePersona ? 'persona' : 'personaCoin') + \"-\" + index,\n        className: _this._classNames.member,\n        \"aria-label\": persona['aria-label'] || persona.personaName\n      }, persona.onClick ? _this._getElementWithOnClickEvent(personaControl, persona, index) : _this._getElementWithoutOnClickEvent(personaControl, persona, index));\n    });\n  };\n\n  FacepileBase.prototype._getElementWithOnClickEvent = function (personaControl, persona, index) {\n    var keytipProps = persona.keytipProps;\n    return React.createElement(FacepileButton_1.FacepileButton, tslib_1.__assign({}, Utilities_1.getNativeProps(persona, Utilities_1.buttonProperties), this._getElementProps(persona, index), {\n      keytipProps: keytipProps,\n      onClick: this._onPersonaClick.bind(this, persona)\n    }), personaControl);\n  };\n\n  FacepileBase.prototype._getElementWithoutOnClickEvent = function (personaControl, persona, index) {\n    return React.createElement(\"div\", tslib_1.__assign({}, Utilities_1.getNativeProps(persona, Utilities_1.buttonProperties), this._getElementProps(persona, index)), personaControl);\n  };\n\n  FacepileBase.prototype._getElementProps = function (persona, index) {\n    var _classNames = this._classNames;\n    return {\n      key: (!!persona.imageUrl ? 'i' : '') + index,\n      'data-is-focusable': true,\n      'aria-hidden': true,\n      className: _classNames.itemButton,\n      title: persona.personaName,\n      onMouseMove: this._onPersonaMouseMove.bind(this, persona),\n      onMouseOut: this._onPersonaMouseOut.bind(this, persona)\n    };\n  };\n\n  FacepileBase.prototype._getOverflowElement = function (personasOverflow) {\n    switch (this.props.overflowButtonType) {\n      case Facepile_types_1.OverflowButtonType.descriptive:\n        return this._getDescriptiveOverflowElement(personasOverflow);\n\n      case Facepile_types_1.OverflowButtonType.downArrow:\n        return this._getIconElement('ChevronDown');\n\n      case Facepile_types_1.OverflowButtonType.more:\n        return this._getIconElement('More');\n\n      default:\n        return null;\n    }\n  };\n\n  FacepileBase.prototype._getDescriptiveOverflowElement = function (personasOverflow) {\n    var personaSize = this.props.personaSize;\n\n    if (!personasOverflow || personasOverflow.length < 1) {\n      return null;\n    }\n\n    var personaNames = personasOverflow.map(function (p) {\n      return p.personaName;\n    }).join(', ');\n\n    var overflowButtonProps = tslib_1.__assign({\n      title: personaNames\n    }, this.props.overflowButtonProps);\n\n    var numPersonasNotPictured = Math.max(personasOverflow.length, 0);\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton_1.FacepileButton, tslib_1.__assign({}, overflowButtonProps, {\n      ariaDescription: overflowButtonProps.title,\n      className: _classNames.descriptiveOverflowButton\n    }), React.createElement(PersonaCoin_1.PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitialsNotPictured(numPersonasNotPictured),\n      initialsColor: PersonaCoin_1.PersonaInitialsColor.transparent\n    }));\n  };\n\n  FacepileBase.prototype._getIconElement = function (icon) {\n    var _a = this.props,\n        overflowButtonProps = _a.overflowButtonProps,\n        personaSize = _a.personaSize;\n    var overflowInitialsIcon = true;\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton_1.FacepileButton, tslib_1.__assign({}, overflowButtonProps, {\n      className: _classNames.overflowButton\n    }), React.createElement(PersonaCoin_1.PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitials(icon, overflowInitialsIcon),\n      initialsColor: PersonaCoin_1.PersonaInitialsColor.transparent\n    }));\n  };\n\n  FacepileBase.prototype._getAddNewElement = function () {\n    var _a = this.props,\n        addButtonProps = _a.addButtonProps,\n        personaSize = _a.personaSize;\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton_1.FacepileButton, tslib_1.__assign({}, addButtonProps, {\n      className: _classNames.addButton\n    }), React.createElement(PersonaCoin_1.PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitials('AddFriend')\n    }));\n  };\n\n  FacepileBase.prototype._onPersonaClick = function (persona, ev) {\n    persona.onClick(ev, persona);\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  FacepileBase.prototype._onPersonaMouseMove = function (persona, ev) {\n    if (!!persona.onMouseMove) {\n      persona.onMouseMove(ev, persona);\n    }\n  };\n\n  FacepileBase.prototype._onPersonaMouseOut = function (persona, ev) {\n    if (!!persona.onMouseOut) {\n      persona.onMouseOut(ev, persona);\n    }\n  };\n\n  FacepileBase.prototype._renderInitials = function (iconName, overflowButton) {\n    var _classNames = this._classNames;\n    return function () {\n      return React.createElement(Icon_1.Icon, {\n        iconName: iconName,\n        className: overflowButton ? _classNames.overflowInitialsIcon : ''\n      });\n    };\n  };\n\n  FacepileBase.prototype._renderInitialsNotPictured = function (numPersonasNotPictured) {\n    var _classNames = this._classNames;\n    return function () {\n      return React.createElement(\"span\", {\n        className: _classNames.overflowInitialsIcon\n      }, '+' + numPersonasNotPictured);\n    };\n  };\n\n  FacepileBase.defaultProps = {\n    maxDisplayablePersonas: 5,\n    personas: [],\n    overflowPersonas: [],\n    personaSize: PersonaCoin_1.PersonaSize.size32\n  };\n  return FacepileBase;\n}(Utilities_1.BaseComponent);\n\nexports.FacepileBase = FacepileBase;","map":{"version":3,"sources":["components/Facepile/Facepile.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, buttonProperties, classNamesFunction, getId, getNativeProps } from '../../Utilities';\nimport { IFacepileProps, IFacepilePersona, IFacepileStyleProps, IFacepileStyles, OverflowButtonType } from './Facepile.types';\nimport { FacepileButton } from './FacepileButton';\nimport { Icon } from '../../Icon';\nimport { Persona, IPersonaStyles } from '../../Persona';\nimport { PersonaCoin, PersonaSize, PersonaInitialsColor } from '../../PersonaCoin';\nimport { IButtonProps } from '../Button/Button.types';\n\nconst getClassNames = classNamesFunction<IFacepileStyleProps, IFacepileStyles>();\n\n/**\n * FacePile with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Component-Styling)\n */\nexport class FacepileBase extends BaseComponent<IFacepileProps, {}> {\n  public static defaultProps: IFacepileProps = {\n    maxDisplayablePersonas: 5,\n    personas: [],\n    overflowPersonas: [],\n    personaSize: PersonaSize.size32\n  };\n\n  private _ariaDescriptionId: string;\n\n  private _classNames = getClassNames(this.props.styles, {\n    theme: this.props.theme!,\n    className: this.props.className\n  });\n\n  constructor(props: IFacepileProps) {\n    super(props);\n\n    this._ariaDescriptionId = getId();\n  }\n\n  public render(): JSX.Element {\n    let { overflowButtonProps } = this.props;\n    const { chevronButtonProps, maxDisplayablePersonas, personas, overflowPersonas, showAddButton } = this.props;\n\n    const { _classNames } = this;\n\n    // Add a check to make sure maxDisplayalePersonas is defined to cover the edge case of it being 0.\n    const numPersonasToShow: number =\n      typeof maxDisplayablePersonas === 'number' ? Math.min(personas.length, maxDisplayablePersonas) : personas.length;\n\n    // Added for deprecating chevronButtonProps.  Can remove after v1.0\n    if (chevronButtonProps && !overflowButtonProps) {\n      overflowButtonProps = chevronButtonProps;\n    }\n\n    const hasOverflowPersonas = overflowPersonas && overflowPersonas.length > 0;\n    const personasPrimary: IFacepilePersona[] = hasOverflowPersonas ? personas : personas.slice(0, numPersonasToShow);\n    const personasOverflow: IFacepilePersona[] = (hasOverflowPersonas ? overflowPersonas : personas.slice(numPersonasToShow)) || [];\n\n    return (\n      <div className={_classNames.root}>\n        {this.onRenderAriaDescription()}\n        <div className={_classNames.itemContainer}>\n          {showAddButton ? this._getAddNewElement() : null}\n          <ul className={_classNames.members} role=\"listbox\">\n            {this._onRenderVisiblePersonas(personasPrimary, personasOverflow.length === 0 && personas.length === 1)}\n          </ul>\n          {overflowButtonProps ? this._getOverflowElement(personasOverflow) : null}\n        </div>\n      </div>\n    );\n  }\n\n  protected onRenderAriaDescription() {\n    const { ariaDescription } = this.props;\n\n    const { _classNames } = this;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return (\n      ariaDescription && (\n        <span className={_classNames.screenReaderOnly} id={this._ariaDescriptionId}>\n          {ariaDescription}\n        </span>\n      )\n    );\n  }\n\n  private _onRenderVisiblePersonas(personas: IFacepilePersona[], singlePersona: boolean): JSX.Element[] {\n    const { onRenderPersona = this._getPersonaControl, onRenderPersonaCoin = this._getPersonaCoinControl } = this.props;\n    return personas.map((persona: IFacepilePersona, index: number) => {\n      const personaControl: JSX.Element | null = singlePersona\n        ? onRenderPersona(persona, this._getPersonaControl)\n        : onRenderPersonaCoin(persona, this._getPersonaCoinControl);\n      return (\n        <li\n          role=\"option\"\n          key={`${singlePersona ? 'persona' : 'personaCoin'}-${index}`}\n          className={this._classNames.member}\n          aria-label={persona['aria-label'] || persona.personaName}\n        >\n          {persona.onClick\n            ? this._getElementWithOnClickEvent(personaControl, persona, index)\n            : this._getElementWithoutOnClickEvent(personaControl, persona, index)}\n        </li>\n      );\n    });\n  }\n\n  private _getPersonaControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    const personaStyles: Partial<IPersonaStyles> = {\n      details: {\n        flex: '1 0 auto'\n      }\n    };\n\n    return (\n      <Persona\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n        styles={personaStyles}\n      />\n    );\n  };\n\n  private _getPersonaCoinControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    return (\n      <PersonaCoin\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n      />\n    );\n  };\n\n  private _getElementWithOnClickEvent(personaControl: JSX.Element | null, persona: IFacepilePersona, index: number): JSX.Element {\n    const { keytipProps } = persona;\n    return (\n      <FacepileButton\n        {...getNativeProps(persona, buttonProperties)}\n        {...this._getElementProps(persona, index)}\n        keytipProps={keytipProps}\n        onClick={this._onPersonaClick.bind(this, persona)}\n      >\n        {personaControl}\n      </FacepileButton>\n    );\n  }\n\n  private _getElementWithoutOnClickEvent(personaControl: JSX.Element | null, persona: IFacepilePersona, index: number): JSX.Element {\n    return (\n      <div {...getNativeProps(persona, buttonProperties)} {...this._getElementProps(persona, index)}>\n        {personaControl}\n      </div>\n    );\n  }\n\n  private _getElementProps(\n    persona: IFacepilePersona,\n    index: number\n  ): { key: React.Key; ['data-is-focusable']: boolean } & React.HTMLAttributes<HTMLDivElement> {\n    const { _classNames } = this;\n\n    return {\n      key: (!!persona.imageUrl ? 'i' : '') + index,\n      'data-is-focusable': true,\n      'aria-hidden': true,\n      className: _classNames.itemButton,\n      title: persona.personaName,\n      onMouseMove: this._onPersonaMouseMove.bind(this, persona),\n      onMouseOut: this._onPersonaMouseOut.bind(this, persona)\n    };\n  }\n\n  private _getOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    switch (this.props.overflowButtonType) {\n      case OverflowButtonType.descriptive:\n        return this._getDescriptiveOverflowElement(personasOverflow);\n      case OverflowButtonType.downArrow:\n        return this._getIconElement('ChevronDown');\n      case OverflowButtonType.more:\n        return this._getIconElement('More');\n      default:\n        return null;\n    }\n  }\n\n  private _getDescriptiveOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    const { personaSize } = this.props;\n    if (!personasOverflow || personasOverflow.length < 1) {\n      return null;\n    }\n\n    const personaNames: string = personasOverflow.map((p: IFacepilePersona) => p.personaName).join(', ');\n    const overflowButtonProps: IButtonProps = { ...{ title: personaNames }, ...this.props.overflowButtonProps };\n    const numPersonasNotPictured: number = Math.max(personasOverflow.length, 0);\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton\n        {...overflowButtonProps}\n        ariaDescription={overflowButtonProps.title}\n        className={_classNames.descriptiveOverflowButton}\n      >\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitialsNotPictured(numPersonasNotPictured)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n\n  private _getIconElement(icon: string): JSX.Element {\n    const { overflowButtonProps, personaSize } = this.props;\n    const overflowInitialsIcon = true;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...overflowButtonProps} className={_classNames.overflowButton}>\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitials(icon, overflowInitialsIcon)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n  private _getAddNewElement(): JSX.Element {\n    const { addButtonProps, personaSize } = this.props;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...addButtonProps} className={_classNames.addButton}>\n        <PersonaCoin size={personaSize} onRenderInitials={this._renderInitials('AddFriend')} />\n      </FacepileButton>\n    );\n  }\n\n  private _onPersonaClick(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    persona.onClick!(ev, persona);\n    ev!.preventDefault();\n    ev!.stopPropagation();\n  }\n\n  private _onPersonaMouseMove(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (!!persona.onMouseMove) {\n      persona.onMouseMove(ev, persona);\n    }\n  }\n\n  private _onPersonaMouseOut(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (!!persona.onMouseOut) {\n      persona.onMouseOut(ev, persona);\n    }\n  }\n\n  private _renderInitials(iconName: string, overflowButton?: boolean): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return <Icon iconName={iconName} className={overflowButton ? _classNames.overflowInitialsIcon : ''} />;\n    };\n  }\n\n  private _renderInitialsNotPictured(numPersonasNotPictured: number): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return <span className={_classNames.overflowInitialsIcon}>{'+' + numPersonasNotPictured}</span>;\n    };\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"script"}